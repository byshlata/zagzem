<<<<<<< HEAD
[{"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\index.js":"1","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\App.js":"3","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\AppState.js":"4","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\helpers\\transplit.js":"5","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\AppRoutes.js":"6","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Loader.js":"7","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Main.js":"8","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Top.js":"9","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\StickyFooter.js":"10","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\MenuTree.jsx":"11","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Navigation.js":"12","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackForm.js":"13","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\services\\index.js":"14","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\welcome\\index.js":"15","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\contact\\index.js":"16","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\village\\index.js":"17","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\villages\\index.js":"18","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\SearchInput\\index.js":"19","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\InputPhone.js":"20","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\StyledInput.js":"21","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\api\\api.js":"22","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\services\\SimpleAccordion.js":"23","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackFormPopUp.js":"24","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Chooser.js":"25","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ReviewCard.js":"26","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\SimilarVillages.js":"27","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Page.js":"28","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ContactForm.js":"29","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackFormContact.js":"30","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\IconBlock.js":"31","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\SlickSlider.js":"32","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\index.js":"33","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\IconButton.js":"34","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\IndicatorDots.js":"35","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CarouselButtons.js":"36","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\TargetForm.js":"37","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackPlanForm.js":"38","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\MyMap.jsx":"39","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\index.js":"40","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\utils.js":"41","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\Filter.js":"42","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Icons\\index.js":"43","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\AnimSlider.js":"44","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CheckBox.js":"45","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Icons\\Icons.js":"46","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\FilterMap.js":"47","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\SingleSelect.js":"48","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\MultiSelect.js":"49","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ArrowBottomAnim\\index.js":"50","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ArrowBottomAnim\\ArrowBottomAnim.js":"51"},{"size":5531,"mtime":1659020419927,"results":"52","hashOfConfig":"53"},{"size":5201,"mtime":1659020030015,"results":"54","hashOfConfig":"53"},{"size":1312,"mtime":1659020028609,"results":"55","hashOfConfig":"53"},{"size":11424,"mtime":1659020393746,"results":"56","hashOfConfig":"53"},{"size":1478,"mtime":1659020028847,"results":"57","hashOfConfig":"53"},{"size":842,"mtime":1659020028610,"results":"58","hashOfConfig":"53"},{"size":1287,"mtime":1659020028645,"results":"59","hashOfConfig":"53"},{"size":412,"mtime":1659020028646,"results":"60","hashOfConfig":"53"},{"size":9910,"mtime":1659020028659,"results":"61","hashOfConfig":"53"},{"size":9243,"mtime":1659020028657,"results":"62","hashOfConfig":"53"},{"size":4744,"mtime":1659020028647,"results":"63","hashOfConfig":"53"},{"size":1635,"mtime":1659020028648,"results":"64","hashOfConfig":"53"},{"size":5594,"mtime":1659020028623,"results":"65","hashOfConfig":"53"},{"size":5892,"mtime":1659020030006,"results":"66","hashOfConfig":"53"},{"size":7241,"mtime":1659020030010,"results":"67","hashOfConfig":"53"},{"size":1524,"mtime":1659020030002,"results":"68","hashOfConfig":"53"},{"size":1450,"mtime":1659020030007,"results":"69","hashOfConfig":"53"},{"size":12079,"mtime":1659020353809,"results":"70","hashOfConfig":"53"},{"size":5177,"mtime":1659020028654,"results":"71","hashOfConfig":"53"},{"size":784,"mtime":1659020028644,"results":"72","hashOfConfig":"53"},{"size":1222,"mtime":1659020028658,"results":"73","hashOfConfig":"53"},{"size":1715,"mtime":1659020028612,"results":"74","hashOfConfig":"53"},{"size":5468,"mtime":1659020030004,"results":"75","hashOfConfig":"53"},{"size":5037,"mtime":1659020028625,"results":"76","hashOfConfig":"53"},{"size":8119,"mtime":1659020251187,"results":"77","hashOfConfig":"53"},{"size":7384,"mtime":1659020028650,"results":"78","hashOfConfig":"53"},{"size":2404,"mtime":1659020028656,"results":"79","hashOfConfig":"53"},{"size":24143,"mtime":1659020028649,"results":"80","hashOfConfig":"53"},{"size":2966,"mtime":1659020028629,"results":"81","hashOfConfig":"53"},{"size":6806,"mtime":1659020028624,"results":"82","hashOfConfig":"53"},{"size":1230,"mtime":1659020028637,"results":"83","hashOfConfig":"53"},{"size":1758,"mtime":1659020028614,"results":"84","hashOfConfig":"53"},{"size":56,"mtime":1659020028636,"results":"85","hashOfConfig":"53"},{"size":2096,"mtime":1659020028638,"results":"86","hashOfConfig":"53"},{"size":1032,"mtime":1659020028642,"results":"87","hashOfConfig":"53"},{"size":1256,"mtime":1659020028626,"results":"88","hashOfConfig":"53"},{"size":7765,"mtime":1659020028658,"results":"89","hashOfConfig":"53"},{"size":3927,"mtime":1659020028625,"results":"90","hashOfConfig":"53"},{"size":1720,"mtime":1659020028647,"results":"91","hashOfConfig":"53"},{"size":68,"mtime":1659020028616,"results":"92","hashOfConfig":"53"},{"size":774,"mtime":1659020028619,"results":"93","hashOfConfig":"53"},{"size":16346,"mtime":1659020225402,"results":"94","hashOfConfig":"53"},{"size":53,"mtime":1659020028641,"results":"95","hashOfConfig":"53"},{"size":2231,"mtime":1659020028614,"results":"96","hashOfConfig":"53"},{"size":1145,"mtime":1659020028627,"results":"97","hashOfConfig":"53"},{"size":293,"mtime":1659020028639,"results":"98","hashOfConfig":"53"},{"size":2659,"mtime":1659020028631,"results":"99","hashOfConfig":"53"},{"size":1952,"mtime":1659020028634,"results":"100","hashOfConfig":"53"},{"size":2239,"mtime":1659020028632,"results":"101","hashOfConfig":"53"},{"size":83,"mtime":1659020028622,"results":"102","hashOfConfig":"53"},{"size":754,"mtime":1659020028620,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j17c0d",{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\index.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\App.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\AppState.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\helpers\\transplit.js",["227"],"function translit(word){\r\n    if(word === undefined) word = 'a'\r\n\r\n    word = word.trim().split(' ').map( el => el[0].toLowerCase() + el.slice(1)).join('-')\r\n    var answer = '';\r\n    var converter = {\r\n        'а': 'a',    'б': 'b',    'в': 'v',    'г': 'g',    'д': 'd',\r\n        'е': 'e',    'ё': 'e',    'ж': 'zh',   'з': 'z',    'и': 'i',\r\n        'й': 'y',    'к': 'k',    'л': 'l',    'м': 'm',    'н': 'n',\r\n        'о': 'o',    'п': 'p',    'р': 'r',    'с': 's',    'т': 't',\r\n        'у': 'u',    'ф': 'f',    'х': 'h',    'ц': 'c',    'ч': 'ch',\r\n        'ш': 'sh',   'щ': 'sch',  'ь': '',     'ы': 'y',    'ъ': '',\r\n        'э': 'e',    'ю': 'yu',   'я': 'ya',\r\n\r\n        'А': 'A',    'Б': 'B',    'В': 'V',    'Г': 'G',    'Д': 'D',\r\n        'Е': 'E',    'Ё': 'E',    'Ж': 'Zh',   'З': 'Z',    'И': 'I',\r\n        'Й': 'Y',    'К': 'K',    'Л': 'L',    'М': 'M',    'Н': 'N',\r\n        'О': 'O',    'П': 'P',    'Р': 'R',    'С': 'S',    'Т': 'T',\r\n        'У': 'U',    'Ф': 'F',    'Х': 'H',    'Ц': 'C',    'Ч': 'Ch',\r\n        'Ш': 'Sh',   'Щ': 'Sch',  'Ь': '',     'Ы': 'Y',    'Ъ': '',\r\n        'Э': 'E',    'Ю': 'Yu',   'Я': 'Ya'\r\n    };\r\n\r\n    for (var i = 0; i < word.length; ++i ) {\r\n        if (converter[word[i]] == undefined){\r\n            answer += word[i];\r\n        } else {\r\n            answer += converter[word[i]];\r\n        }\r\n    }\r\n\r\n    return answer;\r\n}\r\n\r\nexport default translit","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\AppRoutes.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Loader.js",["228","229"],"import React, {useRef} from 'react'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport logo from '../img/logo.png';\r\nimport CircleType from 'circletype';\r\n\r\nconst Logo = styled.img`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    animation: rotate-logo-spin infinite 1s linear;\r\n  }\r\n  @keyframes rotate-logo-spin {\r\n  from {\r\n    transform: scale(1);\r\n  }\r\n  to {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\n\r\nconst Loader = () => {\r\n    // let target = useRef()\r\n    //\r\n    //\r\n    // new CircleType(target.current).radius(384);\r\n  return (\r\n    <Grid container justifyContent='center' alignItems='center' style={{position:'fixed',height:'100vh',width:'100vw',top:'0'}}>\r\n        <div style={{position:'relative'}}>\r\n            {/*<div ref={target} style={{top:'-100px',position:'absolute',fontFamily: \"Roboto,sans-serif\", color: '#3c4b5a',fontSize: '1.5rem',fontWeight: '700'}}>Загородные Земли</div>*/}\r\n            <Logo\r\n                src={logo}\r\n                style={{\r\n                    width: '200px',\r\n                    height: '200px'\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Loader \r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Main.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Top.js",["230","231","232"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Grid from '@material-ui/core/Grid'\r\n//import SearchIcon from '@material-ui/icons/Search';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\nimport List from '@material-ui/core/List'\r\n\r\nimport logo from '../img/logo.png';\r\nimport { MenuTree } from './MenuTree.jsx'\r\nimport SearchInput from './SearchInput'\r\nimport PropTypes from 'prop-types'\r\nimport AppState from \"../AppState\";\r\nimport vk from \"../svg/vk.svg\";\r\nimport instagram from \"../svg/instagram.svg\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bar: (props=>( {\r\n    height: '80px',\r\n    boxShadow: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: '0',\r\n    background: '#fff',\r\n  })),\r\n  menuButton: (props=>({\r\n    width: '50px',\r\n    height: '50px',\r\n    display: 'block',\r\n    color: '#78d85b',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    }\r\n  })),\r\n  search: {\r\n    position: 'relative',\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    [theme.breakpoints.up('md')]: {\r\n      marginLeft: theme.spacing(4),\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex'\r\n    }\r\n  },\r\n  phone: (props => ({\r\n    display: 'none',\r\n    color: '#01eb88',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex'\r\n    }\r\n  })),\r\n  logo: {\r\n    display: 'none',\r\n    width: '60px',\r\n    height: '60px',\r\n    backgroundImage: `url(${logo})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain',\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginRight: theme.spacing(2),\r\n    }\r\n  },\r\n  logoDrawer: {\r\n    width: '60px',\r\n    height: '60px',\r\n    backgroundImage: `url(${logo})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain',\r\n  },\r\n  logoText: {\r\n    // fontFamily: 'FiraRegular',\r\n    fontFamily: \"Roboto,sans-serif\",\r\n\r\n\r\n    color: '#3c4b5a',\r\n    display: 'none',\r\n    fontSize: '1.5rem',\r\n    fontWeight: '700',\r\n\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  icon: {\r\n    width: '35px',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n  menuBtn: (props => ({\r\n    position: 'relative',\r\n    color: '#3c4b5a',\r\n    transition: 'all ease .3s',\r\n    cursor: 'pointer',\r\n    marginRight: theme.spacing(3),\r\n    '&:before': {\r\n      transform: 'translateX(-50%)',\r\n      transition: 'all ease .3s',\r\n      width: '20%',\r\n      height: '4px',\r\n      position: 'absolute',\r\n      bottom: '-10px',\r\n      left: '50%',\r\n      opacity: '0',\r\n      pointerEvents: 'none',\r\n      content: \"''\",\r\n      borderRadius: '6px',\r\n      background: 'linear-gradient(90deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\r\n    },\r\n    '&:hover:before': {\r\n      width: '70%',\r\n      opacity: '1',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginRight: theme.spacing(4),\r\n    }\r\n  })),\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\n\r\nexport default function Top(props) {\r\n  const context = React.useContext(AppState)\r\n\r\n  const [showDrawer, setShowDrawer] = React.useState(false)\r\n\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const handleScroll = () => {\r\n    const position = window.pageYOffset;\r\n    setScrollPosition(position);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n\r\n    return () => {\r\n        window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   window.addEventListener('beforeinstallprompt', event => {\r\n  //     console.log('beforeinstallprompt event was fired');\r\n  //\r\n  //     // Prevent Chrome <= 67 from automatically showing the prompt\r\n  //     event.preventDefault();\r\n  //\r\n  //     // Stash the event so it can be triggered later.\r\n  //     this.installPromptEvent = event;\r\n  //     console.log(`this: ${this}`)\r\n  //\r\n  //     // Update the install UI to notify the user app can be installed\r\n  //     btnInstall.disabled = false;\r\n  //   });\r\n  //\r\n  //   const btnInstall = document.querySelector('#btnInstall');\r\n  //\r\n  //   btnInstall.addEventListener('click', function () {\r\n  //     console.log('click')\r\n  //     // Update the install UI to remove the install button\r\n  //     btnInstall.disabled = true;\r\n  //\r\n  //     // Show the modal add to home screen dialog\r\n  //     window.installPromptEvent.prompt();\r\n  //\r\n  //     // Wait for the user to respond to the prompt\r\n  //     window.installPromptEvent.userChoice.then(choice => {\r\n  //       if (choice.outcome === 'accepted') {\r\n  //         console.log('User accepted the A2HS prompt');\r\n  //       } else {\r\n  //         console.log('User dismissed the A2HS prompt');\r\n  //       }\r\n  //       // Clear the saved prompt since it can't be used again\r\n  //       this.installPromptEvent = null;\r\n  //     });\r\n  //   });\r\n  // })\r\n\r\n  const classes = useStyles({ scrollPosition });\r\n\r\n  function resetFilter(e){\r\n     context.resetFilter()\r\n\r\n  }\r\n\r\n  const menuBtns = (\r\n    <div className={classes.menu}>\r\n      <Link\r\n        to='/villages'\r\n        className={classes.menuBtn}\r\n        onClick={resetFilter}\r\n      >\r\n        <h4>Поселки</h4>\r\n      </Link>\r\n      <Link\r\n        to='/services'\r\n        className={classes.menuBtn}\r\n      >\r\n        <h4>Услуги</h4>\r\n      </Link>\r\n      <Link\r\n        to='/contact'\r\n        className={classes.menuBtn}\r\n      >\r\n        <h4>Контакты</h4>\r\n      </Link>\r\n\r\n      {/*<button*/}\r\n      {/*    id=\"btnInstall\"*/}\r\n      {/*   */}\r\n      {/*    style={{position: 'absolute', top: '23px', right: '16px', zIndex: '1'}}*/}\r\n      {/*>*/}\r\n      {/*  Install PWA For Prod*/}\r\n      {/*</button>*/}\r\n    </div>\r\n  )\r\n\r\n    return (\r\n        <>\r\n          <CssBaseline />\r\n\r\n          <HideOnScroll {...props}>\r\n            <AppBar className={classes.bar} >\r\n              <Container maxWidth='lg'>\r\n                <Toolbar style={{marginLeft:'0px', paddingLeft: '0px'}}>\r\n\r\n                  <Link to='/' style={{display:'flex', alignItems:'center'}}>\r\n                    <div  className={classes.logo}>\r\n                    </div>\r\n\r\n                    <div className={classes.logoText}\r\n                    >Загородные Земли</div>\r\n                  </Link>\r\n\r\n\r\n                  <MenuIcon\r\n                      onClick={()=>setShowDrawer(true)}\r\n                      className={classes.menuButton}\r\n                  />\r\n                  <div className={classes.search}>\r\n                    <SearchInput />\r\n                  </div>\r\n                  <div className={classes.grow} />\r\n                  {menuBtns}\r\n                  <h4\r\n                      className={classes.phone}\r\n                      onClick={()=>window.location.href='tel:84999389228'}\r\n                  >\r\n                    +7 (499) 938-92-28\r\n                  </h4>\r\n                  <img src={vk} style={{margin:'0 10px'}} className={classes.icon} onClick={()=>{window.open('https://vk.com/zagorodnyezemli', '_blank')}}/>\r\n                  <img src={instagram} className={classes.icon} onClick={()=>{window.open('https://www.instagram.com/zagzem', '_blank')}}/>\r\n                </Toolbar>\r\n              </Container>\r\n            </AppBar>\r\n          </HideOnScroll>\r\n\r\n          <SwipeableDrawer\r\n              anchor=\"left\"\r\n              open={showDrawer}\r\n              onOpen={()=>setShowDrawer(true)}\r\n              onClose={()=>setShowDrawer(false)}\r\n          >\r\n            <List\r\n                style={{\r\n                  position:'relative',\r\n                  padding:0,\r\n                  overflowX:'hidden',\r\n                  minHeight:'100%'\r\n                }}\r\n            >\r\n              <Box m={2}>\r\n                <Grid container alignItems='center'\r\n                      style={{\r\n                        minHeight:'80px',\r\n                        width:'290px',\r\n                      }}\r\n                >\r\n                  <h3 style={{textAlign:'left',lineHeight:'110%',padding:'0 0 5px 15px'}}><strong>Загородные Земли</strong></h3>\r\n                  <Grid item>\r\n                    <Box m={2}>\r\n                      <h5 className='light-text'>Продажа загородной недвижимости в Московской области</h5>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <Box m={2}>\r\n                <MenuTree hide={()=>setShowDrawer(false)} />\r\n              </Box>\r\n            </List>\r\n          </SwipeableDrawer>\r\n        </>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\StickyFooter.js",["233","234","235"],"import React from 'react'\r\nimport AppState from '../AppState'\r\nimport { Link } from 'react-router-dom'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport vk from '../svg/vk.svg'\r\nimport instagram from '../svg/instagram.svg'\r\nimport CallbackForm from './CallbackForm'\r\nimport logo from \"../img/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    padding: theme.spacing(2, 2, 2),\r\n    marginTop: 'auto',\r\n    borderTop: '1px solid #eff3f4',\r\n    backgroundColor: '#fff',\r\n  },\r\n  menuBtn: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3, 1),\r\n    color: '#3c4b5a',\r\n    textAlign: 'center',\r\n    width:'100%',\r\n    transition: 'all ease .3s',\r\n    '&:before': {\r\n      transform: 'translateX(-50%)',\r\n      transition: 'all ease .3s',\r\n      width: '20%',\r\n      height: '4px',\r\n      position: 'absolute',\r\n      top: '54px',\r\n      left: '50%',\r\n      opacity: '0',\r\n      pointerEvents: 'none',\r\n      content: \"''\",\r\n      borderRadius: '6px',\r\n      background: 'linear-gradient(90deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      '&:hover:before': {\r\n        opacity: '1',\r\n        top: '54px',\r\n        width:'85%',\r\n      }\r\n    },\r\n    '&:hover': {\r\n      // color: '#53a321',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      textAlign: 'left',\r\n      width: '211px',\r\n\r\n    },\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      '&:hover:before': {\r\n        opacity: '0'\r\n      },\r\n    },\r\n  },\r\n  menuBtn_dacha: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3, 1),\r\n    color: '#3c4b5a',\r\n    width:'100%',\r\n    transition: 'all ease .3s',\r\n    '&:before': {\r\n      transform: 'translateX(-50%)',\r\n      transition: 'all ease .3s',\r\n      width: '10%',\r\n      height: '4px',\r\n      position: 'absolute',\r\n      top: '54px',\r\n      // left: '50%',\r\n      left: '20%',\r\n      opacity: '0',\r\n      pointerEvents: 'none',\r\n      content: \"''\",\r\n      borderRadius: '6px',\r\n      background: 'linear-gradient(90deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\r\n    },\r\n    '&:hover:before': {\r\n      width: '32%',\r\n      opacity: '1',\r\n      top: '54px',\r\n      left: '20%'\r\n    },\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      '&:hover:before': {\r\n        opacity: '0'\r\n      },\r\n    },\r\n  },\r\n  menuBtn_services: {\r\n    '&:before': {\r\n      width: '10%',\r\n      opacity: '0',\r\n      left: '20%'\r\n    },\r\n    '&:hover:before': {\r\n      width: '24%',\r\n      left: '19%'\r\n    }\r\n  },\r\n  menuBtn_contact: {\r\n    '&:before': {\r\n      width: '10%',\r\n      opacity: '0',\r\n      left: '24%'\r\n    },\r\n    '&:hover:before': {\r\n      width: '36%',\r\n      left: '24%'\r\n    },\r\n\r\n  },\r\n  icons: {\r\n    maxWidth: '350px'\r\n  },\r\n  icon: {\r\n    cursor: 'pointer'\r\n  },\r\n  phone: {\r\n    textAlign: 'center',\r\n    color: '#3c4b5a',\r\n    padding: theme.spacing(1, 0, 2),\r\n  },\r\n  top: {\r\n    background: '#fff',\r\n    borderBottom: '1px solid #eff3f4',\r\n    padding: theme.spacing(1, 0, 2),\r\n  },\r\n  tail: {\r\n    padding: theme.spacing(3, 0, 1),\r\n    color: '#919fa3',\r\n  },\r\n  header: {\r\n    padding: theme.spacing(1, 1),\r\n    textAlign: 'center',\r\n    color: '#3c4b5a',\r\n    cursor: 'pointer',\r\n    [theme.breakpoints.up('md')]: {\r\n      textAlign: 'left',\r\n      width: '379px'\r\n    }\r\n  },\r\n  descr: {\r\n    padding: theme.spacing(2, 1),\r\n    textAlign: 'center',\r\n    color: '#919fa3',\r\n    [theme.breakpoints.up('md')]: {\r\n      textAlign: 'right' \r\n    }\r\n  },\r\n  logo: {\r\n    display: 'none',\r\n    width: '60px',\r\n    height: '60px',\r\n    backgroundImage: `url(${logo})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain',\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginRight: theme.spacing(2),\r\n    }\r\n  },\r\n  logoText: {\r\n    display: 'none',\r\n    color: '#01eb88',\r\n    fontSize: '1.2rem',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n\r\n  logoTitle: {\r\n    width: '308px',\r\n    fontSize: '1.5rem',\r\n    fontFamily: \"Roboto, sans-serif\",\r\n        [theme.breakpoints.up('md')]: {\r\n          fontSize: '1.5rem',\r\n          fontFamily: \"Roboto, sans-serif\"\r\n    },\r\n  }\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n  const context = React.useContext(AppState)\r\n  const [showDialog, setShowDialog] = React.useState(false)\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container justifyContent='center' alignItems=\"center\" className={classes.top}>\r\n          <Grid item xs={12} md={5}>\r\n            <div className={classes.header}>\r\n\r\n                <Link\r\n                    to='/'\r\n                    onClick={()=> window.scrollTo(0, 0)}\r\n                    style={{display:'flex', alignItems:'center'}}\r\n                >\r\n                  <div className={classes.logo} />\r\n                  <h3 className={classes.logoTitle}>Загородные Земли</h3>\r\n                </Link>\r\n\r\n\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={7}>\r\n            <Grid container direction='row' justifyContent='center' alignItems=\"center\">\r\n              <Grid item xs={12} md={5} />\r\n              <Grid item xs={12} md={7}>\r\n                <Grid container justifyContent='center'>\r\n                  <Grid container justifyContent='center' alignItems=\"center\" flexDirection='row' className={classes.icons}>\r\n\r\n                    <div className={classes.descr}>\r\n                      <h5 className='light-text' style={{padding:'0 10px'}}>Следите за нами в </h5>\r\n                    </div>\r\n                    <img src={vk} style={{marginRight:'10px'}} className={classes.icon} onClick={()=>{window.open('https://vk.com/zagorodnyezemli', '_blank')}}/>\r\n                    <img src={instagram} className={classes.icon} onClick={()=>{window.open('https://www.instagram.com/zagzem', '_blank')}}/>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Box my={2}>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Grid container direction='column'>\r\n                <Link to='/villages' className={classes.menuBtn}\r\n                  onClick={()=>context.selectOnlyVillageType(1)}\r\n\r\n                >\r\n                  <h4 className='light-text'>Коттеджные поселки</h4>\r\n                </Link>\r\n                <Link to='/villages' className={classes.menuBtn + ' ' + classes.menuBtn_dacha}\r\n                  onClick={()=>context.selectOnlyVillageType(2)}\r\n                >\r\n                  <h4 className='light-text menu-butt' >Дачные поселки</h4>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Grid container direction='column'>\r\n                <Link to='/services' className={classes.menuBtn + ' ' + classes.menuBtn_services}>\r\n                  <h4 className='light-text '>Услуги</h4>\r\n                </Link>\r\n                <Link to='/contact' className={classes.menuBtn + ' ' + classes.menuBtn_contact}>\r\n                  <h4 className='light-text '>Контакты</h4>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <Grid container justifyContent='center' alignItems=\"center\">\r\n                <Grid item xs={12} sm={6} md={12}>\r\n                  <div className={classes.phone}>\r\n                    <h3 onClick={()=>window.location.href='tel:84999389228'}>+7 (499) 938-92-28</h3>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={12}>\r\n                  <button className='main-button main-button-large'\r\n                    onClick={()=>setShowDialog(true)}\r\n                  >\r\n                    Написать нам\r\n                  </button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Grid container justifyContent='center' alignItems=\"center\"  className={classes.tail}>\r\n          {/*<div*/}\r\n          {/*    className={classes.logoText}*/}\r\n          {/*>Zagzem</div>*/}\r\n          <h5 className='light-text' style={{padding:'0 10px'}}>© 2021 Все права защищены.</h5>\r\n        </Grid>\r\n      </Container>\r\n      <Dialog\r\n        open={showDialog}\r\n        fullWidth={true}\r\n        maxWidth='sm'\r\n        TransitionComponent={Transition}\r\n        onClose={()=>setShowDialog(false)}\r\n      > \r\n        <CallbackForm />\r\n      </Dialog>\r\n    </footer>\r\n  )\r\n}\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\MenuTree.jsx",["236"],"import React from 'react'\r\nimport AppState from '../AppState'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TreeView from '@material-ui/lab/TreeView'\r\nimport TreeItem from '@material-ui/lab/TreeItem'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport HouseIcon from '@material-ui/icons/House';\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst useTreeItemStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: '#FFF',\r\n    '&:focus > $content': {\r\n      backgroundColor: '#FFF',\r\n    },\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    '& $content': {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  label: {\r\n    fontWeight: 'inherit',\r\n    color: 'inherit',\r\n  },\r\n  labelRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1.2, 0),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  labelText: {\r\n    color: '#3c4b5a',\r\n    flexGrow: 1,\r\n    lineHeight: '40px',\r\n  },\r\n}));\r\n\r\nfunction StyledTreeItem(props) {\r\n  const classes = useTreeItemStyles()\r\n  const { labelText, labelIcon: LabelIcon, color, bgColor, ...other } = props\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <h4>{labelText}</h4>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nStyledTreeItem.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelIcon: PropTypes.elementType.isRequired,\r\n  labelText: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n});\r\n\r\nconst MenuTree = (props) => {\r\n  const classes = useStyles()\r\n  const hide = props.hide\r\n  const context = React.useContext(AppState) \r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDropDownIcon />}\r\n      defaultExpandIcon={<ArrowRightIcon />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n      style={{paddingBottom:'60px'}}\r\n    >\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n      <Link to='/' onClick={()=>hide()}>\r\n      <StyledTreeItem\r\n        nodeId=\"0\"\r\n        labelText=\"Главная\"\r\n        labelIcon={HomeIcon}\r\n      />\r\n      </Link>\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText=\"Поселки\"\r\n        labelIcon={HomeWorkIcon}\r\n        color=\"#1a73e8\"\r\n        bgColor=\"#e8f0fe\"\r\n      >\r\n        <Link to='/villages' onClick={()=>{hide();context.selectOnlyVillageType(1)}}>\r\n        <StyledTreeItem\r\n          nodeId=\"2\"\r\n          labelText=\"Коттеджные поселки\"\r\n          labelIcon={HouseIcon}\r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n        </Link>\r\n        <Link to='/villages' onClick={()=>{hide();;context.selectOnlyVillageType(2)}}>\r\n        <StyledTreeItem\r\n          nodeId=\"3\"\r\n          labelText=\"Дачные поселки\"\r\n          labelIcon={HouseIcon}\r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n        </Link>\r\n      </StyledTreeItem>\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n      <Link to='/services' onClick={()=>hide()}>\r\n      <StyledTreeItem\r\n        nodeId=\"5\"\r\n        labelText=\"Услуги\"\r\n        labelIcon={PlaylistAddCheckIcon}\r\n        color=\"#1a73e8\"\r\n        bgColor=\"#e8f0fe\"\r\n      />\r\n      </Link>\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n      <Link to='/contact' onClick={()=>hide()}>\r\n      <StyledTreeItem\r\n        nodeId=\"7\"\r\n        labelText=\"Контакты\"\r\n        labelIcon={PhoneIcon}\r\n        color=\"#1a73e8\"\r\n        bgColor=\"#e8f0fe\"\r\n      />\r\n      </Link>\r\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\r\n    </TreeView>\r\n  );\r\n}\r\n\r\nexport { MenuTree }\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Navigation.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackForm.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\services\\index.js",["237"],"import React from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Container from '@material-ui/core/Container'\r\nimport Chooser from \"../../components/Chooser\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Filter from \"../../components/Filter\";\r\nimport {SimpleAccordion} from \"./SimpleAccordion\";\r\nimport zemlyaIf from '../../img/images/zemlya_if.png';\r\nimport agenstvo from '../../img/images/agenstvo.png'\r\nimport CallbackFormPopUp from \"../../components/CallbackFormPopUp\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport './index.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    land: {\r\n        flexDirection: 'column',\r\n        [theme.breakpoints.up('md')]: {\r\n\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nclass ServicesPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        showFilter: false,\r\n        showDialog: false\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  setShowDialog = () => {\r\n      this.setState({showDialog: true})\r\n  }\r\n  setCloseDialog = () => {\r\n      this.setState({showDialog: false})\r\n  }\r\n\r\n  setShowFilter = () => {\r\n        this.setState({ showFilter: true })\r\n  }\r\n\r\n  setHideFilter = () => {\r\n        this.setState({ showFilter: false })\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <Dialog\r\n              open={this.state.showDialog}\r\n              fullWidth={true}\r\n              maxWidth='sm'\r\n              TransitionComponent={Transition}\r\n              onClose={() => {\r\n                  this.setCloseDialog()\r\n              }}\r\n          >\r\n              <CallbackFormPopUp />\r\n          </Dialog>\r\n      <Container maxWidth=\"lg\">\r\n          {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\r\n        <Box my={2}>\r\n            <h2 className='title' style={{marginBottom: '22px', marginTop: '40px'}}>МЫ - <span style={{color: '#01eb88'}}>«Загородные земли»</span></h2>\r\n            <h4 className='description'>И мы предлагаем открытое сотрудничество!</h4>\r\n            <h4 style={{marginBottom: '40px'}}>Мы оказываем <span style={{color: '#01eb88'}}>услуги по созданию и реализации коттеджных и дачных поселков:</span></h4>\r\n        </Box>\r\n\r\n          <div className='land'>\r\n              <div className='land_img'>\r\n                  <img src={zemlyaIf} alt=\"\"/>\r\n              </div>\r\n              <Box>\r\n                  <h3 className='title_land' style={{\r\n                      textAlign:'left',\r\n                      color: '#3C4B5A',\r\n                      fontFamily: 'Roboto, sans-serif',\r\n                      fontWeight: '900',\r\n                      marginBottom: '40px'\r\n                  }}>Если у тебя есть земля, <span className='title_span' style={{color: '#01eb88'}}>МЫ:</span></h3>\r\n\r\n                  <SimpleAccordion/>\r\n              </Box>\r\n          </div>\r\n\r\n        <div className='agency'>\r\n            <Box my={2}>\r\n                <h3 style={{\r\n                    textAlign:'left',\r\n                    color: '#3C4B5A',\r\n                    fontFamily: 'Roboto, sans-serif',\r\n                    fontWeight: '900',\r\n                    marginBottom: '40px'\r\n                }}>Если у тебя<span style={{color: '#01eb88'}}> агентство недвижимости</span><br className='br'/> или <span style={{color: '#01eb88'}}>ты частный риелтор:</span></h3>\r\n\r\n                <Box m={2}>\r\n                    <h4 style={{color: 'black', fontWeight:'800'}}>Мы ждем от тебя:</h4>\r\n                    <h5>Поиск клиента самостоятельно и ведение его любым удобным способом.</h5>\r\n                </Box>\r\n\r\n                <Box m={2}>\r\n                    <h4 style={{color: 'black'}}>Мы предоставим тебе:</h4>\r\n                    <h5>&mdash; Юридическое сопровождение сделки</h5>\r\n                    <h5>&mdash; Офис для подписания договоров</h5>\r\n                    <h5>&mdash; Информацию о последних новостях в поселке</h5>\r\n                    <h5>&mdash; Проведем показы в наших поселках</h5>\r\n                    <h5>&mdash; Проведем БЕСПЛАТНОЕ обучение, для тебя или твоих агентов</h5>\r\n                    <h5>&mdash; Предоставим доступ к Базе знаний</h5>\r\n                </Box>\r\n            </Box>\r\n            <div className='agency_img'>\r\n                <img src={agenstvo} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <button style={{width: '350px'}} className='main-button main-button-large'\r\n                        onClick={()=>this.setShowDialog()}\r\n                >\r\n                    Написать нам\r\n                </button>\r\n            </div>\r\n\r\n\r\n          <Container maxWidth='lg' >\r\n              <Chooser />\r\n          </Container>\r\n          <div className='filter-button' onClick={this.setShowFilter}>\r\n              <h5 style={{position: 'absolute', top: '-30px'}}>Подобрать</h5>\r\n              <FilterListIcon style={{width:'55px',height:'55px',color:'#FFF'}} />\r\n          </div>\r\n      </Container>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ServicesPage\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\welcome\\index.js",["238","239","240"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Filter from '../../components/Filter'\r\nimport Chooser from '../../components/Chooser'\r\nimport ContactForm from '../../components/ContactForm'\r\nimport IconBlock from '../../components/IconBlock'\r\nimport AnimSlider from '../../components/AnimSlider'\r\nimport fonTest from '../../img/images/fon-test.jpg'\r\nimport { Link } from 'react-router-dom'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CallbackFormPopUp from \"../../components/CallbackFormPopUp\";\r\nimport {SlickSlider} from \"../../components/AnimSlider/SlickSlider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  descr: {\r\n    padding: '0px 0px 25px 0px',\r\n  },\r\n  filter: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  bg: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    zIndex: '10',\r\n    borderRadius: '15px',\r\n  },\r\n  fg: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    zIndex: '20',\r\n  },\r\n  testFon: {\r\n    width: '100%',\r\n    height: '350px',\r\n    background: `url(${fonTest})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain',\r\n  },\r\n  test: {\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: '100%',\r\n    background: '#fff',\r\n    borderRadius: '15px',\r\n    overflow: 'hidden',\r\n    margin: '50px 0',\r\n  },\r\n  filterBlock: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: 'linear-gradient(180deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\r\n    borderRadius: '15px',\r\n  },\r\n  header: {\r\n    padding: '15px',\r\n    color: '#fff',\r\n  },\r\n  welcomeHeader: {\r\n    padding: '50px 0',\r\n    fontSize: '1.7rem',\r\n    textAlign: 'center',\r\n  }\r\n}))\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst WelcomePage = (props) => {\r\n\r\n  //observer\r\n  ////////////////////////////////////////////////////\r\n  const root = useRef(null);\r\n\r\n  const options = {\r\n    rootMargin: '0px',\r\n    threshold: [ 0 ]\r\n  };\r\n\r\n  const trueCallback = function(entries, observer) {\r\n    entries.forEach((entry) => {\r\n      const {target, isIntersecting} = entry;\r\n\r\n      if (isIntersecting) {\r\n        console.log('сработало')\r\n        setShowPopUp(true)\r\n        observer.unobserve(target)\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  const observer = new IntersectionObserver( trueCallback, options );\r\n  let target\r\n////////////////////////////////////////\r\n\r\n\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const [showPopUp, setShowPopUp] = useState(false)\r\n\r\n  const handleScroll = () => {\r\n    const position = window.pageYOffset;\r\n    setScrollPosition(position);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // let btnSlider = document.querySelector('.nextButton');\r\n    // btnSlider.classList.remove(\"disabled\");\r\n\r\n\r\n    target = root.current\r\n    observer.observe( target )\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n\r\n    return () => {\r\n        window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles({ scrollPosition });\r\n  return (\r\n           <>\r\n             <Dialog\r\n                 open={showPopUp}\r\n                 fullWidth={true}\r\n                 maxWidth='sm'\r\n                 TransitionComponent={Transition}\r\n                 onClose={() => {\r\n                   setShowPopUp(false)\r\n                 }}\r\n             >\r\n               <CallbackFormPopUp />\r\n             </Dialog>\r\n\r\n      <div style={{position:'relative',width:'100%',height:'100%',top:'0'}}>\r\n        <Container maxWidth='lg' disableGutters={true}>\r\n          <SlickSlider />\r\n        </Container>\r\n      </div>\r\n\r\n      <Container maxWidth='lg'>\r\n        <h1 className={classes.welcomeHeader}>Подбери лучшее место для загородной жизни</h1>\r\n        <div className={classes.filterBlock}>\r\n          <div className={classes.filter}>\r\n            <div className={classes.bg} />\r\n            <div className={classes.fg}>\r\n              <Filter />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n                 \r\n      <Container maxWidth='lg'>\r\n        <h2 id='target' className={classes.welcomeHeader}>Почему именно мы?</h2>\r\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n          <Grid item xs={12} md={6} >\r\n            <IconBlock\r\n              iconName='like'\r\n              color='#f4f2fc'\r\n              value='Подборка и продажа земельных активов от собственника без комиссии.'\r\n            /> \r\n          </Grid>\r\n          <Grid item xs={12} md={6} >\r\n            <IconBlock\r\n              iconName='marketing'\r\n              color='#f2feed'\r\n              value='Более 2500 земельных участков в земельной базе.'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} >\r\n            <IconBlock\r\n              iconName='shield'\r\n              color='#fef0ed'\r\n              value='Юридическая чистота сделки от экспертов с опытом более 10 лет.'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} >\r\n            <IconBlock\r\n              iconName='certificate'\r\n              color='#ecfbff'\r\n              value='Гарантия на строительство и подбор участка.'\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg' >\r\n        <div className={classes.test}>\r\n          <div className={classes.testIn}>\r\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n              <Grid item xs={12} md={6} >\r\n                <h3 ref={root}>Заполните форму и получите полный каталог поселков на почту и скидку 3%</h3>\r\n                <center>\r\n                  <Box m={2}>\r\n                    <button className='main-button' onClick={()=>{window.open('https://mrqz.me/zagzem', '_blank')}}>\r\n                      Пройти тест\r\n                    </button>\r\n                  </Box>\r\n                </center>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <Link\r\n                    to='/villages'\r\n                >\r\n                <div className={classes.testFon} />\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg' >\r\n        <ContactForm />\r\n      </Container>\r\n\r\n      <Container maxWidth='lg' >\r\n        <Chooser />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WelcomePage\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\contact\\index.js",["241"],"import React from 'react'\r\nimport ContactForm from '../../components/ContactForm'\r\nimport Container from '@material-ui/core/Container'\r\nimport Chooser from \"../../components/Chooser\";\r\nimport Filter from \"../../components/Filter\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport CallbackForm from \"../../components/CallbackForm\";\r\nimport CallbackFormContact from \"../../components/CallbackFormContact\";\r\n\r\nclass ContactPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showFilter: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  setShowFilter = () => {\r\n    this.setState({ showFilter: true })\r\n  }\r\n\r\n  setHideFilter = () => {\r\n    this.setState({ showFilter: false })\r\n  }\r\n\r\n  render() {\r\n      console.log('contact')\r\n    return (\r\n      <Container maxWidth='lg'>\r\n        <CallbackFormContact />\r\n        {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\r\n        <div className='fullScreen'>\r\n          <ContactForm />\r\n        </div>\r\n        <Container maxWidth='lg' >\r\n          <Chooser />\r\n        </Container>\r\n        <div className='filter-button' onClick={this.setShowFilter}>\r\n          <h5 style={{position: 'absolute', top: '-30px'}}>Подобрать</h5>\r\n          <FilterListIcon style={{width:'55px',height:'55px',color:'#FFF'}} />\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactPage\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\village\\index.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\villages\\index.js",["242","243","244","245","246","247"],"import React, { useState, useEffect } from 'react'\r\nimport AppState from '../../AppState'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Filter from '../../components/Filter'\r\nimport ReviewCard from '../../components/ReviewCard'\r\nimport Chooser from \"../../components/Chooser\";\r\nimport { villagesThumbnail as villages } from '../../index'\r\nimport { useFilterClicked } from '../..'\r\n\r\nconst postsPerPage = 9\r\n\r\nfunction arrayOfVillages(villages) {\r\n  // creating array with directions\r\n  let buildingDirections = [\r\n    {\r\n      side: 1,\r\n      sideName: 'Северное направление',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 2,\r\n      sideName: 'Южное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 3,\r\n      sideName: 'Западное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 4,\r\n      sideName: 'Восточное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 5,\r\n      sideName: 'Юго-западное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 6,\r\n      sideName: 'Юго-восточное направление',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 7,\r\n      sideName: 'Северо-западное направление',\r\n      buildings: []\r\n    }\r\n  ]\r\n  // making an array of buildings sorting it\r\n  for (const { sideOfMkad, ...props } of villages) {\r\n    buildingDirections[sideOfMkad - 1].buildings.push({ sideOfMkad, ...props })\r\n  }\r\n\r\n  // removing all empty building directions\r\n  buildingDirections = buildingDirections.filter(({ buildings }) => buildings.length !== 0)\r\n\r\n  return buildingDirections\r\n}\r\n\r\nfunction useVillageArray(villages) {\r\n  let buildingDirections = [\r\n    {\r\n      side: 1,\r\n      sideName: 'Северное направление',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 2,\r\n      sideName: 'Южное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 3,\r\n      sideName: 'Западное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 4,\r\n      sideName: 'Восточное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 5,\r\n      sideName: 'Юго-западное направление:',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 6,\r\n      sideName: 'Юго-восточное направление',\r\n      buildings: []\r\n    },\r\n    {\r\n      side: 7,\r\n      sideName: 'Северо-западное направление',\r\n      buildings: []\r\n    }\r\n  ]\r\n  // making an array of buildings sorting it\r\n  for (const { sideOfMkad, ...props } of villages) {\r\n    buildingDirections[sideOfMkad - 1].buildings.push({ sideOfMkad, ...props })\r\n  }\r\n\r\n  // removing all empty building directions\r\n  buildingDirections = buildingDirections.filter(({ buildings }) => buildings.length !== 0)\r\n\r\n\r\n  // create two empty arrays for both holded and display posts\r\n  const buildingDirectionsDisplay = []\r\n  const buildingDirectionsHolded = []\r\n\r\n  // getting posts we should hold and display\r\n  for (const { buildings } of buildingDirections) {\r\n    buildingDirectionsDisplay.push(buildings.slice(0, postsPerPage))\r\n    buildingDirectionsHolded.push(buildings.slice(postsPerPage))\r\n  }\r\n\r\n  // push to the original array what we should display\r\n  for (const index in buildingDirections) {\r\n    buildingDirections[index].buildings = buildingDirectionsDisplay[index]\r\n  }\r\n  return { buildingDirections, buildingDirectionsHolded }\r\n}\r\n\r\nfunction VillagesPage() {\r\n  const { filteredVillages: villages } = React.useContext(AppState)\r\n  console.log('villages: ', villages);\r\n\r\n  const [filterClicked, setFilterClicked] = useFilterClicked()\r\n\r\n\r\n  const { buildingDirectionsHolded, buildingDirections } = useVillageArray(villages)\r\n\r\n  const [showFilter, setShowFilter] = useState(false)\r\n  const [render, setRender] = useState(false)\r\n\r\n  const [hideButton, setHideButton] = useState()\r\n\r\n  const [posts, setPosts] = useState(buildingDirections)\r\n  const [holdedPosts, setHoldedPosts] = useState(buildingDirectionsHolded)\r\n\r\n  React.useEffect(() => {\r\n    if (filterClicked) {\r\n      setPosts(arrayOfVillages(villages))\r\n      setHideButton(true)\r\n    }\r\n    if (!filterClicked) {\r\n      setPosts(buildingDirections)\r\n      console.log('buildingDirections: ', buildingDirections);\r\n      setHoldedPosts(buildingDirectionsHolded)\r\n      console.log('buildingDirectionsHolded: ', buildingDirectionsHolded);\r\n      setHideButton(false)\r\n    }\r\n\r\n\r\n  }, [filterClicked, villages])\r\n\r\n\r\n  function handleShowMore(index) {\r\n    // getting new posts to publshing them from holded posts  \r\n    const getNewPosts = [...posts[index].buildings, ...holdedPosts[index].slice(0, postsPerPage)]\r\n    // remove ${postsPerPage} posts from holdedPosts\r\n    const deleteHoldedPosts = [...holdedPosts[index].slice(postsPerPage)]\r\n    // making a copy of array\r\n    const postsCopied = Array.from(posts)\r\n    const holdedPostsCopied = Array.from(holdedPosts)\r\n    // pusing new posts to update value\r\n    postsCopied[index].buildings = getNewPosts\r\n    // updating holding posts\r\n    holdedPostsCopied[index] = deleteHoldedPosts\r\n\r\n    setPosts(postsCopied)\r\n    setHoldedPosts(holdedPostsCopied)\r\n  }\r\n\r\n  function handleRender() {\r\n    window.scrollTo(0, 0)\r\n    setHideButton(true)\r\n    setRender(true)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {showFilter === true ? <Filter hidden={e => setShowFilter(false)} expanded={true} /> : ''}\r\n      <Container maxWidth='lg' style={{ marginBottom: '33px' }}>\r\n        <center>\r\n          <h2>{posts.length < 1 ? 'Посёлков не найдено' : ''}</h2>\r\n        </center>\r\n        <Grid container spacing={3}>\r\n          {posts.map(({ side, sideName, buildings }, index) => (\r\n            <>\r\n              {sideName ?\r\n                <>\r\n                  <Grid item xs={12} key={'HDR' + side}>\r\n                    <h3 style={{ padding: '25px 0 15px 0' }}>{sideName}</h3>\r\n                  </Grid>\r\n                  {buildings.map((item, i) =>\r\n                    <Grid item\r\n                      key={'IL2E' + item.uname + i}\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={4}\r\n                    >\r\n                      <ReviewCard\r\n                        uid={item.uid}\r\n                        type={item.type}\r\n                        uname={item.uname}\r\n                        name={item.name}\r\n                        bgs={item.bgs}\r\n                        road={item.road}\r\n                        fromMkad={item.fromMkad}\r\n                        price={item.price}\r\n                        leftLands={item.leftLands}\r\n                        priceLands={item.priceLands}\r\n                        sideOfMkad={item.sideOfMkad}\r\n                        permittedUse={item.permittedUse}\r\n                        communications={item.communications}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  {!hideButton ?\r\n                    <div className=\"show-more\">\r\n                      <button\r\n                        onClick={() => handleShowMore(index)}\r\n                        hidden={holdedPosts[index].length === 0 ? true : false}\r\n                      >\r\n                        Показать еще\r\n                      </button>\r\n                    </div>\r\n                    : null}\r\n                </>\r\n                : null}\r\n            </>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      <div className='filter-button' onClick={e => {\r\n        setShowFilter(true)\r\n      }}>\r\n        <h5 style={{ position: 'absolute', top: '-30px' }}>Подобрать</h5>\r\n        <FilterListIcon style={{ width: '55px', height: '55px', color: '#FFF' }} />\r\n      </div>\r\n      <Container maxWidth='lg' >\r\n        <Chooser render={handleRender} />\r\n      </Container>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n// export default VillagesPage\r\n\r\n\r\nclass VillagesPage1 extends React.Component {\r\n  static contextType = AppState\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      showFilter: false,\r\n      url: 'http://poselki/wp-json/wp/v2/poselki',\r\n      render: false\r\n    }\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n  //   // debugger\r\n  //   return false\r\n  // }\r\n\r\n  // componentWillMount() {\r\n  //   this.setFiltered()\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // window.scrollTo(0, 0)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.context.resetFilter()\r\n  }\r\n\r\n  setShowFilter = () => {\r\n    this.setState({ showFilter: true })\r\n  }\r\n  setHideFilter = () => {\r\n    this.setState({ showFilter: false })\r\n  }\r\n  // setFiltered = () => {\r\n  //   this.setState({villages:this.context.filteredVillages})\r\n  // }\r\n  setRender = () => {\r\n    window.scrollTo(0, 0)\r\n    this.setState({ render: true })\r\n  }\r\n\r\n  render() {\r\n    const uniqSides = [1, 2, 3, 4, 5, 6, 7]\r\n    let villages = this.context.filteredVillages\r\n\r\n\r\n\r\n    const arrSides = []\r\n\r\n    for (let n = 0; n < uniqSides.length; n++) {\r\n      const side = uniqSides[n]\r\n      const newObj = []\r\n      let sideName = ''\r\n      if (side === 1) { sideName = 'Северное направление:' }\r\n      if (side === 2) { sideName = 'Южное направление:' }\r\n      if (side === 3) { sideName = 'Западное направление:' }\r\n      if (side === 4) { sideName = 'Восточное направление:' }\r\n      if (side === 5) { sideName = 'Юго-западное направление:' }\r\n      if (side === 6) { sideName = 'Юго-восточное направление' }\r\n      if (side === 7) { sideName = 'Северо-западное направление' }\r\n\r\n\r\n      var newArray = villages.filter(function (el) { return el.sideOfMkad === side })\r\n\r\n      if (newArray.length > 0) {\r\n        newObj.push(\r\n          <Grid item xs={12} key={'HDR' + side}>\r\n            <h3 style={{ padding: '25px 0 15px 0' }}>{sideName}</h3>\r\n          </Grid>\r\n        )\r\n        for (let i = 0; i < newArray.length; i++) {\r\n          newObj.push(\r\n            <Grid item\r\n              key={'IL2E' + newArray[i].uname + i}\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n            >\r\n              <ReviewCard\r\n                uid={newArray[i].uid}\r\n                type={newArray[i].type}\r\n                uname={newArray[i].uname}\r\n                name={newArray[i].name}\r\n                bgs={newArray[i].bgs}\r\n                road={newArray[i].road}\r\n                fromMkad={newArray[i].fromMkad}\r\n                price={newArray[i].price}\r\n                leftLands={newArray[i].leftLands}\r\n                priceLands={newArray[i].priceLands}\r\n                sideOfMkad={newArray[i].sideOfMkad}\r\n                permittedUse={newArray[i].permittedUse}\r\n                communications={newArray[i].communications}\r\n              />\r\n            </Grid>\r\n          )\r\n        }\r\n        arrSides.push(newObj)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Grid container>\r\n        {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\r\n        <Container maxWidth='lg' style={{ marginBottom: '33px' }}>\r\n          <center><h2>{arrSides.length < 1 ? 'Посёлков не найдено' : ''}</h2></center>\r\n          <Grid container spacing={3}>\r\n            {arrSides}\r\n          </Grid>\r\n        </Container>\r\n        <div className='filter-button' onClick={this.setShowFilter}>\r\n          <h5 style={{ position: 'absolute', top: '-30px' }}>Подобрать</h5>\r\n          <FilterListIcon style={{ width: '55px', height: '55px', color: '#FFF' }} />\r\n        </div>\r\n        <Container maxWidth='lg' >\r\n          <Chooser render={this.setRender} />\r\n        </Container>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VillagesPage","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\SearchInput\\index.js",["248"],"import React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\nimport Fuse from 'fuse.js';\r\nimport {villages} from \"../../index\";\r\n// import villages from '../../villages'\r\n\r\nlet characters = villages.map(el =>({ ...el, keyFields: 'поселок ' + el.name}) )\r\n\r\nconst fuse = new Fuse(characters, {\r\n  keys: [\r\n    'keyFields'\r\n  ],\r\n  includeScore: true\r\n});\r\n\r\n\r\n// const results = fuse.search('мирный');\r\n// let filter = results.map(el => ({...el.item}))\r\n\r\n\r\nconst languages = [\r\n  {\r\n    name: 'Сказка-5',\r\n    uname: 'skazka-5',\r\n  },\r\n  {\r\n    name: 'Шелест',\r\n    uname: 'shelest',\r\n  },\r\n  {\r\n    name: 'Мирный',\r\n    uname: 'mirniy',\r\n  },\r\n  {\r\n    name: 'Хомутово',\r\n    uname: 'homutovo',\r\n  },\r\n  {\r\n    name: 'Адмиральский',\r\n    uname: 'admiralskiy',\r\n  },\r\n  {\r\n    name: 'Реки',\r\n    uname: 'reki',\r\n  },\r\n  {\r\n    name: 'Игнатово',\r\n    uname: 'ignatovo',\r\n  },\r\n  {\r\n    name: 'Черничное',\r\n    uname: 'chernichnoe',\r\n  },\r\n  {\r\n    name: 'Пушкино Лайф',\r\n    uname: 'pushkino-life',\r\n  },\r\n  {\r\n    name: 'Лисичкин Луг',\r\n    uname: 'lisichkin-lug',\r\n  },\r\n  {\r\n    name: 'Гжельские узоры',\r\n    uname: 'gjelskie-uzori',\r\n  },\r\n  {\r\n    name: 'Грильяж',\r\n    uname: 'grilyag',\r\n  },\r\n  {\r\n    name: 'Земляничная поляна',\r\n    uname: 'zemlynichnaya-polyana',\r\n  },\r\n  {\r\n    name: 'Ильинское ИЖС',\r\n    uname: 'ilinskoe-igs',\r\n  },\r\n  {\r\n    name: 'Лесная сказка',\r\n    uname: 'lesnaya-skazka',\r\n  },\r\n  {\r\n    name: 'Матчино лайф',\r\n    uname: 'matchino-life',\r\n  },\r\n  {\r\n    name: 'Матчино парк',\r\n    uname: 'matchino-park',\r\n  },\r\n  {\r\n    name: 'Рэд',\r\n    uname: 'red',\r\n  },\r\n  {\r\n    name: 'Сказка 6',\r\n    uname: 'skazka-6',\r\n  },\r\n  {\r\n    name: 'Сонинский лес',\r\n    uname: 'soninskiy-les',\r\n  },\r\n  {\r\n    name: 'Степыгино',\r\n    uname: 'stepigino',\r\n  },\r\n  {\r\n    name: 'Степыгино ИЖС',\r\n    uname: 'stepigino-igs',\r\n  },\r\n  {\r\n    name: 'Фаворит',\r\n    uname: 'favorit',\r\n  },\r\n  {\r\n    name: 'Фишер',\r\n    uname: 'fisher',\r\n  },\r\n  {\r\n    name: 'Шишкино-3',\r\n    uname: 'shishkino-3',\r\n  },\r\n  {\r\n    name: 'Новая Володарка',\r\n    uname: 'new-volodarka',\r\n  },\r\n  {\r\n    name: 'Русавкино-Заречное',\r\n    uname: 'rusavkino-zarechnoe',\r\n  },\r\n  {\r\n    name: 'Флора Парк',\r\n    uname: 'flora-park',\r\n  },\r\n  {\r\n    name: 'Удино Парк',\r\n    uname: 'udino-park',\r\n  },\r\n  {\r\n    name: 'Южный парк',\r\n    uname: 'south-park',\r\n  },\r\n  {\r\n    name: 'Ртищево',\r\n    uname: 'rtishevo',\r\n  },\r\n  {\r\n    name: 'Благовещенское',\r\n    uname: 'blagoveshenskoe',\r\n  },\r\n  {\r\n    name: 'Горки лайф',\r\n    uname: 'gorki-laif',\r\n  },\r\n  {\r\n    name: 'Маслово',\r\n    uname: 'maslovo',\r\n  },\r\n];\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\r\nfunction escapeRegexCharacters(str) {\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const escapedValue = escapeRegexCharacters(value.trim());\r\n  \r\n  if (escapedValue === '') {\r\n    return [];\r\n  }\r\n\r\n  // const regex = new RegExp('^' + escapedValue, 'i');\r\n\r\n  // const results = fuse.search(value);\r\n  // let filter = results.map(el => ({...el.item}))\r\n  // let filteredArrName = languages.filter(language => regex.test(language.name));\r\n\r\n  const results = fuse.search(escapedValue);\r\n  let filteredArrName = results.map(el => ({...el.item}))\r\n\r\n  return filteredArrName\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n  const uname = suggestion.uname\r\n  return (\r\n    <Link\r\n      to={`/village/${uname}`}\r\n    > \r\n    <span>{suggestion.name}</span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nclass SearchInput extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      suggestions: []\r\n    };    \r\n  }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n  \r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    const inputProps = {\r\n      placeholder: \"Поиск\",\r\n      value,\r\n      onChange: this.onChange,\r\n\r\n    };\r\n\r\n    return (\r\n          <Autosuggest\r\n              suggestions={suggestions}\r\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n              getSuggestionValue={getSuggestionValue}\r\n              renderSuggestion={renderSuggestion}\r\n              inputProps={inputProps}\r\n          />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\InputPhone.js",["249"],"import React from \"react\"\r\nimport PhoneInput from 'react-phone-number-input'\r\n//import 'react-phone-number-input/style.css'\r\nimport './InputPhone.css'\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nclass InputPhone extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const value = this.props.value\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <PhoneInput\r\n        defaultCountry=\"RU\"\r\n        placeholder=\"Введите номер телефона *\"\r\n        value={value}\r\n        onChange={this.props.setValue}\r\n        style={{\r\n          marginTop:'15px',\r\n          height:'4em',\r\n          // width: '365px'\r\n        }}\r\n      />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputPhone\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\StyledInput.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\api\\api.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\pages\\services\\SimpleAccordion.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackFormPopUp.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Chooser.js",["250","251","252","253","254"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AppState from '../AppState'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { useFilterClicked } from '..';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    backgroundColor: 'white'\r\n  },\r\n  tab: {\r\n    backgroundColor: 'white',\r\n    color: '#3c4b5a',\r\n    fontSize: '80%',\r\n    fontWeight: 'bold',\r\n  },\r\n  root: {\r\n    position: 'relative',\r\n    backgroundColor: 'white',\r\n    margin: '50px 0',\r\n    borderRadius: '15px',\r\n    overflow: 'hidden'\r\n  },\r\n  btn: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n    margin: '5px',\r\n    width: 'calc(100% - 10px)',\r\n    borderRadius: '15px',\r\n    border: '1px solid #f0f4f5',\r\n    background: '#f0f4f5',\r\n    color: '#3c4b5a',\r\n    textAlign: 'left',\r\n    padding: '17px 22px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: '#3c4b5a',\r\n      background: '#fff',\r\n    },\r\n  },\r\n  btnActive: {\r\n    color: '#53a321',\r\n    background: '#fff',\r\n    width: 'calc(100% - 10px)',\r\n    border: '1px solid #53a321',\r\n    alignItems: 'center',\r\n    textAlign: 'left',\r\n    padding: '17px 22px',\r\n    margin: '5px'\r\n  }\r\n}))\r\n\r\nconst arrRoadsChangeState = []\r\nconst arrAreasChangeState = []\r\nconst arrFromMkadChangeState = []\r\nconst arrPriceChangeState = []\r\n\r\nwindow.arr = arrRoadsChangeState\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction LinkTab(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      className={classes.tab}\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport default function Chooser(props) {\r\n\r\n  const context = React.useContext(AppState)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const [price, setPrice] = React.useState()\r\n  const [fromMkad, setFromMkad] = React.useState()\r\n\r\n  const [, setFilterClicked] = useFilterClicked()\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setPrice(context.selectedPriceFrom)\r\n\r\n    // console.log(context.selectedPriceFrom)\r\n    // console.log(context.selectedRoads)\r\n    // console.log(context.selectedAreas)\r\n    // console.log(context.selectedFromMkad)\r\n\r\n  }, [context.selectedPriceFrom, context.selectedRoads.length, context.selectedAreas.length, context.selectedFromMkad])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const uniqRoads = context.uniqRoads\r\n  const uniqAreas = context.uniqAreas\r\n\r\n  const uniqDist = ['30', '40', '50', '60', '70', '80', '90', '150', '200']\r\n  const uniqPrices = [\r\n    'до 250 000 р.',\r\n    'до 500 000 р.',\r\n    'до 750 000 р.',\r\n    'до 1 000 000 р.',\r\n    'до 1 500 000 р.',\r\n    'до 3 000 000 р.',\r\n    'до 5 000 000 р.',\r\n    'до 10 000 000 р.',\r\n    'до 20 000 000 р.',\r\n  ]\r\n\r\n  const arrRoads = []\r\n  const arrAreas = []\r\n  const arrDist = []\r\n  const arrPrices = []\r\n\r\n  for (let i = 0; i < uniqRoads.length; i++) {\r\n    let roads = context.selectedRoads\r\n    let roadsBtn = context.selectedRoadsBtn\r\n    arrRoads.push(\r\n      <Grid key={'ARRROADS' + i} item xs={12} sm={6} md={4} lg={3}>\r\n\r\n        <button\r\n          disabled={false}\r\n          className={~roadsBtn.indexOf(uniqRoads[i]) ? classes.btnActive : classes.btn}\r\n          style={{ fontSize: '1.1rem' }}\r\n          onClick={(e) => {\r\n            context.selectOnlyRoadBtn(uniqRoads[i])\r\n            arrRoadsChangeState.push(uniqRoads[i])\r\n          }}\r\n        >{uniqRoads[i]}</button>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  for (let i = 0; i < uniqAreas.length; i++) {\r\n    let areas = context.selectedAreas\r\n    let areasBtn = context.selectedAreasBtn\r\n    arrAreas.push(\r\n      <Grid key={'ARRAREAS' + i} item xs={12} sm={6} md={4} lg={3}>\r\n\r\n        <button\r\n          disabled={false}\r\n          className={~areasBtn.indexOf(uniqAreas[i]) ? classes.btnActive : classes.btn}\r\n          style={{ fontSize: '1.1rem' }}\r\n          onClick={(e) => {\r\n            // context.selectOnlyArea(uniqAreas[i])\r\n\r\n            context.selectOnlyAreaBtn(uniqAreas[i])\r\n            arrAreasChangeState.push(uniqAreas[i])\r\n          }}\r\n        >{uniqAreas[i]}</button>\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  for (let i = 0; i < uniqDist.length; i++) {\r\n    let dist = uniqDist[i].replace(/[^+\\d]/g, '') * 1\r\n\r\n    let distBtn = context.selectedFromMkadBtn\r\n\r\n    arrDist.push(\r\n      <Grid key={'ARRDIST' + i} item xs={12} sm={6} md={4} lg={3}>\r\n\r\n        <button\r\n          disabled={false}\r\n          className={dist === distBtn ? classes.btnActive : classes.btn}\r\n          style={{ fontSize: '1.1rem' }}\r\n          onClick={(e) => {\r\n            // context.selectOnlyDist(uniqDist[i])\r\n\r\n            context.selectOnlyFromMkadBtn(uniqDist[i])\r\n            arrFromMkadChangeState.push(uniqDist[i])\r\n          }}\r\n        >до {uniqDist[i]} км.</button>\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  for (let i = 0; i < uniqPrices.length; i++) {\r\n    let ctx2 = uniqPrices[i].replace(/[^+\\d]/g, '') * 1\r\n    let priceBtn = context.selectedPriceBtn\r\n\r\n    arrPrices.push(\r\n      <Grid key={'ARRPRICE' + i} item xs={12} sm={6} md={4} lg={3}>\r\n        <button\r\n          disabled={false}\r\n          className={ctx2 === priceBtn ? classes.btnActive : classes.btn}\r\n          style={{ fontSize: '1.1rem' }}\r\n          onClick={(e) => {\r\n            context.selectOnlyPriceBtn(uniqPrices[i])\r\n            arrPriceChangeState.push(uniqPrices[i])\r\n            // context.selectOnlyPrice(uniqPrices[i])\r\n          }\r\n\r\n          }\r\n        >Участок {uniqPrices[i]}</button>\r\n        {/*</Link>*/}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  let setFilteredRoads = () => {\r\n    arrRoadsChangeState.map(el => context.selectOnlyRoad(el))\r\n    arrAreasChangeState.map(el => context.selectOnlyArea(el))\r\n    arrFromMkadChangeState.map(el => context.selectOnlyDist(el))\r\n    arrPriceChangeState.map(el => context.selectOnlyPrice(el))\r\n    props.render()\r\n\r\n    setFilterClicked(true)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar color='inherit' position=\"static\" style={{ boxShadow: 'none', }}>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n          className={classes.tabs}\r\n        >\r\n          <LinkTab label=\"Шоссе\" />\r\n          <LinkTab label=\"Районы\" />\r\n          <LinkTab label=\"от МКАД\" />\r\n          <LinkTab label=\"Цена\" />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Grid container>\r\n          {arrRoads}\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <Grid container>\r\n          {arrAreas}\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={2}>\r\n        <Grid container>\r\n          {arrDist}\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={3}>\r\n        <Grid container>\r\n          {arrPrices}\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Link\r\n          to='/villages'\r\n        >\r\n          <button className='main-button' onClick={setFilteredRoads}>\r\n            Показать\r\n          </button>\r\n        </Link>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ReviewCard.js",["255","256","257","258"],"/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from './IconButton'\r\nimport Carousel from 're-carousel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Icons from './Icons'\r\nimport IndicatorDots from './IndicatorDots'\r\nimport AppState from \"../AppState\";\r\nimport LazyLoad from 'react-lazyload';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderRadius: '15px',\r\n    border: '1px solid #eff3f4',\r\n    boxShadow: 'none',\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '250px',\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: '250px'\r\n    },\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  cardSubHeader: {\r\n    height: '60px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    transition: '.3s opacity',\r\n    '&:hover': {\r\n      opacity: '.6',\r\n      transition: '.3s opacity',\r\n    }\r\n  },\r\n  cardPrice: {\r\n  },\r\n  infoBlock: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '40px', \r\n  },\r\n  infoIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    left: '0',\r\n    top: '0',\r\n    width: '40px',\r\n    height: '100%',\r\n  },\r\n  infoValue: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    left: '45px',\r\n    top: '0',\r\n    width: 'calc(100% - 45px)',\r\n    height: '100%',\r\n  }\r\n}));\r\n\r\nconst ItemInfo = ({ icon, value }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.infoBlock}>\r\n      <div className={classes.infoIcon}>\r\n        <Icons\r\n          name={icon}\r\n          color='#607D8B'\r\n          size={24}\r\n        />\r\n      </div>\r\n      <div className={classes.infoValue}>\r\n        <h5 className='light-text'>{value}</h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ReviewCard(props) {\r\n\r\n  const context = React.useContext(AppState)\r\n\r\n  const uid = props.uid\r\n  const type = props.type || ''\r\n  const bgs = props.bgs || []\r\n  const name = props.name || ''\r\n  const uname = props.uname || ''\r\n  const road = props.road || ''\r\n  const fromMkad = props.fromMkad || ''\r\n  const price = props.price || ''\r\n  const leftLands = props.leftLands || ''\r\n  const communications = props.communications || {}\r\n  const priceLands = props.priceLands || []\r\n  const sideOfMkad = props.sideOfMkad || ''\r\n  const permittedUse = props.permittedUse || 2\r\n\r\n  const classes = useStyles()\r\n\r\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \r\n\r\n  const slides = []\r\n\r\n  for (let i=0;i<bgs.length;i++) {\r\n    slides.push(\r\n      <LazyLoad>\r\n        <img\r\n          key={'bgil'+i}\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundImage: `url(${bgs[i]})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            objectFit: 'cover'\r\n          }}\r\n        />\r\n      </LazyLoad>\r\n    )\r\n  }\r\n\r\n  let kk = []\r\n  const infoList = []\r\n  if (communications) {\r\n    kk = Object.keys(communications)\r\n  }\r\n\r\n  // Communications\r\n  for (let i=0;i<kk.length;i++) {\r\n    const key = kk[i]\r\n    const value = communications[key] || ''\r\n    if (key === '1') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='svet'\r\n          color='#ffce01'\r\n          selected={true}\r\n          value={'Электричество '+value}\r\n          size='small'\r\n          tooltip='Электрификация'\r\n        />\r\n      )\r\n    }\r\n    if (key === '2') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'dfgh'}\r\n          iconName='water'\r\n          color='#4a7aff'\r\n          selected={true}\r\n          value={value}\r\n          size='small'\r\n          tooltip='Водоснабжение'\r\n        />\r\n      )\r\n    }\r\n    if (key === '3') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmh'}\r\n          iconName='gas'\r\n          color='#ff5b5a'\r\n          selected={true}\r\n          value={value}\r\n          size='small'\r\n          tooltip='Газификация'\r\n        />\r\n      )\r\n    }\r\n    if (key === '4') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmh'}\r\n          iconName='checkpoint'\r\n          color='#ff5acc'\r\n          selected={true}\r\n          value={value}\r\n          size='small'\r\n          tooltip='Ограждение'\r\n        />\r\n      )\r\n    }\r\n    if (key === '5') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmh'}\r\n          iconName='playground'\r\n          color='#5a5fff'\r\n          selected={true}\r\n          value={value}\r\n          size='small'\r\n          tooltip='Детская площадка'\r\n        />\r\n      )\r\n    }\r\n    if (key === '6') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmh'}\r\n          iconName='lighting'\r\n          color='#5abbff'\r\n          selected={true}\r\n          value={value}\r\n          size='small'\r\n          tooltip='Освещение улиц'\r\n        />\r\n      )\r\n    }\r\n    if (key === '7') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmh'}\r\n          iconName='sportsGround'\r\n          color='#5aff7d'\r\n          selected={true}\r\n          value={value}\r\n          size='small'\r\n          tooltip='Спортивная площадка'\r\n\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  function spaceInNumber(n) {\r\n    n += \"\";\r\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\r\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.img}>\r\n        <Carousel loop auto widgets={[IndicatorDots]}>\r\n          {slides}\r\n        </Carousel>\r\n      </div>\r\n\r\n      <Link\r\n          to={`/village/${uname}`}\r\n      >\r\n\r\n      <CardContent className={classes.cardContent}>\r\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\r\n        <ItemInfo\r\n          icon='compass'\r\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\r\n        />\r\n        <ItemInfo\r\n          icon='car'\r\n          value={`${road}`}\r\n        />\r\n        <ItemInfo\r\n          icon='price'\r\n          value={`Сотка от ${price} р.`}\r\n        />\r\n        <ItemInfo\r\n          icon='mapPlaces'\r\n          value={`Участки от ${spaceInNumber(priceLands[0]) } р.`}\r\n        />\r\n        <ItemInfo\r\n          icon='flag'\r\n          value={`В продаже ${leftLands} шт.`}\r\n        />\r\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\r\n          {infoList}\r\n        </Grid>\r\n        <center>\r\n          <button className='main-button'>Подробнее</button>\r\n        </center>\r\n      </CardContent>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\SimilarVillages.js",["259","260","261","262","263","264"],"import React from 'react';\r\nimport AppState from '../AppState'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ReviewCard from './ReviewCard'\r\n\r\nconst postsPerPage = 3;\r\nlet arrayForHoldingPosts = []\r\n\r\nconst SimilarVillages = ({uid, road, price, ...props}) => {\r\n  const context = React.useContext(AppState)\r\n\r\n  const [postsToShow, setPostsToShow] = React.useState([]);\r\n  const [next, setNext] = React.useState(3);\r\n\r\n  // const loopWithSlice = (start, end) => {\r\n  //   const slicedPosts = ReviewCard.slice(start, end);\r\n  //   arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\r\n  //   setPostsToShow(arrayForHoldingPosts);\r\n  // };\r\n\r\n  // const filteredVillages = context.filteredVillages\r\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price >= (price - price*0.2) && el.price <= (price + price*0.2))\r\n\r\n\r\n  const newArr = []\r\n  for (let i=0;i<filteredVillages.length;i++) {\r\n    if (newArr.length < 3) {\r\n    if (uid !== filteredVillages[i].uid) {\r\n      newArr.push(\r\n        <Grid item\r\n          key={'IpL'+filteredVillages[i].uname+i}\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n        > \r\n          <ReviewCard\r\n            type={filteredVillages[i].type}\r\n            uname={filteredVillages[i].uname}\r\n            name={filteredVillages[i].name}\r\n            bgs={filteredVillages[i].bgs}\r\n            road={filteredVillages[i].road}\r\n            fromMkad={filteredVillages[i].fromMkad}\r\n            price={filteredVillages[i].price}\r\n            leftLands={filteredVillages[i].leftLands}\r\n            priceLands={filteredVillages[i].priceLands}\r\n            sideOfMkad={filteredVillages[i].sideOfMkad}\r\n            communications={filteredVillages[i].communications}\r\n          />\r\n        </Grid>\r\n      )\r\n    }\r\n    }\r\n  }\r\n  // eslint-disable-next-line no-lone-blocks\r\n  {if (filteredVillages.length < 2) {\r\n    return ''\r\n  }else {\r\n    return (\r\n        <>\r\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\r\n          <Grid container spacing={3} style={{justifyContent:'center'}}>\r\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\r\n            {newArr}\r\n            {/*</div>*/}\r\n          </Grid>\r\n        </>\r\n\r\n    )\r\n  }}\r\n\r\n}\r\n\r\nexport default SimilarVillages\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Page.js",["265","266"],"import React, {useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TargetForm from './TargetForm'\r\nimport IconButton from './IconButton'\r\nimport { MyMap } from './MyMap'\r\nimport IndicatorDots from './IndicatorDots'\r\nimport CarouselButtons from './CarouselButtons'\r\nimport Carousel from 're-carousel'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport CallbackPlanForm from './CallbackPlanForm'\r\n\r\nimport testImage from '../img/images/villaLabel.png'\r\nimport CallbackFormPopUp from \"./CallbackFormPopUp\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  name: {\r\n    transition: 'all 0.3s ease-out',\r\n\r\n  },\r\n  header: {\r\n    width: '100%',\r\n    margin: '0 0px 40px 0px',\r\n  },\r\n  subInfo: {\r\n    width: '100%',\r\n    margin: '30px 0px 15px 0px',\r\n    padding: '5px',\r\n    borderRadius: '15px',\r\n  },\r\n  btns: {\r\n    margin: '30px 0px 30px 0px',\r\n  },\r\n  descrBlock: {\r\n    margin: '30px 0px 30px 0px',\r\n    background: 'none',\r\n    borderRadius: '15px',\r\n  },\r\n  descrImg: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundImage: `url(${testImage})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain'\r\n  },\r\n  targetBlock: {\r\n    margin: '30px 0px 30px 0px',\r\n    background: 'none',\r\n    borderRadius: '15px',\r\n  },  \r\n  mapSection: {\r\n    position:'relative',\r\n    margin: '30px 0px 30px 0px',\r\n    background: '#fff',\r\n    borderRadius: '15px',\r\n    minHeight: '780px',\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.up('md')]: {\r\n      minHeight: '460px',\r\n    },\r\n  },\r\n  btn: (props => ({\r\n    background: '#FFF',\r\n    color: '#0197fd',\r\n    transition: 'all ease .45s',\r\n    cursor: 'pointer',\r\n    borderRadius: '15px',\r\n    boxShadow: 'inset 0 0 0 1px #0197fd',\r\n    padding: '20px 20px',\r\n    margin: '5px 15px',\r\n    textAlign: 'center',\r\n    '&:hover': { \r\n      background: '#0197fd',\r\n      color: '#fff',\r\n    },\r\n  })),\r\n  infoMapBlock: {\r\n    position: 'relative',\r\n    width: 'calc(100% - 10px)',\r\n    height: '60px',\r\n    margin: '0px 0px 30px 10px',\r\n  },\r\n  infoBlock: {\r\n    position: 'relative',\r\n    width: 'calc(100% - 10px)',\r\n    height: '60px',\r\n    background: '#fff',\r\n    borderRadius: '15px',\r\n    margin: '5px',\r\n  },\r\n  infoIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    left: '10px',\r\n    top: '0',\r\n    width: '40px',\r\n    height: '100%',\r\n  },\r\n  infoValue: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    left: '60px',\r\n    top: '0',\r\n    width: 'calc(100% - 70px)',\r\n    height: '100%',\r\n  },\r\n  wrapperInfo: {\r\n    marginLeft: '0px',\r\n    borderRadius: '15px',\r\n    background: '#fff',\r\n    [theme.breakpoints.up('md')]: {\r\n      marginLeft: '15px',\r\n    }\r\n  },\r\n  mapInfo: {\r\n    position: 'absolute',\r\n    padding: '30px 15px',\r\n    margin: '15px',\r\n    borderRadius: '15px',\r\n    background: '#fff',\r\n  },\r\n  descrSection: {\r\n    width: 'calc(100% - 30px)',\r\n    margin: '15px',\r\n    minHeight: '300px',\r\n    background: '#fff',\r\n    borderRadius: '15px',\r\n    padding: '40px 25px',\r\n  },\r\n  genplan: (props=>({\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '95vh',\r\n    background: `url(${props.plan})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain',\r\n  }))\r\n}));\r\n\r\nconst ItemMapInfo = ({ name, value }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.infoMapBlock}>\r\n      <h5 style={{margin:'5px 0'}}>{name}</h5>\r\n      <h4 style={{margin:'0'}}>{value}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Page (props){\r\n  const village = props.village\r\n  const [showGenplan, setShowGenplan] = React.useState(false)\r\n  const [showSendPlan, setShowSendPlan] = React.useState(false)\r\n  const [showForm, setShowForm] = React.useState(false)\r\n  // console.log('village.permittedUse', village.permittedUse)\r\n\r\n  const waysToGetList = []\r\n  const communications = village.communications\r\n  const nature = village.nature\r\n  const infrastructure = village.infrastructure\r\n  const waysToGet = village.waysToGet\r\n  const descr = village.descr\r\n  const coords = village.coords || [0,0]\r\n  const bgs = village.bgs\r\n  const plan = village.plan\r\n  const safety = village.safety\r\n  const roadIn = village.roadIn\r\n  const roadTo = village.roadTo\r\n\r\n  const classes = useStyles({ plan })\r\n\r\n  let infoCoords = []\r\n  if (coords) {\r\n    infoCoords = coords\r\n  }\r\n\r\n  const infoDescr = []\r\n  if (descr) {\r\n    for (let i=0;i<descr.length;i++) {\r\n      infoDescr.push(\r\n        <p key={'dscr'+i} className={classes.textDescr}>\r\n          {descr[i]}\r\n        </p>\r\n      )\r\n    }\r\n  }\r\n\r\n  let kk = []\r\n  let nn = []\r\n  let rr = []\r\n  let ww = []\r\n  if (communications) {\r\n    kk = Object.keys(communications)\r\n  }\r\n  if (nature) {\r\n    nn = Object.keys(nature)\r\n  }\r\n  if (infrastructure) {\r\n    rr = Object.keys(infrastructure)\r\n  }\r\n  if (waysToGet) {\r\n    ww = Object.keys(waysToGet)\r\n  }\r\n\r\n  for (let i=0;i<ww.length;i++) {\r\n    const key = ww[i]\r\n    const value = waysToGet[key] || ''\r\n    if (key === '1') {\r\n      waysToGetList.push(\r\n        <Grid key={key+i+'wtg'} item xs={12} md={4} style={{height: '230px'}}>\r\n          <IconButton\r\n            iconName='car'\r\n            color='#0197fd'\r\n            selected={true}\r\n            value={'На автомобиле: ' + value}\r\n          />\r\n        </Grid>\r\n      )\r\n    }\r\n    if (key === '2') {\r\n      waysToGetList.push(\r\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\r\n          <IconButton\r\n            iconName='bus'\r\n            color='#8a6eac'\r\n            selected={true}\r\n            value={'На автобусе: ' + value}\r\n          />\r\n        </Grid>\r\n      )\r\n    }\r\n    if (key === '3') {\r\n      waysToGetList.push(\r\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\r\n          <IconButton\r\n            iconName='train'\r\n            color='#06b26b'\r\n            selected={true}\r\n            value={'На электричке: ' + value}\r\n          />\r\n        </Grid>\r\n      )\r\n    }\r\n  }\r\n   \r\n  const infoList = []\r\n  const infoListInfrastructure = []\r\n  const infoListNature = []\r\n  const infoListRoad = []\r\n  const infoListSafety = []\r\n\r\n  infoList.push(\r\n    <IconButton\r\n      key='cSXmmn'\r\n      iconName='mapPlace'\r\n      color='#0197fd'\r\n      selected={true}\r\n      value={village.permittedUse[0] === '1' ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\r\n    />\r\n  )\r\n\r\n  if (roadTo === 1) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_to_asphalt'\r\n        iconName='asphalt'\r\n        color='#6aa3a5'\r\n        selected={true}\r\n        handler={()=>{}}\r\n        value='До поселка асфальтированная дорога'\r\n      />\r\n    )\r\n  }\r\n  if (roadTo === 3) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_to_asphaltKroshka'\r\n        iconName='asphaltKroshka'\r\n        color='#4a7aff'\r\n        selected={true}\r\n        value='До поселка дорога из асф.крошки'\r\n      />\r\n    )\r\n  }\r\n  if (roadTo === 6) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_to_betonPlit'\r\n        iconName='betonPlit'\r\n        color='#ff5b5a'\r\n        selected={true}\r\n        value='До поселка дорога из бетонных плит'\r\n      />\r\n    )\r\n  }\r\n  if (roadTo === 5) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_to_5'\r\n        iconName='bitiyKirpich'\r\n        color='#ffce01'\r\n        selected={true}\r\n        value='До поселка дорога из битого кирпича'\r\n      />\r\n    )\r\n  }\r\n  if (roadTo === 4) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_to_4'\r\n        iconName='gruntovka'\r\n        color='#06b26b'\r\n        selected={true}\r\n        value='До поселка грунтовая дорога'\r\n      />\r\n    )\r\n  }\r\n  if (roadTo === 2) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_to_2'\r\n        iconName='sheben'\r\n        color='#8a6eac'\r\n        selected={true}\r\n        value='До поселка дорога из щебня'\r\n      />\r\n    )\r\n  }\r\n\r\n  if (roadIn === 1) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_in_1'\r\n        iconName='asphalt'\r\n        color='#6aa3a5'\r\n        selected={true}\r\n        value='В поселке асфальтированная дорога'\r\n      />\r\n    )\r\n  }\r\n  if (roadIn === 3) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_in_3'\r\n        iconName='asphaltKroshka'\r\n        color='#4a7aff'\r\n        selected={true}\r\n        value='В поселке дорога из асф. крошки'\r\n      />\r\n    )\r\n  }\r\n  if (roadIn === 6) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_in_6'\r\n        iconName='betonPlit'\r\n        color='#ff5b5a'\r\n        selected={true}\r\n        value='В поселке дорога из бетонных плит'\r\n      />\r\n    )\r\n  }\r\n  if (roadIn === 5) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_in_5'\r\n        iconName='bitiyKirpich'\r\n        color='#ffce01'\r\n        selected={true}\r\n        value='В поселке дорога из битого кирпича'\r\n      />\r\n    )\r\n  } \r\n  if (roadIn === 4) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_in_4'\r\n        iconName='gruntovka'\r\n        color='#06b26b'\r\n        selected={true}\r\n        value='В поселке грунтовая дорога'\r\n      />\r\n    )\r\n  }\r\n  if (roadIn === 2) {\r\n    infoListRoad.push(\r\n      <IconButton\r\n        key='road_in_2'\r\n        iconName='sheben'\r\n        color='#8a6eac'\r\n        selected={true}\r\n        value='В поселке дорога из щебня'\r\n      />\r\n    )\r\n  }\r\n\r\n  for (let i=0;i<kk.length;i++) {\r\n    const key = kk[i]\r\n    const value = communications[key] || '' \r\n    if (key === '1') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='svet'\r\n          color='#ffce01'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={'Электрофикация '+value}\r\n        />\r\n      )\r\n    } \r\n    if (key === '2') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='water'\r\n          color='#4a7aff'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '3') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='gas'\r\n          color='#ff5b5a'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '4') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='checkpoint'\r\n          color='#ff5acc'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '5') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='playground'\r\n          color='#5a5fff'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '6') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='lighting'\r\n          color='#5abbff'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '7') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='sportsGround'\r\n          color='#5aff7d'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '8') {\r\n      infoList.push(\r\n        <IconButton\r\n          key={key+i+'cmmn'}\r\n          iconName='canalization'\r\n          color='#ff9e5a'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  for (let i=0;i<rr.length;i++) {\r\n    const key = rr[i]\r\n    const value = infrastructure[key] || ''\r\n    if (key === '1') {\r\n      infoListInfrastructure.push(\r\n        <IconButton\r\n          key={key+i+'nfrs'}\r\n          iconName='cart'\r\n          color='#8a6eac'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={'Продукты в '+value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '3') {\r\n      infoListInfrastructure.push(\r\n        <IconButton\r\n          key={key+i+'nfrs'}\r\n          iconName='school'\r\n          color='#f7173a'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={'Школа в '+value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '4') {\r\n      infoListInfrastructure.push(\r\n        <IconButton\r\n          key={key+i+'nfrs'}\r\n          iconName='detsad'\r\n          color='#4a7aff'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={'Детский сад в '+value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '5') {\r\n      infoListInfrastructure.push(\r\n        <IconButton\r\n          key={key+i+'nfrs'}\r\n          iconName='hospital'\r\n          color='#06b26b'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={'Больница в '+value}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  if (safety) {\r\n    for (let i=0;i<safety.length;i++) {\r\n      const key = safety[i]\r\n      if (key === '1') {\r\n        infoListSafety.push(\r\n          <IconButton\r\n            key={key+'sasc'}\r\n            iconName='zabor'\r\n            color='#6aa3a5'\r\n            selected={true}\r\n            handler={()=>{}}\r\n            value='Поселок огорожен'\r\n          />\r\n        )\r\n      }\r\n      if (key === '2') {   \r\n        infoListSafety.push(\r\n          <IconButton\r\n            key={key+'sasc'}\r\n            iconName='security'\r\n            color='#ff5b5a'\r\n            selected={true}\r\n            handler={()=>{}}\r\n            value='Есть охрана'\r\n          />\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let i=0;i<nn.length;i++) {\r\n    const key = nn[i]\r\n    const value = nature[key] || ''\r\n    if (key === '1') {\r\n      infoListNature.push(\r\n        <IconButton\r\n          key={key+i+'ntr'}\r\n          iconName='vodoem'\r\n          color='#5277f5'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '2') {\r\n      infoListNature.push(\r\n        <IconButton\r\n          key={key+i+'ntr'}\r\n          iconName='tree'\r\n          color='#06b26b'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n    if (key === '3') {\r\n      infoListNature.push(\r\n        <IconButton\r\n          key={key+i+'ntr'}\r\n          iconName='tree'\r\n          color='#ffce01'\r\n          selected={true}\r\n          handler={()=>{}}\r\n          value={value}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  let nearSettlementName = ''\r\n  let nearSettlementDist = ''\r\n  let nearTownName = ''\r\n  let nearTownDist = ''\r\n  let nearRailwayName = ''\r\n  let nearRailwayDist = ''\r\n  if (village.nearSettlement) {\r\n    nearSettlementName = village.nearSettlement.name\r\n    nearSettlementDist = village.nearSettlement.distance\r\n  }\r\n  if (village.nearTown) {\r\n    nearTownName = village.nearTown.name\r\n    nearTownDist = village.nearTown.distance\r\n  }\r\n  if (village.nearRailway) {\r\n    nearRailwayName = village.nearRailway.name\r\n    nearRailwayDist = village.nearRailway.distance\r\n  }\r\n\r\n  let rosreestrLink = ''\r\n  if (village.rosreestr) {\r\n    rosreestrLink = village.rosreestr \r\n  }\r\n\r\n  const slides = []\r\n\r\n  if (bgs){\r\n    for (let i=0;i<bgs.length;i++) {\r\n      slides.push(\r\n        <div\r\n          key={'bgil'+i}\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundImage: `url(${bgs[i]})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    document.getElementById('description-page').innerHTML=`${infoDescr[0].props.children}`\r\n  },[])\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  function spaceInNumber(n) {\r\n    n += \"\";\r\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\r\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n          open={showForm}\r\n          fullWidth={true}\r\n          maxWidth='sm'\r\n          // TransitionComponent={Transition}\r\n          onClose={() => {\r\n            setShowForm(false)\r\n          }}\r\n      >\r\n        <CallbackFormPopUp />\r\n      </Dialog>\r\n\r\n      <Container maxWidth='lg'>\r\n        <div className={classes.header}>\r\n          <Grid container alignItems='center'>\r\n            <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\r\n          </Grid>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={12} md={4}>\r\n              <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\r\n              <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\r\n              <h4 style={{padding:'10px 0'}}>{village.road}</h4>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\r\n              <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{spaceInNumber(village.price)}</span> руб/сотка</h4>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <Grid container>\r\n          <Grid item xs={12} md={8}>\r\n            <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\r\n              <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\r\n                {slides}\r\n              </Carousel>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <div className={classes.wrapperInfo}>\r\n              {infoList}\r\n            </div>\r\n            <div style={{margin:'30px 15px'}}>\r\n              <center>\r\n\r\n\r\n                  <button onClick={()=> setShowForm(true)} className='main-button'>\r\n                    Записаться на просмотр\r\n                  </button>\r\n\r\n\r\n              </center>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <div className={classes.btns}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={4}>\r\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\r\n                onClick={()=>setShowGenplan(true)}\r\n              >\r\n                Планировка поселка\r\n              </button>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\r\n                onClick={()=>{window.open(rosreestrLink, '_blank')}}\r\n              >\r\n                Кадастровая карта\r\n              </button>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\r\n                 onClick={()=>setShowSendPlan(true)}\r\n               >\r\n                Отправить планировку на email\r\n              </button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <Grid container spacing={3}> \r\n          <Grid item xs={12} md={6}>\r\n            <div className={classes.wrapperInfo}>\r\n              <h4 style={{padding:'15px'}}>Дороги</h4>\r\n              {infoListRoad}\r\n            </div>\r\n          </Grid>\r\n          {infoListSafety.length < 1 ? '' :\r\n          <Grid item xs={12} md={6}>\r\n            <div className={classes.wrapperInfo}>\r\n              <h4 style={{padding:'15px'}}>Безопасность</h4>\r\n              {infoListSafety}\r\n            </div>\r\n          </Grid>\r\n          }\r\n          <Grid item xs={12} md={6}>\r\n            <div className={classes.wrapperInfo}>\r\n              <h4 style={{padding:'15px'}}>Природа</h4>\r\n              {infoListNature}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <div className={classes.wrapperInfo}>\r\n              <h4 style={{padding:'15px'}}>Инфраструктура</h4>\r\n              {infoListInfrastructure}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <div className={classes.descrBlock}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n              <div className={classes.descrImg} />\r\n            </Grid>\r\n            <Grid item xs={12} md={7}>\r\n              <div className={classes.descrSection}>\r\n                <span id={'description-page'}> </span>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\r\n        <div className={classes.mapSection}>\r\n          <Grid container>\r\n            <MyMap\r\n              centerMap={infoCoords}\r\n            />\r\n            <Grid item xs={12} md={4}>\r\n              <div className={classes.mapInfo}>\r\n                <ItemMapInfo\r\n                  name='Ближайший населенный пункт'\r\n                  value={nearSettlementName + ' - ' + nearSettlementDist}\r\n                />        \r\n                <ItemMapInfo\r\n                  name='Ближайший город'\r\n                  value={nearTownName + ' - ' + nearTownDist}\r\n                />\r\n                <ItemMapInfo\r\n                  name='Ближайшая ж/д станция'\r\n                  value={nearRailwayName + ' - ' + nearRailwayDist}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    \r\n      <Container maxWidth='lg' style={{margin: '100px 0'}}>\r\n        <div className={classes.subInfo}>\r\n          <Grid container justifyContent='space-around'>\r\n            {waysToGetList}\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container maxWidth='lg'>\r\n        <div id='target-block' className={classes.targetBlock}>\r\n          <TargetForm selectedVillage={village.name} />\r\n        </div>\r\n      </Container>\r\n\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth='xl'\r\n        open={showGenplan}\r\n        onClose={()=>setShowGenplan(false)}\r\n      >\r\n        <div className={classes.genplan} />\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth='sm'\r\n        open={showSendPlan}\r\n        onClose={()=>setShowSendPlan(false)}\r\n      > \r\n        <CallbackPlanForm village={village.name}/>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ContactForm.js",["267"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  mapSection: {\r\n    position:'relative',\r\n    width: '100%',\r\n    background: '#fff',\r\n    minHeight: '500px',\r\n    overflow: 'hidden',\r\n  },\r\n  mapFrame: {\r\n    height: '750px',\r\n    // marginTop: '140px',\r\n    borderRadius: '15px',\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginTop: '0px',\r\n      height: '500px',\r\n    }\r\n  },\r\n  text: {\r\n    color: '#3c4b5a',\r\n  },\r\n  textDescr: {\r\n    color: '#3c4b5a',\r\n  },\r\n  textValue: {\r\n    fontSize: '0.8rem',\r\n    [theme.breakpoints.up('sm')]: {\r\n      color: '#3c4b5a',\r\n      fontSize: '1.0rem',\r\n    }\r\n  },\r\n  infoMapBlock: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '60px',\r\n    margin: '0px 0px 30px 0px',\r\n  },\r\n  mapInfo: {\r\n    position: 'absolute',\r\n    padding: '30px 15px',\r\n    margin: '40px 0px',\r\n    top: '15px',\r\n    borderRadius: '15px',\r\n    background: '#fff',\r\n    border: '1px solid #eff3f4',\r\n\r\n  },\r\n}))\r\n\r\nconst ItemMapInfo = (props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.infoMapBlock}>\r\n      <h5 style={{margin:'5px 0'}} className={classes.text}>\r\n        {props.name}\r\n      </h5>\r\n      <h4 style={{margin:'0'}} className={classes.textValue}>\r\n        {props.value}\r\n      </h4>\r\n      <h4 style={{margin:'0'}} className={classes.textValue}>\r\n        {props.dopValue}\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ContactForm = (props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.mapSection}>\r\n        <Grid container>\r\n          <iframe title='qw12' src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Aeea71e7b41c1a53dc55fc01665165149f7ea1b10e1f8a05b47a879cb748c829d&amp;source=constructor\" width=\"100%\" height=\"100%\" frameBorder=\"0\" className={classes.mapFrame}></iframe>\r\n          <Container maxWidth='lg'>\r\n          <Grid item xs={12} md={4}>\r\n            <div className={classes.mapInfo}>\r\n              <ItemMapInfo\r\n                name='Адрес:'\r\n                value='Ленинский просп., 30А, г. Москва'\r\n                dopValue='Проспект Маркса, д. 14, г. Обнинск'\r\n              />\r\n              <ItemMapInfo\r\n                name='Телефон:'\r\n                value='+7 (499) 938-92-28'\r\n              />\r\n              <ItemMapInfo\r\n                name='Почта:'\r\n                value='sales@zagzem.ru'\r\n              />\r\n              <ItemMapInfo\r\n                name='Время работы:'\r\n                value='пн-вс 09:00-21:00'\r\n              />\r\n            </div>\r\n          </Grid>\r\n          </Container>\r\n        </Grid>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackFormContact.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\IconBlock.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\SlickSlider.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\index.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\IconButton.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\IndicatorDots.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CarouselButtons.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\TargetForm.js",["268","269","270"],"import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\r\nimport {makeStyles} from '@material-ui/styles'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport StyledInput from './StyledInput'\r\nimport InputPhone from './InputPhone'\r\nimport {sendMessageAmoCRM} from \"../api/api\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: (props => ({})),\r\n    body: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    bodyForm: {\r\n        background: '#fff',\r\n        borderRadius: '15px',\r\n        padding: '15px',\r\n    },\r\n    btnTarget: {\r\n        margin: '15px 0px 0px 0px',\r\n    },\r\n    bodyText: {\r\n        color: '#3c4b5a',\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst TargetForm = (props) => {\r\n    const selectedVillage = props.selectedVillage\r\n    const [phone, setPhone] = React.useState('')\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [sending, setSending] = React.useState(false)\r\n\r\n    const apiUrl = 'https://zagzem.ru/api/'\r\n\r\n    const classes = useStyles({})\r\n\r\n    const changePhone = val => {\r\n        setPhone(val)\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (phone && isValidPhoneNumber(phone)) {\r\n            const phoneNumber = parsePhoneNumber(phone)\r\n            if (!phoneNumber) {\r\n                return false\r\n            }\r\n        }\r\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\r\n        const x = emailRegexp.test(email)\r\n        if (!x) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // const submit = async() => {\r\n    //   const check = await checkForm()\r\n    //   if (check) {\r\n    //     const options = {}\r\n    //     const body = { name: name, phone: phone, email: email}\r\n    //     options.method = 'POST'\r\n    //     options.headers = { 'Content-Type': 'application/json'}\r\n    //     options.body = JSON.stringify(body)\r\n    //     try {\r\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\r\n    //       if (res.status === 200) {\r\n    //         const result = await res.json()\r\n    //         if (result === null) {\r\n    //           alert('BAD JSON')\r\n    //           return false\r\n    //         }\r\n    //         setPhone('')\r\n    //         setName('')\r\n    //         setEmail('')\r\n    //         setSending(true)\r\n    //         alert('Submit Success!')\r\n    //       }\r\n    //     } catch(e) {\r\n    //       console.log('Fetch error: ', e)\r\n    //       return false\r\n    //     }\r\n    //   } else {\r\n    //     alert('Введите ваш номер телефона')\r\n    //   }\r\n    // }\r\n\r\n    const submit = () => {\r\n\r\n        console.log('submit, phone', phone)\r\n\r\n        if (name && email) {\r\n            if (isValidPhoneNumber(phone)) {\r\n                const phoneNumber = parsePhoneNumber(phone)\r\n                if (phoneNumber) {\r\n                    console.log('submit, phone valid')\r\n\r\n                    sendMessageAmoCRM(name, phone, email)\r\n                        .then(res => {\r\n                            setPhone('')\r\n                            setName('')\r\n                            setEmail('')\r\n                            setSending(true)\r\n                        })\r\n                        .catch(e => {\r\n                            setPhone('')\r\n                            setName('')\r\n                            setEmail('')\r\n                            setSending(true)\r\n                        })\r\n                }\r\n            } else {\r\n                alert('Введите правильный номер телефона')\r\n                return\r\n            }\r\n        } else {\r\n            alert('Заполните обязательные поля')\r\n            return\r\n        }\r\n        // if (isValidPhoneNumber(phone)) {\r\n        //   const phoneNumber = parsePhoneNumber(phone)\r\n        //   debugger\r\n        //   if (phoneNumber) {\r\n        //     console.log('submit, phone valid')\r\n        //   } else {\r\n        //     alert('Введите правильный номер телефона')\r\n        //     return\r\n        //   }\r\n        // } else {\r\n        //   alert('Введите правильный номер телефона')\r\n        //   return\r\n        // }\r\n\r\n        console.log('submit, name', name)\r\n        console.log('submit, email', email)\r\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\r\n        const x = emailRegexp.test(email)\r\n        if (!x) {\r\n        }\r\n\r\n        // setPhone('')\r\n        // setName('')\r\n        // setEmail('')\r\n        // setSending(true)\r\n    }\r\n\r\n    if (sending) {\r\n        return (\r\n            <Dialog\r\n                open={sending}\r\n                fullWidth={true}\r\n                maxWidth='sm'\r\n                TransitionComponent={Transition}\r\n                onClose={() => setSending(false)}\r\n            >\r\n                <div className={classes.root}>\r\n                    <Grid container justifyContent='center' alignItems='center'>\r\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\r\n                            свяжется.</h3>\r\n                    </Grid>\r\n                </div>\r\n            </Dialog>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={7} className={classes.body}>\r\n                        <center>\r\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\r\n                        </center>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={5}>\r\n                        <div className={classes.bodyForm}>\r\n                            <StyledInput\r\n                                placeholder='Как вас зовут?'\r\n                                handler={(e) => setName(e.target.value)}\r\n                                value={name}\r\n                                type='text'\r\n                            />\r\n                            <StyledInput\r\n                                placeholder='Введите ваш email'\r\n                                handler={(e) => setEmail(e.target.value)}\r\n                                value={email}\r\n                                type='email'\r\n                            />\r\n                            <InputPhone\r\n                                value={phone}\r\n                                setValue={changePhone}\r\n                            />\r\n                            <div className={classes.btnTarget}>\r\n                                <Grid container justifyContent='center'>\r\n                                    <button className='main-button' onClick={() => submit()}>\r\n                                        Записаться на просмотр\r\n                                    </button>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TargetForm\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CallbackPlanForm.js",["271","272","273"],"import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport StyledInput from './StyledInput'\r\nimport InputPhone from './InputPhone'\r\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\r\nimport {makeStyles} from '@material-ui/styles'\r\nimport {sendPlanAmoCRM} from \"../api/api\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: (props => ({})),\r\n    body: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    bodyForm: {\r\n        background: '#fff',\r\n        padding: '15px',\r\n        borderRadius: '15px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    btnTarget: {\r\n        margin: '10px 0px 0px 0px',\r\n    },\r\n    bodyText: {\r\n        fontFamily: 'FiraMedium',\r\n        padding: '15px',\r\n        fontSize: '2rem',\r\n        color: '#263238',\r\n        lineHeight: '110%',\r\n    },\r\n    textarea: {\r\n        width: '100%',\r\n        borderRadius: '15px',\r\n        background: '#f9f9f9',\r\n        color: '#191a1d',\r\n        cursor: 'pointer',\r\n        border: '2px solid #e2e2e2',\r\n        fontFamily: 'FiraLight',\r\n        fontSize: '1.25rem',\r\n        marginTop: '15px',\r\n        outline: '0',\r\n        padding: '15px'\r\n    }\r\n}))\r\n\r\nconst CallbackPlanForm = (props) => {\r\n    const village = props.village\r\n    const [email, setEmail] = React.useState('')\r\n    const [sending, setSending] = React.useState(false)\r\n\r\n    const classes = useStyles({})\r\n\r\n    const submit = () => {\r\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\r\n        const x = emailRegexp.test(email)\r\n\r\n        if (x) {\r\n            sendPlanAmoCRM(email, village)\r\n                .finally(()=>{\r\n                    setEmail('')\r\n                    setSending(true)\r\n                })\r\n        } else {\r\n            alert('Введите корректный адрес почты')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    if (sending) {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container justifyContent='center' alignItems='center'>\r\n                    <Typography align='center' className={classes.bodyText}>\r\n                        Планировка поселка {village} отправлена на ваш email\r\n                    </Typography>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.bodyForm}>\r\n                            <Box my={2} mx={4}>\r\n                                <center>\r\n                                    <h3>Планировка поселка {village}</h3>\r\n                                </center>\r\n                            </Box>\r\n                            <StyledInput\r\n                                placeholder='Введите ваш email'\r\n                                handler={(e) => setEmail(e.target.value)}\r\n                                value={email}\r\n                                type='email'\r\n                            />\r\n                            <div className={classes.btnTarget}>\r\n                                <Grid container justifyContent='center'>\r\n                                    <button className='main-button' onClick={() => submit()}>\r\n                                        Отправить\r\n                                    </button>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CallbackPlanForm \r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\MyMap.jsx",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\index.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\utils.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\Filter.js",["274","275"],"import React, { useState, useContext, forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport AppState from '../../AppState'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Box from '@material-ui/core/Box'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n//import ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n//import DialogContent from '@material-ui/core/DialogContent';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport MultiSelect from './MultiSelect'\r\nimport SingleSelect from './SingleSelect'\r\nimport FilterMap from './FilterMap'\r\nimport IconButton from '../IconButton'\r\nimport CheckBox from '../CheckBox'\r\nimport { useFilterClicked } from '../..'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n    borderRadius: '15px',\r\n    overflow: 'hidden'\r\n  },\r\n  bg: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    background: '#fff',\r\n    opacity: '0.8',\r\n    zIndex: '10',\r\n  },\r\n  fg: {\r\n    position: 'relative',\r\n    zIndex: '20',\r\n  },\r\n  expandedBody: {\r\n    width: '100%',\r\n    margin: '15px',\r\n    background: '#eff3f4',\r\n    borderRadius: '15px',\r\n  },\r\n  expandButton: {\r\n  },\r\n  block: {\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    padding: '4px',\r\n    margin: '5px',\r\n    background: '#fff',\r\n    borderRadius: '15px',\r\n  },\r\n  itemFilter: {\r\n    width: 'calc(100% - 10px)',\r\n    margin: '5px',\r\n    padding: '0',\r\n  },\r\n  filterControl: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    padding: '15px 0',\r\n  },\r\n  expandBtn: {\r\n    position: 'absolute',\r\n    width: '50px',\r\n    height: '50px',\r\n    right: '0',\r\n  },\r\n  rollBtn: {\r\n    position: 'absolute',\r\n    width: '50px',\r\n    height: '50px',\r\n    right: '0',\r\n  },\r\n  filterBtn: {\r\n    background: '#0197fd',\r\n    minWidth: '170px',\r\n    height: '50px',\r\n    margin: '5px',\r\n    borderRadius: '1000px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: '#fff',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n  },\r\n  blockHeader: {\r\n    padding: '15px 0px 0px 15px'\r\n  },\r\n  mapBackBtn: {\r\n    position: 'absolute',\r\n    top: '0px',\r\n    left: '0px',\r\n    height: '60px',\r\n    width: '200px',\r\n    zIndex: '600',\r\n    background: '#fff',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    borderRadius: '0 0 15px 0',\r\n    borderRight: '1px solid #eff3f4',\r\n    borderBottom: '1px solid #eff3f4',\r\n  },\r\n  checkboxValue: {\r\n    display: 'inline-block',\r\n    padding: '0 15px 0 15px',\r\n    textAlign: 'center',\r\n  },\r\n  map: {\r\n    position: 'relative',\r\n    width: 'calc(100% - 30px)',\r\n    margin: '15px',\r\n    height: '460px',\r\n    borderRadius: '15px',\r\n    overflow: 'hidden',\r\n  },\r\n  closeMap: {\r\n    position: 'absolute',\r\n    right: '15px',\r\n    top: '15px',\r\n    width: '50px',\r\n    height: '50px',\r\n    zIndex: '500',\r\n    background: '#0056b3',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: '25px',\r\n  },\r\n  verticalCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}))\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst Filter = (props) => {\r\n\r\n  const context = useContext(AppState)\r\n\r\n  //  const hide = props.hide\r\n  const [expanded, setExpanded] = useState(props.expanded || false)\r\n  const [showMap, setShowMap] = useState(true)\r\n  const [filterClicked, setFilterClicked] = useFilterClicked()\r\n\r\n  const setHidden = () => {\r\n    if (props.hidden) {\r\n      props.hidden()\r\n    }\r\n  }\r\n\r\n  const change = React.useCallback(() => {\r\n    const changeMap = async () => {\r\n      await setShowMap(false)\r\n      await setShowMap(true)\r\n    }\r\n    if (showMap) {\r\n      changeMap()\r\n    }\r\n  }, [showMap])\r\n\r\n  React.useEffect(() => {\r\n    change()\r\n  }, [context.filteredVillages])\r\n\r\n  const classes = useStyles()\r\n\r\n  const uniqRoads = context.uniqRoads\r\n  const uniqAreas = context.uniqAreas\r\n  const selectedVillagesRoads = context.selectedVillageRoads\r\n  const selectedVillageTypes = context.selectedVillageTypes\r\n  const selectedCommunications = context.selectedCommunications\r\n  const selectedSafety = context.selectedSafety\r\n  const selectedWaysToGet = context.selectedWaysToGet\r\n  const selectedAreas = context.selectedAreas\r\n  const selectedRoads = context.selectedRoads\r\n\r\n  const valDist = []\r\n  valDist.push(context.selectedFromMkad)\r\n  valDist.push(context.selectedToMkad)\r\n\r\n  const valPrice = []\r\n  valPrice.push(context.selectedPriceFrom)\r\n  valPrice.push(context.selectedPriceTo)\r\n\r\n  const blockRoads = (\r\n    <Box m={1}>\r\n      <MultiSelect\r\n        data={uniqRoads}\r\n        selected={selectedRoads}\r\n        title='Шоссе'\r\n        handler={context.selectRoad}\r\n      />\r\n    </Box>\r\n  )\r\n\r\n  const blockAreas = (\r\n    <Box m={1}>\r\n      <MultiSelect\r\n        data={uniqAreas}\r\n        selected={selectedAreas}\r\n        title='Район'\r\n        handler={context.selectArea}\r\n      />\r\n    </Box>\r\n  )\r\n\r\n  const blockDistance = (\r\n    <Box m={1}>\r\n      <SingleSelect\r\n        data={[\r\n          'до 30 км.',\r\n          'до 40 км.',\r\n          'до 50 км.',\r\n          'до 60 км.',\r\n          'до 70 км.',\r\n          'до 80 км.',\r\n          'до 90 км.',\r\n          'до 150 км.',\r\n          'до 200 км.',\r\n        ]}\r\n        selected={`до ${context.selectedFromMkad} км.`}\r\n        title='Расстояние до МКАД'\r\n        handler={context.selectFromMkad}\r\n      />\r\n    </Box>\r\n  )\r\n\r\n  const blockPrice = (\r\n    <Box m={1}>\r\n      <SingleSelect\r\n        data={[\r\n          '250000',\r\n          '500000',\r\n          '750000',\r\n          '1000000',\r\n          '1500000',\r\n          '3000000',\r\n          '5000000',\r\n          '10000000',\r\n          '20000000',\r\n        ]}\r\n        selected={context.selectedPriceFrom}\r\n        title='Стоимость'\r\n        handler={context.selectPriceFrom}\r\n      />\r\n    </Box>\r\n  )\r\n\r\n  const communications = (\r\n    <div className={classes.block}>\r\n      <div className={classes.blockHeader}>\r\n        <h4>Коммуникации</h4>\r\n      </div>\r\n      <IconButton\r\n        iconName='svet'\r\n        color='#ffce01'\r\n        selected={selectedCommunications.indexOf(1) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(1)}\r\n        value='Электричество'\r\n      />\r\n      <IconButton\r\n        iconName='water'\r\n        color='#4a7aff'\r\n        selected={selectedCommunications.indexOf(2) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(2)}\r\n        value='Вода'\r\n      />\r\n      <IconButton\r\n        iconName='gas'\r\n        color='#ff5b5a'\r\n        selected={selectedCommunications.indexOf(3) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(3)}\r\n        value='Газ'\r\n      />\r\n      <IconButton\r\n        iconName='checkpoint'\r\n        color='#ff5acc'\r\n        selected={selectedCommunications.indexOf(4) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(4)}\r\n        value='КПП'\r\n      />\r\n      <IconButton\r\n        iconName='playground'\r\n        color='#5a5fff'\r\n        selected={selectedCommunications.indexOf(5) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(5)}\r\n        value='Детская площадка'\r\n      />\r\n      <IconButton\r\n        iconName='lighting'\r\n        color='#5abbff'\r\n        selected={selectedCommunications.indexOf(6) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(6)}\r\n        value='Освещение'\r\n      />\r\n      <IconButton\r\n        iconName='sportsGround'\r\n        color='#5aff7d'\r\n        selected={selectedCommunications.indexOf(7) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(7)}\r\n        value='Спортивная площадка'\r\n      />\r\n      <IconButton\r\n        iconName='canalization'\r\n        color='#ff9e5a'\r\n        selected={selectedCommunications.indexOf(8) === -1 ? false : true}\r\n        handler={() => context.selectCommunication(8)}\r\n        value='Центральная канализация'\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const roads = (\r\n    <div className={classes.block}>\r\n      <div className={classes.blockHeader}>\r\n        <h4>Дороги в поселке</h4>\r\n      </div>\r\n      <IconButton\r\n        iconName='asphalt'\r\n        color='#6aa3a5'\r\n        selected={selectedVillagesRoads.indexOf(1) === -1 ? false : true}\r\n        handler={() => context.selectVillageRoad(1)}\r\n        value='Асфальт'\r\n      />\r\n      <IconButton\r\n        iconName='asphaltKroshka'\r\n        color='#4a7aff'\r\n        selected={selectedVillagesRoads.indexOf(3) === -1 ? false : true}\r\n        handler={() => context.selectVillageRoad(3)}\r\n        value='Acф. крошка'\r\n      />\r\n      {/*<IconButton*/}\r\n      {/*  iconName='betonPlit'*/}\r\n      {/*  color='#ff5b5a'*/}\r\n      {/*  selected={selectedVillagesRoads.indexOf(6) === -1 ? false : true}*/}\r\n      {/*  handler={()=>context.selectVillageRoad(6)}*/}\r\n      {/*  value='Бетонные плиты'*/}\r\n      {/*/>*/}\r\n      {/*<IconButton*/}\r\n      {/*  iconName='bitiyKirpich'*/}\r\n      {/*  color='#ffce01'*/}\r\n      {/*  selected={selectedVillagesRoads.indexOf(5) === -1 ? false : true}*/}\r\n      {/*  handler={()=>context.selectVillageRoad(5)}*/}\r\n      {/*  value='Битый кирпич'*/}\r\n      {/*/>*/}\r\n      <IconButton\r\n        iconName='gruntovka'\r\n        color='#06b26b'\r\n        selected={selectedVillagesRoads.indexOf(4) === -1 ? false : true}\r\n        handler={() => context.selectVillageRoad(4)}\r\n        value='Грунтовая дорога'\r\n      />\r\n      <IconButton\r\n        iconName='sheben'\r\n        color='#8a6eac'\r\n        selected={selectedVillagesRoads.indexOf(2) === -1 ? false : true}\r\n        handler={() => context.selectVillageRoad(2)}\r\n        value='Щебень'\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const safety = (\r\n    <div className={classes.block}>\r\n      <div className={classes.blockHeader}>\r\n        <h4>Безопасность</h4>\r\n      </div>\r\n      <IconButton\r\n        iconName='zabor'\r\n        color='#6aa3a5'\r\n        selected={selectedSafety.indexOf(1) === -1 ? false : true}\r\n        handler={() => context.selectSafety(1)}\r\n        value='Ограждение по периметру'\r\n      />\r\n      <IconButton\r\n        iconName='security'\r\n        color='#ff5b5a'\r\n        selected={selectedSafety.indexOf(2) === -1 ? false : true}\r\n        handler={() => context.selectSafety(2)}\r\n        value='Охрана'\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const waysToGet = (\r\n    <div className={classes.block}>\r\n      <div className={classes.blockHeader}>\r\n        <h4>Как добраться</h4>\r\n      </div>\r\n      <IconButton\r\n        iconName='bus'\r\n        color='#8a6eac'\r\n        selected={selectedWaysToGet.indexOf(3) === -1 ? false : true}\r\n        handler={() => context.selectWayToGet(3)}\r\n        value='Автобус'\r\n      />\r\n      <IconButton\r\n        iconName='train'\r\n        color='#06b26b'\r\n        selected={selectedWaysToGet.indexOf(2) === -1 ? false : true}\r\n        handler={() => context.selectWayToGet(2)}\r\n        value='Электричка'\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const villageTypes = (\r\n    <Box m={1}>\r\n      <Grid container>\r\n        <Grid item>\r\n          <Box m={1} className={classes.verticalCenter}>\r\n\r\n            <CheckBox\r\n              selected={selectedVillageTypes.indexOf(1) === -1 ? false : true}\r\n              setSelected={() => context.selectVillageType(1)}\r\n            />\r\n            <div className={classes.checkboxValue}>\r\n              <h5>Коттеджный поселок</h5>\r\n            </div>\r\n\r\n          </Box>\r\n        </Grid>\r\n        <Grid item>\r\n          <Box m={1} className={classes.verticalCenter}>\r\n            <CheckBox\r\n              selected={selectedVillageTypes.indexOf(2) === -1 ? false : true}\r\n              setSelected={() => context.selectVillageType(2)}\r\n            />\r\n            <div className={classes.checkboxValue}>\r\n              <h5>Дачный поселок</h5>\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n\r\n  const expandedFilter = (\r\n    <div className={classes.expandedBody}>\r\n      <Grid container justifyContent='center' alignItems='flex-start'>\r\n\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          {roads}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={3} >\r\n          {communications}\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          {waysToGet}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          {safety}\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n\r\n  const miniFilter = (\r\n    <Grid container direction='row'>\r\n      <Grid item xs={12}>\r\n        {villageTypes}\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <div className={classes.itemFilter}>\r\n          <div className={classes.block}>\r\n            {blockAreas}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <div className={classes.itemFilter}>\r\n          <div className={classes.block}>\r\n            {blockRoads}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <div className={classes.itemFilter}>\r\n          <div className={classes.block}>\r\n            {blockDistance}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <div className={classes.itemFilter}>\r\n          <div className={classes.block}>\r\n            {blockPrice}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n\r\n  const filterControl = (\r\n    <div className={classes.filterControl}>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n\r\n        <div\r\n          className={classes.filterBtn}\r\n          onClick={() => { context.resetFilter(); setHidden(); setFilterClicked(false); }}\r\n        >\r\n          <RotateLeftIcon />\r\n          Сбросить фильтр\r\n        </div>\r\n\r\n        {expanded || showMap ? '' :\r\n          <div\r\n            className={classes.filterBtn}\r\n            onClick={() => setShowMap(true)}\r\n          >\r\n            <MapIcon />\r\n            Показать на карте\r\n          </div>\r\n        }\r\n\r\n        {expanded ? '' :\r\n          <div\r\n            className={classes.filterBtn}\r\n            onClick={() => setExpanded(true)}\r\n          >\r\n            <ExpandMoreIcon />\r\n            Подробнее\r\n          </div>\r\n        }\r\n\r\n        <Link to='/villages' onClick={() => { setExpanded(false); setHidden(); setFilterClicked(true) }}>\r\n          <div\r\n            className={classes.filterBtn}\r\n          >\r\n            <button className='main-button' style={{ padding: '14px 30px' }}>\r\n              Подобрать ({context.filteredVillages.length})\r\n            </button>\r\n          </div>\r\n        </Link>\r\n      </Grid>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.bg} />\r\n      <div className={classes.fg}>\r\n        {miniFilter}\r\n        {filterControl}\r\n        {showMap ? <div className={classes.map}>\r\n          <div\r\n            className={classes.closeMap}\r\n            onClick={() => setShowMap(false)}\r\n          >\r\n            <CloseIcon style={{ width: '35px', height: '35px', color: '#fff' }} />\r\n          </div>\r\n          <FilterMap villages={context.filteredVillages} />\r\n        </div> : ''}\r\n      </div>\r\n\r\n      <Dialog\r\n        open={expanded}\r\n        TransitionComponent={Transition}\r\n        onClose={() => { setExpanded(false); setHidden() }}\r\n        fullWidth={true}\r\n        maxWidth='lg'\r\n      >\r\n        <Grid container>\r\n          {miniFilter}\r\n          {expandedFilter}\r\n          {filterControl}\r\n        </Grid>\r\n      </Dialog>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Icons\\index.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\AnimSlider\\AnimSlider.js",["276","277"],"import React, {useEffect} from \"react\";\r\nimport Slider from \"react-animated-slider\";\r\nimport { Link } from 'react-router-dom';\r\nimport ArrowBottomAnim from '../ArrowBottomAnim'\r\nimport \"react-animated-slider/build/horizontal.css\";\r\nimport \"./slider-animations.css\"\r\nimport \"./styles.css\";\r\nimport \"./button.css\";\r\nimport slide1 from '../../img/images/kp-35-2.jpg'\r\n\r\nconst content = [\r\n  {\r\n    descr: \"Скидка 9% на участки в поселке Шелест\",\r\n    title: \"Только до 31 октября!\",\r\n    button: \"Подробнее\",\r\n    image: \"https://zagzem.ru/img/kp-3-1.jpg\",\r\n    link: '/village/shelest',\r\n  },\r\n  {\r\n    descr: \"Скидка 10% на участки в поселке Фишер\",\r\n    title: \"Только до 31 октября!\",\r\n    button: \"Подробнее\",\r\n    image: \"https://zagzem.ru/img/kp-35-2.jpg\",\r\n    link: '/village/fisher',\r\n  },\r\n  {\r\n    descr: \"Скидка до 10% на участки в поселке Фаворит\",\r\n    title: \"Только до 31 октября!\",\r\n    button: \"Подробнее\",\r\n    image: \"https://zagzem.ru/img/kp-34-1.jpg\",\r\n    link: '/village/favorit',\r\n  },\r\n  {\r\n    descr: \"Участки в поселке Ртищево\",\r\n    title: \"В пешей доступности от ж/д Вельяминово\",\r\n    button: \"Подробнее\",\r\n    image: \"https://zagzem.ru/img/kp-51-1.jpg\",\r\n    link: '/village/rtishevo',\r\n  }\r\n];\r\n\r\nconst AnimSlider = () => (\r\n  <div>\r\n    <Slider\r\n      // autoplay\r\n        infinite\r\n        disabled={false}\r\n      touchDisabled={false}\r\n      className=\"slider-wrapper\"\r\n    >\r\n      {content.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"slider-content\"\r\n          style={{ background: `url('${item.image}') no-repeat center center` }}\r\n        >\r\n          <div className=\"inner\">\r\n            <h2>{item.descr}</h2>\r\n            <h3>{item.title2} {item.title}</h3>\r\n            <Link to={item.link}>\r\n                <button className=\"btn btn-white btn-animate\">{item.button}</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Slider>\r\n    <ArrowBottomAnim />\r\n  </div>\r\n);\r\n\r\nexport default AnimSlider\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\CheckBox.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Icons\\Icons.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\FilterMap.js",["278","279"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {TrafficControl, YMaps} from \"react-yandex-maps\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n}))\r\n\r\nconst FilterMap = (props) => {\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  const change = React.useCallback(()=> {\r\n  const villages = props.villages \r\n    const items = []\r\n    for (let i=0;i<villages.length;i++) {\r\n      const obj = {}\r\n      obj.coords = villages[i].coords\r\n      obj.name = villages[i].name\r\n      obj.uname = villages[i].uname\r\n      obj.bgs = villages[i].bgs\r\n      obj.type = villages[i].type === 1 ? 'Коттеджный поселок' : 'Дачный поселок'\r\n      items.push(obj)\r\n  }\r\n\r\n  window.ymaps.ready(function() {\r\n    var myMap = new window.ymaps.Map(\"map\", {\r\n      center: [55.760088, 37.617638],\r\n      zoom: 8,\r\n      controls: [],\r\n    })\r\n\r\n\r\n    var blueCollection = new window.ymaps.GeoObjectCollection(null, {\r\n      preset: 'islands#blueIcon'\r\n    })\r\n\r\n    for (var i = 0; i < items.length; i++) {\r\n      const obj = items[i]\r\n\r\n\r\n      var myPlacemark = new window.ymaps.Placemark(obj.coords, {\r\n        hintContent: obj.name,\r\n        balloonContent: `<img src=${obj.bgs[0]} width='100%' ><a href='/village/${obj.uname}'>${obj.type} ${obj.name}</a></img>`,\r\n      })\r\n      blueCollection.add(myPlacemark)\r\n    }\r\n    var zoomControl = new window.ymaps.control.ZoomControl({\r\n      options: {\r\n        size: \"auto\",\r\n        float: 'right',\r\n        position:{right:10, top: 200}\r\n      }\r\n    });\r\n\r\n    let trafficControl = new window.ymaps.control.TrafficControl({\r\n      options: {\r\n        float: 'right',\r\n        position:{right:90, top: 20}\r\n      }\r\n    })\r\n\r\n    let rulerControl = new window.ymaps.control.RulerControl({\r\n      options: {\r\n         float: 'right',\r\n        scaleLine: 'false',\r\n        position:{right:190, top: 20}\r\n      }\r\n    })\r\n\r\n    let locationControl = new window.ymaps.control.GeolocationControl({\r\n      options: {\r\n        float: 'right',\r\n        position: {right:10, bottom: 150}\r\n      }\r\n    })\r\n\r\n\r\n    // myMap.addControl(traffic);\r\n\r\n    myMap.controls.add(zoomControl);\r\n    myMap.controls.add(trafficControl);\r\n    myMap.controls.add(rulerControl)\r\n    myMap.controls.add(locationControl)\r\n    // myMap.behaviors.disable('scrollZoom')\r\n    myMap.geoObjects.add(blueCollection)\r\n\r\n  })\r\n  }, [props.villages])\r\n\r\n  React.useEffect(() => {\r\n    change()\r\n  }, [change])\r\n\r\n  return (\r\n    <div id=\"map\" className={classes.root}>\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default FilterMap\r\n","C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\SingleSelect.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\Filter\\MultiSelect.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ArrowBottomAnim\\index.js",[],"C:\\Users\\Lilice\\Desktop\\projects\\zagzem_new\\src\\components\\ArrowBottomAnim\\ArrowBottomAnim.js",[],{"ruleId":"280","severity":1,"message":"281","line":25,"column":32,"nodeType":"282","messageId":"283","endLine":25,"endColumn":34},{"ruleId":"284","severity":1,"message":"285","line":1,"column":16,"nodeType":"286","messageId":"287","endLine":1,"endColumn":22},{"ruleId":"284","severity":1,"message":"288","line":5,"column":8,"nodeType":"286","messageId":"287","endLine":5,"endColumn":18},{"ruleId":"284","severity":1,"message":"289","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":292,"column":19,"nodeType":"292","endLine":292,"endColumn":157},{"ruleId":"290","severity":1,"message":"291","line":293,"column":19,"nodeType":"292","endLine":293,"endColumn":140},{"ruleId":"284","severity":1,"message":"293","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":21},{"ruleId":"290","severity":1,"message":"291","line":234,"column":21,"nodeType":"292","endLine":234,"endColumn":162},{"ruleId":"290","severity":1,"message":"291","line":235,"column":21,"nodeType":"292","endLine":235,"endColumn":142},{"ruleId":"284","severity":1,"message":"289","line":8,"column":8,"nodeType":"286","messageId":"287","endLine":8,"endColumn":18},{"ruleId":"284","severity":1,"message":"294","line":17,"column":7,"nodeType":"286","messageId":"287","endLine":17,"endColumn":16},{"ruleId":"284","severity":1,"message":"295","line":10,"column":8,"nodeType":"286","messageId":"287","endLine":10,"endColumn":18},{"ruleId":"284","severity":1,"message":"289","line":13,"column":8,"nodeType":"286","messageId":"287","endLine":13,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":126,"column":14,"nodeType":"298","endLine":126,"endColumn":26},{"ruleId":"284","severity":1,"message":"299","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":20},{"ruleId":"284","severity":1,"message":"300","line":1,"column":27,"nodeType":"286","messageId":"287","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"301","line":9,"column":31,"nodeType":"286","messageId":"287","endLine":9,"endColumn":39},{"ruleId":"284","severity":1,"message":"302","line":132,"column":25,"nodeType":"286","messageId":"287","endLine":132,"endColumn":41},{"ruleId":"284","severity":1,"message":"303","line":138,"column":10,"nodeType":"286","messageId":"287","endLine":138,"endColumn":16},{"ruleId":"296","severity":1,"message":"304","line":159,"column":6,"nodeType":"305","endLine":159,"endColumn":31,"suggestions":"306"},{"ruleId":"284","severity":1,"message":"307","line":256,"column":7,"nodeType":"286","messageId":"287","endLine":256,"endColumn":20},{"ruleId":"284","severity":1,"message":"308","line":23,"column":7,"nodeType":"286","messageId":"287","endLine":23,"endColumn":16},{"ruleId":"284","severity":1,"message":"309","line":5,"column":9,"nodeType":"286","messageId":"287","endLine":5,"endColumn":19},{"ruleId":"284","severity":1,"message":"310","line":114,"column":10,"nodeType":"286","messageId":"287","endLine":114,"endColumn":15},{"ruleId":"284","severity":1,"message":"311","line":115,"column":10,"nodeType":"286","messageId":"287","endLine":115,"endColumn":18},{"ruleId":"284","severity":1,"message":"312","line":115,"column":20,"nodeType":"286","messageId":"287","endLine":115,"endColumn":31},{"ruleId":"284","severity":1,"message":"313","line":157,"column":9,"nodeType":"286","messageId":"287","endLine":157,"endColumn":14},{"ruleId":"284","severity":1,"message":"314","line":176,"column":9,"nodeType":"286","messageId":"287","endLine":176,"endColumn":14},{"ruleId":"284","severity":1,"message":"315","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":19},{"ruleId":"284","severity":1,"message":"316","line":96,"column":9,"nodeType":"286","messageId":"287","endLine":96,"endColumn":16},{"ruleId":"284","severity":1,"message":"317","line":98,"column":9,"nodeType":"286","messageId":"287","endLine":98,"endColumn":12},{"ruleId":"284","severity":1,"message":"318","line":110,"column":9,"nodeType":"286","messageId":"287","endLine":110,"endColumn":21},{"ruleId":"284","severity":1,"message":"319","line":6,"column":7,"nodeType":"286","messageId":"287","endLine":6,"endColumn":19},{"ruleId":"284","severity":1,"message":"320","line":7,"column":5,"nodeType":"286","messageId":"287","endLine":7,"endColumn":25},{"ruleId":"284","severity":1,"message":"321","line":12,"column":10,"nodeType":"286","messageId":"287","endLine":12,"endColumn":21},{"ruleId":"284","severity":1,"message":"322","line":12,"column":23,"nodeType":"286","messageId":"287","endLine":12,"endColumn":37},{"ruleId":"284","severity":1,"message":"323","line":13,"column":10,"nodeType":"286","messageId":"287","endLine":13,"endColumn":14},{"ruleId":"284","severity":1,"message":"324","line":13,"column":16,"nodeType":"286","messageId":"287","endLine":13,"endColumn":23},{"ruleId":"296","severity":1,"message":"325","line":676,"column":5,"nodeType":"305","endLine":676,"endColumn":7,"suggestions":"326"},{"ruleId":"284","severity":1,"message":"327","line":677,"column":9,"nodeType":"286","messageId":"287","endLine":677,"endColumn":19},{"ruleId":"284","severity":1,"message":"289","line":3,"column":8,"nodeType":"286","messageId":"287","endLine":3,"endColumn":18},{"ruleId":"284","severity":1,"message":"289","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":18},{"ruleId":"284","severity":1,"message":"328","line":42,"column":11,"nodeType":"286","messageId":"287","endLine":42,"endColumn":17},{"ruleId":"284","severity":1,"message":"329","line":50,"column":11,"nodeType":"286","messageId":"287","endLine":50,"endColumn":20},{"ruleId":"284","severity":1,"message":"330","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":18},{"ruleId":"284","severity":1,"message":"331","line":7,"column":9,"nodeType":"286","messageId":"287","endLine":7,"endColumn":27},{"ruleId":"284","severity":1,"message":"332","line":7,"column":29,"nodeType":"286","messageId":"287","endLine":7,"endColumn":45},{"ruleId":"284","severity":1,"message":"333","line":155,"column":10,"nodeType":"286","messageId":"287","endLine":155,"endColumn":23},{"ruleId":"296","severity":1,"message":"334","line":175,"column":6,"nodeType":"305","endLine":175,"endColumn":32,"suggestions":"335"},{"ruleId":"284","severity":1,"message":"300","line":1,"column":16,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"336","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":14},{"ruleId":"284","severity":1,"message":"337","line":3,"column":9,"nodeType":"286","messageId":"287","endLine":3,"endColumn":23},{"ruleId":"284","severity":1,"message":"338","line":3,"column":25,"nodeType":"286","messageId":"287","endLine":3,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'CircleType' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogContent' is defined but never used.","'useStyles' is assigned a value but never used.","'AnimSlider' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'target' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'CallbackForm' is defined but never used.","'useEffect' is defined but never used.","'villages' is defined but never used.","'setFilterClicked' is assigned a value but never used.","'render' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'buildingDirections' and 'buildingDirectionsHolded'. Either include them or remove the dependency array.","ArrayExpression",["339"],"'VillagesPage1' is defined but never used.","'languages' is assigned a value but never used.","'makeStyles' is defined but never used.","'price' is assigned a value but never used.","'fromMkad' is assigned a value but never used.","'setFromMkad' is assigned a value but never used.","'roads' is assigned a value but never used.","'areas' is assigned a value but never used.","'CardActions' is defined but never used.","'context' is assigned a value but never used.","'uid' is assigned a value but never used.","'permittedUse' is assigned a value but never used.","'postsPerPage' is assigned a value but never used.","'arrayForHoldingPosts' is assigned a value but never used.","'postsToShow' is assigned a value but never used.","'setPostsToShow' is assigned a value but never used.","'next' is assigned a value but never used.","'setNext' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'infoDescr'. Either include it or remove the dependency array.",["340"],"'Transition' is assigned a value but never used.","'apiUrl' is assigned a value but never used.","'checkForm' is assigned a value but never used.","'InputPhone' is defined but never used.","'isValidPhoneNumber' is defined but never used.","'parsePhoneNumber' is defined but never used.","'filterClicked' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'change'. Either include it or remove the dependency array.",["341"],"'slide1' is defined but never used.","'TrafficControl' is defined but never used.","'YMaps' is defined but never used.",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [buildingDirections, buildingDirectionsHolded, filterClicked, villages]",{"range":"348","text":"349"},"Update the dependencies array to be: [infoDescr]",{"range":"350","text":"351"},"Update the dependencies array to be: [change, context.filteredVillages]",{"range":"352","text":"353"},[4383,4408],"[buildingDirections, buildingDirectionsHolded, filterClicked, villages]",[15942,15944],"[infoDescr]",[4212,4238],"[change, context.filteredVillages]"]
=======
[{"/Users/anton/Desktop/zagzem_2.0/zagzem/src/index.js":"1","/Users/anton/Desktop/zagzem_2.0/zagzem/src/serviceWorkerRegistration.js":"2","/Users/anton/Desktop/zagzem_2.0/zagzem/src/App.js":"3","/Users/anton/Desktop/zagzem_2.0/zagzem/src/AppState.js":"4","/Users/anton/Desktop/zagzem_2.0/zagzem/src/helpers/transplit.js":"5","/Users/anton/Desktop/zagzem_2.0/zagzem/src/AppRoutes.js":"6","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Top.js":"7","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Loader.js":"8","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/StickyFooter.js":"9","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Main.js":"10","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/MenuTree.jsx":"11","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackForm.js":"12","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Navigation.js":"13","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/services/index.js":"14","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/village/index.js":"15","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/villages/index.js":"16","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/welcome/index.js":"17","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/contact/index.js":"18","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/SearchInput/index.js":"19","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/StyledInput.js":"20","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/InputPhone.js":"21","/Users/anton/Desktop/zagzem_2.0/zagzem/src/api/api.js":"22","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/services/SimpleAccordion.js":"23","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Chooser.js":"24","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackFormPopUp.js":"25","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackFormContact.js":"26","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ContactForm.js":"27","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/IconBlock.js":"28","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/SlickSlider.js":"29","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/SimilarVillages.js":"30","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ReviewCard.js":"31","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Page.js":"32","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/index.js":"33","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/index.js":"34","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/utils.js":"35","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/IconButton.js":"36","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/IndicatorDots.js":"37","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CarouselButtons.js":"38","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackPlanForm.js":"39","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/TargetForm.js":"40","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/Filter.js":"41","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/MyMap.jsx":"42","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/AnimSlider.js":"43","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Icons/index.js":"44","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/FilterMap.js":"45","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CheckBox.js":"46","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/SingleSelect.js":"47","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/MultiSelect.js":"48","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Icons/Icons.js":"49","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ArrowBottomAnim/index.js":"50","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ArrowBottomAnim/ArrowBottomAnim.js":"51"},{"size":4717,"mtime":1659188903276,"results":"52","hashOfConfig":"53"},{"size":5064,"mtime":1658676780026,"results":"54","hashOfConfig":"53"},{"size":1260,"mtime":1658676779936,"results":"55","hashOfConfig":"53"},{"size":10898,"mtime":1658676779936,"results":"56","hashOfConfig":"53"},{"size":1444,"mtime":1658676780003,"results":"57","hashOfConfig":"53"},{"size":822,"mtime":1659188234071,"results":"58","hashOfConfig":"53"},{"size":9571,"mtime":1658676779938,"results":"59","hashOfConfig":"53"},{"size":1241,"mtime":1658676779937,"results":"60","hashOfConfig":"53"},{"size":8937,"mtime":1658676779938,"results":"61","hashOfConfig":"53"},{"size":390,"mtime":1658676779937,"results":"62","hashOfConfig":"53"},{"size":4575,"mtime":1658676779937,"results":"63","hashOfConfig":"53"},{"size":5413,"mtime":1658676779936,"results":"64","hashOfConfig":"53"},{"size":1578,"mtime":1658676779937,"results":"65","hashOfConfig":"53"},{"size":5739,"mtime":1658676779752,"results":"66","hashOfConfig":"53"},{"size":1537,"mtime":1659190741408,"results":"67","hashOfConfig":"53"},{"size":5699,"mtime":1658676779752,"results":"68","hashOfConfig":"53"},{"size":7001,"mtime":1658676779752,"results":"69","hashOfConfig":"53"},{"size":1470,"mtime":1658676779751,"results":"70","hashOfConfig":"53"},{"size":4924,"mtime":1658676779542,"results":"71","hashOfConfig":"53"},{"size":1165,"mtime":1658676779938,"results":"72","hashOfConfig":"53"},{"size":749,"mtime":1658676779937,"results":"73","hashOfConfig":"53"},{"size":1659,"mtime":1658676779936,"results":"74","hashOfConfig":"53"},{"size":5384,"mtime":1658676779751,"results":"75","hashOfConfig":"53"},{"size":7956,"mtime":1658676779936,"results":"76","hashOfConfig":"53"},{"size":4867,"mtime":1658676779936,"results":"77","hashOfConfig":"53"},{"size":6607,"mtime":1658676779936,"results":"78","hashOfConfig":"53"},{"size":2857,"mtime":1658676779937,"results":"79","hashOfConfig":"53"},{"size":1173,"mtime":1658676779937,"results":"80","hashOfConfig":"53"},{"size":1705,"mtime":1658676779541,"results":"81","hashOfConfig":"53"},{"size":2373,"mtime":1659190741408,"results":"82","hashOfConfig":"53"},{"size":7127,"mtime":1659190741408,"results":"83","hashOfConfig":"53"},{"size":23522,"mtime":1659190741408,"results":"84","hashOfConfig":"53"},{"size":53,"mtime":1658676779542,"results":"85","hashOfConfig":"53"},{"size":65,"mtime":1658676779541,"results":"86","hashOfConfig":"53"},{"size":745,"mtime":1658676779541,"results":"87","hashOfConfig":"53"},{"size":2013,"mtime":1658676779937,"results":"88","hashOfConfig":"53"},{"size":987,"mtime":1658676779937,"results":"89","hashOfConfig":"53"},{"size":1204,"mtime":1658676779936,"results":"90","hashOfConfig":"53"},{"size":3811,"mtime":1658676779936,"results":"91","hashOfConfig":"53"},{"size":7551,"mtime":1658676779938,"results":"92","hashOfConfig":"53"},{"size":16174,"mtime":1658676779541,"results":"93","hashOfConfig":"53"},{"size":1671,"mtime":1658676779937,"results":"94","hashOfConfig":"53"},{"size":2160,"mtime":1658676779541,"results":"95","hashOfConfig":"53"},{"size":50,"mtime":1658676779542,"results":"96","hashOfConfig":"53"},{"size":2550,"mtime":1658676779542,"results":"97","hashOfConfig":"53"},{"size":1105,"mtime":1658676779936,"results":"98","hashOfConfig":"53"},{"size":1879,"mtime":1658676779542,"results":"99","hashOfConfig":"53"},{"size":2164,"mtime":1658676779542,"results":"100","hashOfConfig":"53"},{"size":276,"mtime":1658676779542,"results":"101","hashOfConfig":"53"},{"size":80,"mtime":1658676779541,"results":"102","hashOfConfig":"53"},{"size":724,"mtime":1658676779541,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1lhy231",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/anton/Desktop/zagzem_2.0/zagzem/src/index.js",[],["228","229"],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/serviceWorkerRegistration.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/App.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/AppState.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/helpers/transplit.js",["230"],"function translit(word){\n    if(word === undefined) word = 'a'\n\n    word = word.trim().split(' ').map( el => el[0].toLowerCase() + el.slice(1)).join('-')\n    var answer = '';\n    var converter = {\n        'а': 'a',    'б': 'b',    'в': 'v',    'г': 'g',    'д': 'd',\n        'е': 'e',    'ё': 'e',    'ж': 'zh',   'з': 'z',    'и': 'i',\n        'й': 'y',    'к': 'k',    'л': 'l',    'м': 'm',    'н': 'n',\n        'о': 'o',    'п': 'p',    'р': 'r',    'с': 's',    'т': 't',\n        'у': 'u',    'ф': 'f',    'х': 'h',    'ц': 'c',    'ч': 'ch',\n        'ш': 'sh',   'щ': 'sch',  'ь': '',     'ы': 'y',    'ъ': '',\n        'э': 'e',    'ю': 'yu',   'я': 'ya',\n\n        'А': 'A',    'Б': 'B',    'В': 'V',    'Г': 'G',    'Д': 'D',\n        'Е': 'E',    'Ё': 'E',    'Ж': 'Zh',   'З': 'Z',    'И': 'I',\n        'Й': 'Y',    'К': 'K',    'Л': 'L',    'М': 'M',    'Н': 'N',\n        'О': 'O',    'П': 'P',    'Р': 'R',    'С': 'S',    'Т': 'T',\n        'У': 'U',    'Ф': 'F',    'Х': 'H',    'Ц': 'C',    'Ч': 'Ch',\n        'Ш': 'Sh',   'Щ': 'Sch',  'Ь': '',     'Ы': 'Y',    'Ъ': '',\n        'Э': 'E',    'Ю': 'Yu',   'Я': 'Ya'\n    };\n\n    for (var i = 0; i < word.length; ++i ) {\n        if (converter[word[i]] == undefined){\n            answer += word[i];\n        } else {\n            answer += converter[word[i]];\n        }\n    }\n\n    return answer;\n}\n\nexport default translit","/Users/anton/Desktop/zagzem_2.0/zagzem/src/AppRoutes.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Top.js",["231","232","233"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid'\n//import SearchIcon from '@material-ui/icons/Search';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport List from '@material-ui/core/List'\n\nimport logo from '../img/logo.png';\nimport { MenuTree } from './MenuTree.jsx'\nimport SearchInput from './SearchInput'\nimport PropTypes from 'prop-types'\nimport AppState from \"../AppState\";\nimport vk from \"../svg/vk.svg\";\nimport instagram from \"../svg/instagram.svg\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  bar: (props=>( {\n    height: '80px',\n    boxShadow: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '0',\n    background: '#fff',\n  })),\n  menuButton: (props=>({\n    width: '50px',\n    height: '50px',\n    display: 'block',\n    color: '#78d85b',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    }\n  })),\n  search: {\n    position: 'relative',\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(4),\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menu: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  phone: (props => ({\n    display: 'none',\n    color: '#01eb88',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  })),\n  logo: {\n    display: 'none',\n    width: '60px',\n    height: '60px',\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up('md')]: {\n      display: 'block'\n    },\n    [theme.breakpoints.up('lg')]: {\n      marginRight: theme.spacing(2),\n    }\n  },\n  logoDrawer: {\n    width: '60px',\n    height: '60px',\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  },\n  logoText: {\n    // fontFamily: 'FiraRegular',\n    fontFamily: \"Roboto,sans-serif\",\n\n\n    color: '#3c4b5a',\n    display: 'none',\n    fontSize: '1.5rem',\n    fontWeight: '700',\n\n    [theme.breakpoints.up('md')]: {\n      display: 'block'\n    },\n  },\n  icon: {\n    width: '35px',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  menuBtn: (props => ({\n    position: 'relative',\n    color: '#3c4b5a',\n    transition: 'all ease .3s',\n    cursor: 'pointer',\n    marginRight: theme.spacing(3),\n    '&:before': {\n      transform: 'translateX(-50%)',\n      transition: 'all ease .3s',\n      width: '20%',\n      height: '4px',\n      position: 'absolute',\n      bottom: '-10px',\n      left: '50%',\n      opacity: '0',\n      pointerEvents: 'none',\n      content: \"''\",\n      borderRadius: '6px',\n      background: 'linear-gradient(90deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\n    },\n    '&:hover:before': {\n      width: '70%',\n      opacity: '1',\n    },\n    [theme.breakpoints.up('lg')]: {\n      marginRight: theme.spacing(4),\n    }\n  })),\n}));\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\n\nexport default function Top(props) {\n  const context = React.useContext(AppState)\n\n  const [showDrawer, setShowDrawer] = React.useState(false)\n\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n\n    return () => {\n        window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   window.addEventListener('beforeinstallprompt', event => {\n  //     console.log('beforeinstallprompt event was fired');\n  //\n  //     // Prevent Chrome <= 67 from automatically showing the prompt\n  //     event.preventDefault();\n  //\n  //     // Stash the event so it can be triggered later.\n  //     this.installPromptEvent = event;\n  //     console.log(`this: ${this}`)\n  //\n  //     // Update the install UI to notify the user app can be installed\n  //     btnInstall.disabled = false;\n  //   });\n  //\n  //   const btnInstall = document.querySelector('#btnInstall');\n  //\n  //   btnInstall.addEventListener('click', function () {\n  //     console.log('click')\n  //     // Update the install UI to remove the install button\n  //     btnInstall.disabled = true;\n  //\n  //     // Show the modal add to home screen dialog\n  //     window.installPromptEvent.prompt();\n  //\n  //     // Wait for the user to respond to the prompt\n  //     window.installPromptEvent.userChoice.then(choice => {\n  //       if (choice.outcome === 'accepted') {\n  //         console.log('User accepted the A2HS prompt');\n  //       } else {\n  //         console.log('User dismissed the A2HS prompt');\n  //       }\n  //       // Clear the saved prompt since it can't be used again\n  //       this.installPromptEvent = null;\n  //     });\n  //   });\n  // })\n\n  const classes = useStyles({ scrollPosition });\n\n  function resetFilter(e){\n     context.resetFilter()\n\n  }\n\n  const menuBtns = (\n    <div className={classes.menu}>\n      <Link\n        to='/villages'\n        className={classes.menuBtn}\n        onClick={resetFilter}\n      >\n        <h4>Поселки</h4>\n      </Link>\n      <Link\n        to='/services'\n        className={classes.menuBtn}\n      >\n        <h4>Услуги</h4>\n      </Link>\n      <Link\n        to='/contact'\n        className={classes.menuBtn}\n      >\n        <h4>Контакты</h4>\n      </Link>\n\n      {/*<button*/}\n      {/*    id=\"btnInstall\"*/}\n      {/*   */}\n      {/*    style={{position: 'absolute', top: '23px', right: '16px', zIndex: '1'}}*/}\n      {/*>*/}\n      {/*  Install PWA For Prod*/}\n      {/*</button>*/}\n    </div>\n  )\n\n    return (\n        <>\n          <CssBaseline />\n\n          <HideOnScroll {...props}>\n            <AppBar className={classes.bar} >\n              <Container maxWidth='lg'>\n                <Toolbar style={{marginLeft:'0px', paddingLeft: '0px'}}>\n\n                  <Link to='/' style={{display:'flex', alignItems:'center'}}>\n                    <div  className={classes.logo}>\n                    </div>\n\n                    <div className={classes.logoText}\n                    >Загородные Земли</div>\n                  </Link>\n\n\n                  <MenuIcon\n                      onClick={()=>setShowDrawer(true)}\n                      className={classes.menuButton}\n                  />\n                  <div className={classes.search}>\n                    <SearchInput />\n                  </div>\n                  <div className={classes.grow} />\n                  {menuBtns}\n                  <h4\n                      className={classes.phone}\n                      onClick={()=>window.location.href='tel:84999389228'}\n                  >\n                    +7 (499) 938-92-28\n                  </h4>\n                  <img src={vk} style={{margin:'0 10px'}} className={classes.icon} onClick={()=>{window.open('https://vk.com/zagorodnyezemli', '_blank')}}/>\n                  <img src={instagram} className={classes.icon} onClick={()=>{window.open('https://www.instagram.com/zagzem', '_blank')}}/>\n                </Toolbar>\n              </Container>\n            </AppBar>\n          </HideOnScroll>\n\n          <SwipeableDrawer\n              anchor=\"left\"\n              open={showDrawer}\n              onOpen={()=>setShowDrawer(true)}\n              onClose={()=>setShowDrawer(false)}\n          >\n            <List\n                style={{\n                  position:'relative',\n                  padding:0,\n                  overflowX:'hidden',\n                  minHeight:'100%'\n                }}\n            >\n              <Box m={2}>\n                <Grid container alignItems='center'\n                      style={{\n                        minHeight:'80px',\n                        width:'290px',\n                      }}\n                >\n                  <h3 style={{textAlign:'left',lineHeight:'110%',padding:'0 0 5px 15px'}}><strong>Загородные Земли</strong></h3>\n                  <Grid item>\n                    <Box m={2}>\n                      <h5 className='light-text'>Продажа загородной недвижимости в Московской области</h5>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n              <Box m={2}>\n                <MenuTree hide={()=>setShowDrawer(false)} />\n              </Box>\n            </List>\n          </SwipeableDrawer>\n        </>\n    );\n\n\n\n}\n\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Loader.js",["234","235"],"import React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport Grid from '@material-ui/core/Grid'\nimport logo from '../img/logo.png';\nimport CircleType from 'circletype';\n\nconst Logo = styled.img`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  @media (prefers-reduced-motion: no-preference) {\n    animation: rotate-logo-spin infinite 1s linear;\n  }\n  @keyframes rotate-logo-spin {\n  from {\n    transform: scale(1);\n  }\n  to {\n    transform: scale(1.2);\n  }\n`\n\n\nconst Loader = () => {\n    // let target = useRef()\n    //\n    //\n    // new CircleType(target.current).radius(384);\n  return (\n    <Grid container justifyContent='center' alignItems='center' style={{position:'fixed',height:'100vh',width:'100vw',top:'0'}}>\n        <div style={{position:'relative'}}>\n            {/*<div ref={target} style={{top:'-100px',position:'absolute',fontFamily: \"Roboto,sans-serif\", color: '#3c4b5a',fontSize: '1.5rem',fontWeight: '700'}}>Загородные Земли</div>*/}\n            <Logo\n                src={logo}\n                style={{\n                    width: '200px',\n                    height: '200px'\n                }}\n            />\n        </div>\n\n    </Grid>\n  )\n}\n\nexport default Loader \n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/StickyFooter.js",["236","237","238"],"import React from 'react'\nimport AppState from '../AppState'\nimport { Link } from 'react-router-dom'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Slide from '@material-ui/core/Slide'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport vk from '../svg/vk.svg'\nimport instagram from '../svg/instagram.svg'\nimport CallbackForm from './CallbackForm'\nimport logo from \"../img/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(2, 2, 2),\n    marginTop: 'auto',\n    borderTop: '1px solid #eff3f4',\n    backgroundColor: '#fff',\n  },\n  menuBtn: {\n    position: 'relative',\n    padding: theme.spacing(3, 1),\n    color: '#3c4b5a',\n    textAlign: 'center',\n    width:'100%',\n    transition: 'all ease .3s',\n    '&:before': {\n      transform: 'translateX(-50%)',\n      transition: 'all ease .3s',\n      width: '20%',\n      height: '4px',\n      position: 'absolute',\n      top: '54px',\n      left: '50%',\n      opacity: '0',\n      pointerEvents: 'none',\n      content: \"''\",\n      borderRadius: '6px',\n      background: 'linear-gradient(90deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\n    },\n    [theme.breakpoints.up('sm')]: {\n      '&:hover:before': {\n        opacity: '1',\n        top: '54px',\n        width:'85%',\n      }\n    },\n    '&:hover': {\n      // color: '#53a321',\n    },\n    [theme.breakpoints.up('md')]: {\n      textAlign: 'left',\n      width: '211px',\n\n    },\n    [theme.breakpoints.between('xs', 'sm')]: {\n      '&:hover:before': {\n        opacity: '0'\n      },\n    },\n  },\n  menuBtn_dacha: {\n    position: 'relative',\n    padding: theme.spacing(3, 1),\n    color: '#3c4b5a',\n    width:'100%',\n    transition: 'all ease .3s',\n    '&:before': {\n      transform: 'translateX(-50%)',\n      transition: 'all ease .3s',\n      width: '10%',\n      height: '4px',\n      position: 'absolute',\n      top: '54px',\n      // left: '50%',\n      left: '20%',\n      opacity: '0',\n      pointerEvents: 'none',\n      content: \"''\",\n      borderRadius: '6px',\n      background: 'linear-gradient(90deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\n    },\n    '&:hover:before': {\n      width: '32%',\n      opacity: '1',\n      top: '54px',\n      left: '20%'\n    },\n    [theme.breakpoints.between('xs', 'sm')]: {\n      '&:hover:before': {\n        opacity: '0'\n      },\n    },\n  },\n  menuBtn_services: {\n    '&:before': {\n      width: '10%',\n      opacity: '0',\n      left: '20%'\n    },\n    '&:hover:before': {\n      width: '24%',\n      left: '19%'\n    }\n  },\n  menuBtn_contact: {\n    '&:before': {\n      width: '10%',\n      opacity: '0',\n      left: '24%'\n    },\n    '&:hover:before': {\n      width: '36%',\n      left: '24%'\n    },\n\n  },\n  icons: {\n    maxWidth: '350px'\n  },\n  icon: {\n    cursor: 'pointer'\n  },\n  phone: {\n    textAlign: 'center',\n    color: '#3c4b5a',\n    padding: theme.spacing(1, 0, 2),\n  },\n  top: {\n    background: '#fff',\n    borderBottom: '1px solid #eff3f4',\n    padding: theme.spacing(1, 0, 2),\n  },\n  tail: {\n    padding: theme.spacing(3, 0, 1),\n    color: '#919fa3',\n  },\n  header: {\n    padding: theme.spacing(1, 1),\n    textAlign: 'center',\n    color: '#3c4b5a',\n    cursor: 'pointer',\n    [theme.breakpoints.up('md')]: {\n      textAlign: 'left',\n      width: '379px'\n    }\n  },\n  descr: {\n    padding: theme.spacing(2, 1),\n    textAlign: 'center',\n    color: '#919fa3',\n    [theme.breakpoints.up('md')]: {\n      textAlign: 'right' \n    }\n  },\n  logo: {\n    display: 'none',\n    width: '60px',\n    height: '60px',\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up('md')]: {\n      display: 'block'\n    },\n    [theme.breakpoints.up('lg')]: {\n      marginRight: theme.spacing(2),\n    }\n  },\n  logoText: {\n    display: 'none',\n    color: '#01eb88',\n    fontSize: '1.2rem',\n    [theme.breakpoints.up('md')]: {\n      display: 'block'\n    },\n  },\n\n  logoTitle: {\n    width: '308px',\n    fontSize: '1.5rem',\n    fontFamily: \"Roboto, sans-serif\",\n        [theme.breakpoints.up('md')]: {\n          fontSize: '1.5rem',\n          fontFamily: \"Roboto, sans-serif\"\n    },\n  }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n  const context = React.useContext(AppState)\n  const [showDialog, setShowDialog] = React.useState(false)\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Grid container justifyContent='center' alignItems=\"center\" className={classes.top}>\n          <Grid item xs={12} md={5}>\n            <div className={classes.header}>\n\n                <Link\n                    to='/'\n                    onClick={()=> window.scrollTo(0, 0)}\n                    style={{display:'flex', alignItems:'center'}}\n                >\n                  <div className={classes.logo} />\n                  <h3 className={classes.logoTitle}>Загородные Земли</h3>\n                </Link>\n\n\n            </div>\n          </Grid>\n          <Grid item xs={12} md={7}>\n            <Grid container direction='row' justifyContent='center' alignItems=\"center\">\n              <Grid item xs={12} md={5} />\n              <Grid item xs={12} md={7}>\n                <Grid container justifyContent='center'>\n                  <Grid container justifyContent='center' alignItems=\"center\" flexDirection='row' className={classes.icons}>\n\n                    <div className={classes.descr}>\n                      <h5 className='light-text' style={{padding:'0 10px'}}>Следите за нами в </h5>\n                    </div>\n                    <img src={vk} style={{marginRight:'10px'}} className={classes.icon} onClick={()=>{window.open('https://vk.com/zagorodnyezemli', '_blank')}}/>\n                    <img src={instagram} className={classes.icon} onClick={()=>{window.open('https://www.instagram.com/zagzem', '_blank')}}/>\n\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Box my={2}>\n          <Grid container>\n            <Grid item xs={12} sm={6} md={4}>\n              <Grid container direction='column'>\n                <Link to='/villages' className={classes.menuBtn}\n                  onClick={()=>context.selectOnlyVillageType(1)}\n\n                >\n                  <h4 className='light-text'>Коттеджные поселки</h4>\n                </Link>\n                <Link to='/villages' className={classes.menuBtn + ' ' + classes.menuBtn_dacha}\n                  onClick={()=>context.selectOnlyVillageType(2)}\n                >\n                  <h4 className='light-text menu-butt' >Дачные поселки</h4>\n                </Link>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <Grid container direction='column'>\n                <Link to='/services' className={classes.menuBtn + ' ' + classes.menuBtn_services}>\n                  <h4 className='light-text '>Услуги</h4>\n                </Link>\n                <Link to='/contact' className={classes.menuBtn + ' ' + classes.menuBtn_contact}>\n                  <h4 className='light-text '>Контакты</h4>\n                </Link>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12} md={4}>\n              <Grid container justifyContent='center' alignItems=\"center\">\n                <Grid item xs={12} sm={6} md={12}>\n                  <div className={classes.phone}>\n                    <h3 onClick={()=>window.location.href='tel:84999389228'}>+7 (499) 938-92-28</h3>\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6} md={12}>\n                  <button className='main-button main-button-large'\n                    onClick={()=>setShowDialog(true)}\n                  >\n                    Написать нам\n                  </button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n        <Grid container justifyContent='center' alignItems=\"center\"  className={classes.tail}>\n          {/*<div*/}\n          {/*    className={classes.logoText}*/}\n          {/*>Zagzem</div>*/}\n          <h5 className='light-text' style={{padding:'0 10px'}}>© 2021 Все права защищены.</h5>\n        </Grid>\n      </Container>\n      <Dialog\n        open={showDialog}\n        fullWidth={true}\n        maxWidth='sm'\n        TransitionComponent={Transition}\n        onClose={()=>setShowDialog(false)}\n      > \n        <CallbackForm />\n      </Dialog>\n    </footer>\n  )\n}\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Main.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/MenuTree.jsx",["239"],"import React from 'react'\nimport AppState from '../AppState'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TreeView from '@material-ui/lab/TreeView'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport HomeIcon from '@material-ui/icons/Home'\nimport HouseIcon from '@material-ui/icons/House';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport Divider from '@material-ui/core/Divider'\n\nconst useTreeItemStyles = makeStyles(theme => ({\n  root: {\n    color: '#FFF',\n    '&:focus > $content': {\n      backgroundColor: '#FFF',\n    },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1.2, 0),\n  },\n  labelIcon: {\n    marginRight: theme.spacing(2),\n  },\n  labelText: {\n    color: '#3c4b5a',\n    flexGrow: 1,\n    lineHeight: '40px',\n  },\n}));\n\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles()\n  const { labelText, labelIcon: LabelIcon, color, bgColor, ...other } = props\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          <h4>{labelText}</h4>\n        </div>\n      }\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  )\n}\n\nStyledTreeItem.propTypes = {\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  labelIcon: PropTypes.elementType.isRequired,\n  labelText: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n});\n\nconst MenuTree = (props) => {\n  const classes = useStyles()\n  const hide = props.hide\n  const context = React.useContext(AppState) \n\n  return (\n    <TreeView\n      className={classes.root}\n      defaultCollapseIcon={<ArrowDropDownIcon />}\n      defaultExpandIcon={<ArrowRightIcon />}\n      defaultEndIcon={<div style={{ width: 24 }} />}\n      style={{paddingBottom:'60px'}}\n    >\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Link to='/' onClick={()=>hide()}>\n      <StyledTreeItem\n        nodeId=\"0\"\n        labelText=\"Главная\"\n        labelIcon={HomeIcon}\n      />\n      </Link>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n\n      <StyledTreeItem\n        nodeId=\"1\"\n        labelText=\"Поселки\"\n        labelIcon={HomeWorkIcon}\n        color=\"#1a73e8\"\n        bgColor=\"#e8f0fe\"\n      >\n        <Link to='/villages' onClick={()=>{hide();context.selectOnlyVillageType(1)}}>\n        <StyledTreeItem\n          nodeId=\"2\"\n          labelText=\"Коттеджные поселки\"\n          labelIcon={HouseIcon}\n          color=\"#1a73e8\"\n          bgColor=\"#e8f0fe\"\n        />\n        </Link>\n        <Link to='/villages' onClick={()=>{hide();;context.selectOnlyVillageType(2)}}>\n        <StyledTreeItem\n          nodeId=\"3\"\n          labelText=\"Дачные поселки\"\n          labelIcon={HouseIcon}\n          color=\"#1a73e8\"\n          bgColor=\"#e8f0fe\"\n        />\n        </Link>\n      </StyledTreeItem>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Link to='/services' onClick={()=>hide()}>\n      <StyledTreeItem\n        nodeId=\"5\"\n        labelText=\"Услуги\"\n        labelIcon={PlaylistAddCheckIcon}\n        color=\"#1a73e8\"\n        bgColor=\"#e8f0fe\"\n      />\n      </Link>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Link to='/contact' onClick={()=>hide()}>\n      <StyledTreeItem\n        nodeId=\"7\"\n        labelText=\"Контакты\"\n        labelIcon={PhoneIcon}\n        color=\"#1a73e8\"\n        bgColor=\"#e8f0fe\"\n      />\n      </Link>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n    </TreeView>\n  );\n}\n\nexport { MenuTree }\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackForm.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Navigation.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/services/index.js",["240"],"import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Chooser from \"../../components/Chooser\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Filter from \"../../components/Filter\";\nimport {SimpleAccordion} from \"./SimpleAccordion\";\nimport zemlyaIf from '../../img/images/zemlya_if.png';\nimport agenstvo from '../../img/images/agenstvo.png'\nimport CallbackFormPopUp from \"../../components/CallbackFormPopUp\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport './index.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    land: {\n        flexDirection: 'column',\n        [theme.breakpoints.up('md')]: {\n\n        }\n    }\n}))\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nclass ServicesPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        showFilter: false,\n        showDialog: false\n    }\n  }\n\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n  setShowDialog = () => {\n      this.setState({showDialog: true})\n  }\n  setCloseDialog = () => {\n      this.setState({showDialog: false})\n  }\n\n  setShowFilter = () => {\n        this.setState({ showFilter: true })\n  }\n\n  setHideFilter = () => {\n        this.setState({ showFilter: false })\n  }\n  render() {\n    return (\n      <React.Fragment>\n          <Dialog\n              open={this.state.showDialog}\n              fullWidth={true}\n              maxWidth='sm'\n              TransitionComponent={Transition}\n              onClose={() => {\n                  this.setCloseDialog()\n              }}\n          >\n              <CallbackFormPopUp />\n          </Dialog>\n      <Container maxWidth=\"lg\">\n          {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\n        <Box my={2}>\n            <h2 className='title' style={{marginBottom: '22px', marginTop: '40px'}}>МЫ - <span style={{color: '#01eb88'}}>«Загородные земли»</span></h2>\n            <h4 className='description'>И мы предлагаем открытое сотрудничество!</h4>\n            <h4 style={{marginBottom: '40px'}}>Мы оказываем <span style={{color: '#01eb88'}}>услуги по созданию и реализации коттеджных и дачных поселков:</span></h4>\n        </Box>\n\n          <div className='land'>\n              <div className='land_img'>\n                  <img src={zemlyaIf} alt=\"\"/>\n              </div>\n              <Box>\n                  <h3 className='title_land' style={{\n                      textAlign:'left',\n                      color: '#3C4B5A',\n                      fontFamily: 'Roboto, sans-serif',\n                      fontWeight: '900',\n                      marginBottom: '40px'\n                  }}>Если у тебя есть земля, <span className='title_span' style={{color: '#01eb88'}}>МЫ:</span></h3>\n\n                  <SimpleAccordion/>\n              </Box>\n          </div>\n\n        <div className='agency'>\n            <Box my={2}>\n                <h3 style={{\n                    textAlign:'left',\n                    color: '#3C4B5A',\n                    fontFamily: 'Roboto, sans-serif',\n                    fontWeight: '900',\n                    marginBottom: '40px'\n                }}>Если у тебя<span style={{color: '#01eb88'}}> агентство недвижимости</span><br className='br'/> или <span style={{color: '#01eb88'}}>ты частный риелтор:</span></h3>\n\n                <Box m={2}>\n                    <h4 style={{color: 'black', fontWeight:'800'}}>Мы ждем от тебя:</h4>\n                    <h5>Поиск клиента самостоятельно и ведение его любым удобным способом.</h5>\n                </Box>\n\n                <Box m={2}>\n                    <h4 style={{color: 'black'}}>Мы предоставим тебе:</h4>\n                    <h5>&mdash; Юридическое сопровождение сделки</h5>\n                    <h5>&mdash; Офис для подписания договоров</h5>\n                    <h5>&mdash; Информацию о последних новостях в поселке</h5>\n                    <h5>&mdash; Проведем показы в наших поселках</h5>\n                    <h5>&mdash; Проведем БЕСПЛАТНОЕ обучение, для тебя или твоих агентов</h5>\n                    <h5>&mdash; Предоставим доступ к Базе знаний</h5>\n                </Box>\n            </Box>\n            <div className='agency_img'>\n                <img src={agenstvo} alt=\"\"/>\n            </div>\n        </div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <button style={{width: '350px'}} className='main-button main-button-large'\n                        onClick={()=>this.setShowDialog()}\n                >\n                    Написать нам\n                </button>\n            </div>\n\n\n          <Container maxWidth='lg' >\n              <Chooser />\n          </Container>\n          <div className='filter-button' onClick={this.setShowFilter}>\n              <h5 style={{position: 'absolute', top: '-30px'}}>Подобрать</h5>\n              <FilterListIcon style={{width:'55px',height:'55px',color:'#FFF'}} />\n          </div>\n      </Container>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ServicesPage\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/village/index.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/villages/index.js",["241","242"],"import React, {useState, useEffect} from 'react'\nimport AppState from '../../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport Filter from '../../components/Filter'\nimport ReviewCard from '../../components/ReviewCard'\nimport Chooser from \"../../components/Chooser\";\nimport {villagesThumbnail as villages} from '../../index'\n\n// creating array with directions\nlet buildingDirections = [\n  {\n    side: 1,\n    sideName: 'Северное направление',\n    buildings: []\n  },\n  {\n    side: 2,\n    sideName: 'Южное направление:',\n    buildings: []\n  },\n  {\n    side: 3,\n    sideName: 'Западное направление:',\n    buildings: []\n  },\n  {\n    side: 4,\n    sideName: 'Восточное направление:',\n    buildings: []\n  },\n  {\n    side: 5,\n    sideName: 'Юго-западное направление:',\n    buildings: []\n  },\n  {\n    side: 6,\n    sideName: 'Юго-восточное направление',\n    buildings: []\n  },\n  {\n    side: 7,\n    sideName: 'Северо-западное направление',\n    buildings: []\n  }\n]\n// making an array of buildings sorting it\nfor (const {sideOfMkad, ...props } of villages) {\n  buildingDirections[sideOfMkad - 1].buildings.push({sideOfMkad, ...props})\n}\n\n// removing all empty building directions\nbuildingDirections = buildingDirections.filter(({buildings}) => buildings.length !== 0)\n\nconst postsPerPage = 9\n// create two empty arrays for both holded and display posts\nconst buildingDirectionsDisplay = []\nconst buildingDirectionsHolded = []\n\n// getting posts we should hold and display\nfor (const {buildings} of buildingDirections) {\n  buildingDirectionsDisplay.push(buildings.slice(0, postsPerPage))\n  buildingDirectionsHolded.push(buildings.slice(postsPerPage))\n}\n\n// push to the original array what we should display\nfor (const index in buildingDirections) {\n  buildingDirections[index].buildings = buildingDirectionsDisplay[index]\n}\n\nfunction VillagesPage() {\n  const [showFilter, setShowFilter] = useState(false)\n  const [render, setRender] = useState(false)\n\n  const [posts, setPosts] = useState(buildingDirections)\n  const [holdedPosts, setHoldedPosts] = useState(buildingDirectionsHolded)\n\n  function handleShowMore(index) {\n    // getting new posts to publshing them from holded posts  \n    const getNewPosts = [...posts[index].buildings, ...holdedPosts[index].slice(0, postsPerPage)]\n    // remove ${postsPerPage} posts from holdedPosts\n    const deleteHoldedPosts = [...holdedPosts[index].slice(postsPerPage)]\n    // making a copy of array\n    const postsCopied = Array.from(posts)\n    const holdedPostsCopied = Array.from(holdedPosts)\n    // pusing new posts to update value\n    postsCopied[index].buildings = getNewPosts\n    // updating holding posts\n    holdedPostsCopied[index] = deleteHoldedPosts\n\n    setPosts(postsCopied)\n    setHoldedPosts(holdedPostsCopied)\n  }\n\n  useEffect(() => {\n  }, [holdedPosts])\n  \n  function handleRender() {\n    window.scrollTo(0, 0)\n    setRender(true)\n  }\n\n  \n\n  return (\n    <Grid container>\n      {showFilter === true ? <Filter hidden={e => setShowFilter(false)} expanded={true} /> : ''}\n        <Container maxWidth='lg' style={{ marginBottom: '33px' }}>\n          <center>\n          <h2>{posts.length < 1 ? 'Посёлков не найдено' : ''}</h2>\n          </center>\n          <Grid container spacing={3}>\n          {posts.map(({side, sideName, buildings}, index) => (\n              <>\n                {sideName ? \n                  <>\n                    <Grid item xs={12} key={'HDR' + side}>\n                      <h3 style={{ padding: '25px 0 15px 0' }}>{sideName}</h3>\n                    </Grid>\n                    {buildings.map((item, i) => \n                      <Grid item\n                        key={'IL2E' + item.uname + i}\n                        xs={12}\n                        sm={6}\n                        md={4}\n                      >\n                        <ReviewCard\n                          uid={item.uid}\n                          type={item.type}\n                          uname={item.uname}\n                          name={item.name}\n                          bgs={item.bgs}\n                          road={item.road}\n                          fromMkad={item.fromMkad}\n                          price={item.price}\n                          leftLands={item.leftLands}\n                          priceLands={item.priceLands}\n                          sideOfMkad={item.sideOfMkad}\n                          permittedUse={item.permittedUse}\n                          communications={item.communications}\n                        />\n                      </Grid>\n                    )}\n                      <div className=\"show-more\">\n                        <button \n                          onClick={() => handleShowMore(index)}\n                          hidden={holdedPosts[index].length === 0 ? true : false}\n                        >\n                          Показать еще\n                        </button>\n                      </div>\n                  </>\n                : null}\n              </>\n            ))}\n          </Grid>\n        </Container>\n        <div className='filter-button' onClick={e => setShowFilter(true)}>\n          <h5 style={{ position: 'absolute', top: '-30px' }}>Подобрать</h5>\n          <FilterListIcon style={{ width: '55px', height: '55px', color: '#FFF' }} />\n        </div>\n        <Container maxWidth='lg' >\n          <Chooser render={handleRender} />\n        </Container>\n    </Grid>\n  )\n}\n\nexport default VillagesPage\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/welcome/index.js",["243","244","245"],"import React, {useState, useEffect, useRef} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Filter from '../../components/Filter'\nimport Chooser from '../../components/Chooser'\nimport ContactForm from '../../components/ContactForm'\nimport IconBlock from '../../components/IconBlock'\nimport AnimSlider from '../../components/AnimSlider'\nimport fonTest from '../../img/images/fon-test.jpg'\nimport { Link } from 'react-router-dom'\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CallbackFormPopUp from \"../../components/CallbackFormPopUp\";\nimport {SlickSlider} from \"../../components/AnimSlider/SlickSlider\";\n\nconst useStyles = makeStyles((theme) => ({\n  descr: {\n    padding: '0px 0px 25px 0px',\n  },\n  filter: {\n    position: 'relative',\n    width: '100%',\n    overflow: 'hidden',\n  },\n  bg: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    zIndex: '10',\n    borderRadius: '15px',\n  },\n  fg: {\n    position: 'relative',\n    width: '100%',\n    zIndex: '20',\n  },\n  testFon: {\n    width: '100%',\n    height: '350px',\n    background: `url(${fonTest})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  },\n  test: {\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    background: '#fff',\n    borderRadius: '15px',\n    overflow: 'hidden',\n    margin: '50px 0',\n  },\n  filterBlock: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'linear-gradient(180deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\n    borderRadius: '15px',\n  },\n  header: {\n    padding: '15px',\n    color: '#fff',\n  },\n  welcomeHeader: {\n    padding: '50px 0',\n    fontSize: '1.7rem',\n    textAlign: 'center',\n  }\n}))\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst WelcomePage = (props) => {\n\n  //observer\n  ////////////////////////////////////////////////////\n  const root = useRef(null);\n\n  const options = {\n    rootMargin: '0px',\n    threshold: [ 0 ]\n  };\n\n  const trueCallback = function(entries, observer) {\n    entries.forEach((entry) => {\n      const {target, isIntersecting} = entry;\n\n      if (isIntersecting) {\n        console.log('сработало')\n        setShowPopUp(true)\n        observer.unobserve(target)\n      }\n\n    })\n  }\n\n  const observer = new IntersectionObserver( trueCallback, options );\n  let target\n////////////////////////////////////////\n\n\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [showPopUp, setShowPopUp] = useState(false)\n\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n\n  useEffect(() => {\n\n    // let btnSlider = document.querySelector('.nextButton');\n    // btnSlider.classList.remove(\"disabled\");\n\n\n    target = root.current\n    observer.observe( target )\n\n    window.addEventListener('scroll', handleScroll, { passive: true });\n\n    return () => {\n        window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const classes = useStyles({ scrollPosition });\n  return (\n           <>\n             <Dialog\n                 open={showPopUp}\n                 fullWidth={true}\n                 maxWidth='sm'\n                 TransitionComponent={Transition}\n                 onClose={() => {\n                   setShowPopUp(false)\n                 }}\n             >\n               <CallbackFormPopUp />\n             </Dialog>\n\n      <div style={{position:'relative',width:'100%',height:'100%',top:'0'}}>\n        <Container maxWidth='lg' disableGutters={true}>\n          <SlickSlider />\n        </Container>\n      </div>\n\n      <Container maxWidth='lg'>\n        <h1 className={classes.welcomeHeader}>Подбери лучшее место для загородной жизни</h1>\n        <div className={classes.filterBlock}>\n          <div className={classes.filter}>\n            <div className={classes.bg} />\n            <div className={classes.fg}>\n              <Filter />\n            </div>\n          </div>\n        </div>\n      </Container>\n                 \n      <Container maxWidth='lg'>\n        <h2 id='target' className={classes.welcomeHeader}>Почему именно мы?</h2>\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='like'\n              color='#f4f2fc'\n              value='Подборка и продажа земельных активов от собственника без комиссии.'\n            /> \n          </Grid>\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='marketing'\n              color='#f2feed'\n              value='Более 2500 земельных участков в земельной базе.'\n            />\n          </Grid>\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='shield'\n              color='#fef0ed'\n              value='Юридическая чистота сделки от экспертов с опытом более 10 лет.'\n            />\n          </Grid>\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='certificate'\n              color='#ecfbff'\n              value='Гарантия на строительство и подбор участка.'\n            />\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg' >\n        <div className={classes.test}>\n          <div className={classes.testIn}>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\n              <Grid item xs={12} md={6} >\n                <h3 ref={root}>Заполните форму и получите полный каталог поселков на почту и скидку 3%</h3>\n                <center>\n                  <Box m={2}>\n                    <button className='main-button' onClick={()=>{window.open('https://mrqz.me/zagzem', '_blank')}}>\n                      Пройти тест\n                    </button>\n                  </Box>\n                </center>\n              </Grid>\n              <Grid item xs={12} md={6} >\n                <Link\n                    to='/villages'\n                >\n                <div className={classes.testFon} />\n                </Link>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg' >\n        <ContactForm />\n      </Container>\n\n      <Container maxWidth='lg' >\n        <Chooser />\n      </Container>\n    </>\n  )\n}\n\nexport default WelcomePage\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/contact/index.js",["246"],"import React from 'react'\nimport ContactForm from '../../components/ContactForm'\nimport Container from '@material-ui/core/Container'\nimport Chooser from \"../../components/Chooser\";\nimport Filter from \"../../components/Filter\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport CallbackForm from \"../../components/CallbackForm\";\nimport CallbackFormContact from \"../../components/CallbackFormContact\";\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showFilter: false,\n    }\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n  setShowFilter = () => {\n    this.setState({ showFilter: true })\n  }\n\n  setHideFilter = () => {\n    this.setState({ showFilter: false })\n  }\n\n  render() {\n      console.log('contact')\n    return (\n      <Container maxWidth='lg'>\n        <CallbackFormContact />\n        {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\n        <div className='fullScreen'>\n          <ContactForm />\n        </div>\n        <Container maxWidth='lg' >\n          <Chooser />\n        </Container>\n        <div className='filter-button' onClick={this.setShowFilter}>\n          <h5 style={{position: 'absolute', top: '-30px'}}>Подобрать</h5>\n          <FilterListIcon style={{width:'55px',height:'55px',color:'#FFF'}} />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default ContactPage\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/SearchInput/index.js",["247"],"import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport Fuse from 'fuse.js';\nimport {villages} from \"../../index\";\n// import villages from '../../villages'\n\nlet characters = villages.map(el =>({ ...el, keyFields: 'поселок ' + el.name}) )\n\nconst fuse = new Fuse(characters, {\n  keys: [\n    'keyFields'\n  ],\n  includeScore: true\n});\n\n\n// const results = fuse.search('мирный');\n// let filter = results.map(el => ({...el.item}))\n\n\nconst languages = [\n  {\n    name: 'Сказка-5',\n    uname: 'skazka-5',\n  },\n  {\n    name: 'Шелест',\n    uname: 'shelest',\n  },\n  {\n    name: 'Мирный',\n    uname: 'mirniy',\n  },\n  {\n    name: 'Хомутово',\n    uname: 'homutovo',\n  },\n  {\n    name: 'Адмиральский',\n    uname: 'admiralskiy',\n  },\n  {\n    name: 'Реки',\n    uname: 'reki',\n  },\n  {\n    name: 'Игнатово',\n    uname: 'ignatovo',\n  },\n  {\n    name: 'Черничное',\n    uname: 'chernichnoe',\n  },\n  {\n    name: 'Пушкино Лайф',\n    uname: 'pushkino-life',\n  },\n  {\n    name: 'Лисичкин Луг',\n    uname: 'lisichkin-lug',\n  },\n  {\n    name: 'Гжельские узоры',\n    uname: 'gjelskie-uzori',\n  },\n  {\n    name: 'Грильяж',\n    uname: 'grilyag',\n  },\n  {\n    name: 'Земляничная поляна',\n    uname: 'zemlynichnaya-polyana',\n  },\n  {\n    name: 'Ильинское ИЖС',\n    uname: 'ilinskoe-igs',\n  },\n  {\n    name: 'Лесная сказка',\n    uname: 'lesnaya-skazka',\n  },\n  {\n    name: 'Матчино лайф',\n    uname: 'matchino-life',\n  },\n  {\n    name: 'Матчино парк',\n    uname: 'matchino-park',\n  },\n  {\n    name: 'Рэд',\n    uname: 'red',\n  },\n  {\n    name: 'Сказка 6',\n    uname: 'skazka-6',\n  },\n  {\n    name: 'Сонинский лес',\n    uname: 'soninskiy-les',\n  },\n  {\n    name: 'Степыгино',\n    uname: 'stepigino',\n  },\n  {\n    name: 'Степыгино ИЖС',\n    uname: 'stepigino-igs',\n  },\n  {\n    name: 'Фаворит',\n    uname: 'favorit',\n  },\n  {\n    name: 'Фишер',\n    uname: 'fisher',\n  },\n  {\n    name: 'Шишкино-3',\n    uname: 'shishkino-3',\n  },\n  {\n    name: 'Новая Володарка',\n    uname: 'new-volodarka',\n  },\n  {\n    name: 'Русавкино-Заречное',\n    uname: 'rusavkino-zarechnoe',\n  },\n  {\n    name: 'Флора Парк',\n    uname: 'flora-park',\n  },\n  {\n    name: 'Удино Парк',\n    uname: 'udino-park',\n  },\n  {\n    name: 'Южный парк',\n    uname: 'south-park',\n  },\n  {\n    name: 'Ртищево',\n    uname: 'rtishevo',\n  },\n  {\n    name: 'Благовещенское',\n    uname: 'blagoveshenskoe',\n  },\n  {\n    name: 'Горки лайф',\n    uname: 'gorki-laif',\n  },\n  {\n    name: 'Маслово',\n    uname: 'maslovo',\n  },\n];\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  \n  if (escapedValue === '') {\n    return [];\n  }\n\n  // const regex = new RegExp('^' + escapedValue, 'i');\n\n  // const results = fuse.search(value);\n  // let filter = results.map(el => ({...el.item}))\n  // let filteredArrName = languages.filter(language => regex.test(language.name));\n\n  const results = fuse.search(escapedValue);\n  let filteredArrName = results.map(el => ({...el.item}))\n\n  return filteredArrName\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  const uname = suggestion.uname\n  return (\n    <Link\n      to={`/village/${uname}`}\n    > \n    <span>{suggestion.name}</span>\n    </Link>\n  );\n}\n\nclass SearchInput extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };    \n  }\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n      value: ''\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    const inputProps = {\n      placeholder: \"Поиск\",\n      value,\n      onChange: this.onChange,\n\n    };\n\n    return (\n          <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n          />\n    );\n  }\n}\n\nexport default SearchInput\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/StyledInput.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/InputPhone.js",["248"],"import React from \"react\"\nimport PhoneInput from 'react-phone-number-input'\n//import 'react-phone-number-input/style.css'\nimport './InputPhone.css'\nimport {makeStyles} from \"@material-ui/styles\";\n\nclass InputPhone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const value = this.props.value\n\n    return (\n      <React.Fragment>\n      <PhoneInput\n        defaultCountry=\"RU\"\n        placeholder=\"Введите номер телефона *\"\n        value={value}\n        onChange={this.props.setValue}\n        style={{\n          marginTop:'15px',\n          height:'4em',\n          // width: '365px'\n        }}\n      />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputPhone\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/api/api.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/pages/services/SimpleAccordion.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Chooser.js",["249","250","251","252","253"],"import React, {useEffect} from 'react';\nimport { Link } from 'react-router-dom'\nimport AppState from '../AppState'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Grid from '@material-ui/core/Grid'\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    backgroundColor: 'white'\n  },\n  tab: {\n    backgroundColor: 'white',\n    color: '#3c4b5a',\n    fontSize: '80%',\n    fontWeight: 'bold',\n  },\n  root: {\n    position: 'relative',\n    backgroundColor: 'white',\n    margin: '50px 0',\n    borderRadius: '15px',\n    overflow: 'hidden'\n  },\n  btn: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none',\n    margin: '5px',\n    width: 'calc(100% - 10px)',\n    borderRadius: '15px',\n    border: '1px solid #f0f4f5',\n    background: '#f0f4f5',\n    color: '#3c4b5a',\n    textAlign: 'left',\n    padding: '17px 22px',\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#3c4b5a',\n      background: '#fff',\n    },\n  },\n    btnActive: {\n        color: '#53a321',\n        background: '#fff',\n        width: 'calc(100% - 10px)',\n        border: '1px solid #53a321',\n        alignItems: 'center',\n        textAlign: 'left',\n        padding: '17px 22px',\n        margin: '5px'\n    }\n}))\n\nconst arrRoadsChangeState = []\nconst arrAreasChangeState = []\nconst arrFromMkadChangeState = []\nconst arrPriceChangeState = []\n\nwindow.arr = arrRoadsChangeState\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction LinkTab(props) {\n  const classes = useStyles();\n  return (\n    <Tab\n      component=\"a\"\n      className={classes.tab}\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\n\nexport default function Chooser(props) {\n  const context = React.useContext(AppState)\n  const [value, setValue] = React.useState(0);\n\n  const [price, setPrice] = React.useState()\n    const [fromMkad, setFromMkad] = React.useState()\n\n  const classes = useStyles();\n\n  useEffect(()=> {\n      setPrice(context.selectedPriceFrom)\n\n      // console.log(context.selectedPriceFrom)\n      // console.log(context.selectedRoads)\n      // console.log(context.selectedAreas)\n      // console.log(context.selectedFromMkad)\n\n  },[context.selectedPriceFrom,context.selectedRoads.length, context.selectedAreas.length, context.selectedFromMkad])\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const uniqRoads = context.uniqRoads\n  const uniqAreas = context.uniqAreas\n\n  const uniqDist = ['30','40','50','60','70','80','90','150','200']\n  const uniqPrices = [\n          'до 250 000 р.',\n          'до 500 000 р.',\n          'до 750 000 р.',\n          'до 1 000 000 р.',\n          'до 1 500 000 р.',\n          'до 3 000 000 р.',\n          'до 5 000 000 р.',\n          'до 10 000 000 р.',\n          'до 20 000 000 р.',\n        ]\n\n  const arrRoads = []\n  const arrAreas = []\n  const arrDist = []\n  const arrPrices = []\n\n  for (let i=0;i<uniqRoads.length;i++) {\n      let roads = context.selectedRoads\n      let roadsBtn = context.selectedRoadsBtn\n    arrRoads.push(\n      <Grid key={'ARRROADS'+i} item xs={12} sm={6} md={4} lg={3}>\n\n          <button\n              disabled={false}\n              className={ ~roadsBtn.indexOf(uniqRoads[i]) ? classes.btnActive : classes.btn }\n              style={{fontSize:'1.1rem'}}\n              onClick={(e)=>{\n                  context.selectOnlyRoadBtn(uniqRoads[i])\n                  arrRoadsChangeState.push(uniqRoads[i])\n              }}\n          >{uniqRoads[i]}</button>\n      </Grid>\n    )\n  }\n\n  for (let i=0;i<uniqAreas.length;i++) {\n      let areas = context.selectedAreas\n      let areasBtn = context.selectedAreasBtn\n    arrAreas.push(\n      <Grid key={'ARRAREAS'+i} item xs={12} sm={6} md={4} lg={3}>\n\n          <button\n              disabled={false}\n              className={ ~areasBtn.indexOf(uniqAreas[i]) ? classes.btnActive : classes.btn }\n              style={{fontSize:'1.1rem'}}\n              onClick={(e)=>{\n                  // context.selectOnlyArea(uniqAreas[i])\n\n                  context.selectOnlyAreaBtn(uniqAreas[i])\n                  arrAreasChangeState.push(uniqAreas[i])\n              }}\n          >{uniqAreas[i]}</button>\n\n      </Grid>\n    )\n  }\n\n  for (let i=0;i<uniqDist.length;i++) {\n      let dist = uniqDist[i].replace(/[^+\\d]/g, '')*1\n\n      let distBtn = context.selectedFromMkadBtn\n\n    arrDist.push(\n      <Grid key={'ARRDIST'+i} item xs={12} sm={6} md={4} lg={3}>\n\n          <button\n              disabled={false}\n              className={dist === distBtn ? classes.btnActive : classes.btn}\n              style={{fontSize:'1.1rem'}}\n              onClick={(e)=>{\n                  // context.selectOnlyDist(uniqDist[i])\n\n                  context.selectOnlyFromMkadBtn(uniqDist[i])\n                  arrFromMkadChangeState.push(uniqDist[i])\n              }}\n          >до {uniqDist[i]} км.</button>\n\n      </Grid>\n    )\n  }\n\n  for (let i=0;i<uniqPrices.length;i++) {\n      let ctx2 = uniqPrices[i].replace(/[^+\\d]/g, '')*1\n      let priceBtn = context.selectedPriceBtn\n\n      arrPrices.push(\n      <Grid key={'ARRPRICE'+i} item xs={12} sm={6} md={4} lg={3}>\n          <button\n              disabled={false}\n              className={ctx2 === priceBtn ? classes.btnActive : classes.btn}\n              style={{fontSize:'1.1rem'}}\n              onClick={ (e)=>{\n                  context.selectOnlyPriceBtn(uniqPrices[i])\n                  arrPriceChangeState.push(uniqPrices[i])\n                  // context.selectOnlyPrice(uniqPrices[i])\n                  }\n\n              }\n          >Участок {uniqPrices[i]}</button>\n        {/*</Link>*/}\n      </Grid>\n    )\n  }\n\n  let setFilteredRoads = () => {\n      arrRoadsChangeState.map(el => context.selectOnlyRoad(el))\n      arrAreasChangeState.map(el => context.selectOnlyArea(el))\n      arrFromMkadChangeState.map(el => context.selectOnlyDist(el))\n      arrPriceChangeState.map(el => context.selectOnlyPrice(el))\n      props.render()\n  }\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar color='inherit' position=\"static\" style={{boxShadow: 'none',}}>\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n          className={classes.tabs}\n        >\n          <LinkTab label=\"Шоссе\" />\n          <LinkTab label=\"Районы\" />\n          <LinkTab label=\"от МКАД\" />\n          <LinkTab label=\"Цена\" />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <Grid container>\n          {arrRoads}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        <Grid container>\n          {arrAreas}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        <Grid container>\n          {arrDist}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={3}>\n        <Grid container>\n          {arrPrices}\n        </Grid>\n      </TabPanel>\n\n        <div style={{display:'flex', justifyContent:'center'}}>\n            <Link\n                to='/villages'\n            >\n            <button className='main-button' onClick={setFilteredRoads}>\n                Показать\n            </button>\n                </Link>\n        </div>\n\n    </div>\n  );\n}\n\n\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackFormPopUp.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackFormContact.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ContactForm.js",["254"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  mapSection: {\n    position:'relative',\n    width: '100%',\n    background: '#fff',\n    minHeight: '500px',\n    overflow: 'hidden',\n  },\n  mapFrame: {\n    height: '750px',\n    // marginTop: '140px',\n    borderRadius: '15px',\n    overflow: 'hidden',\n    [theme.breakpoints.up('sm')]: {\n      marginTop: '0px',\n      height: '500px',\n    }\n  },\n  text: {\n    color: '#3c4b5a',\n  },\n  textDescr: {\n    color: '#3c4b5a',\n  },\n  textValue: {\n    fontSize: '0.8rem',\n    [theme.breakpoints.up('sm')]: {\n      color: '#3c4b5a',\n      fontSize: '1.0rem',\n    }\n  },\n  infoMapBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '60px',\n    margin: '0px 0px 30px 0px',\n  },\n  mapInfo: {\n    position: 'absolute',\n    padding: '30px 15px',\n    margin: '40px 0px',\n    top: '15px',\n    borderRadius: '15px',\n    background: '#fff',\n    border: '1px solid #eff3f4',\n\n  },\n}))\n\nconst ItemMapInfo = (props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoMapBlock}>\n      <h5 style={{margin:'5px 0'}} className={classes.text}>\n        {props.name}\n      </h5>\n      <h4 style={{margin:'0'}} className={classes.textValue}>\n        {props.value}\n      </h4>\n      <h4 style={{margin:'0'}} className={classes.textValue}>\n        {props.dopValue}\n      </h4>\n    </div>\n  )\n}\n\nconst ContactForm = (props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.mapSection}>\n        <Grid container>\n          <iframe title='qw12' src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Aeea71e7b41c1a53dc55fc01665165149f7ea1b10e1f8a05b47a879cb748c829d&amp;source=constructor\" width=\"100%\" height=\"100%\" frameBorder=\"0\" className={classes.mapFrame}></iframe>\n          <Container maxWidth='lg'>\n          <Grid item xs={12} md={4}>\n            <div className={classes.mapInfo}>\n              <ItemMapInfo\n                name='Адрес:'\n                value='Ленинский просп., 30А, г. Москва'\n                dopValue='Проспект Маркса, д. 14, г. Обнинск'\n              />\n              <ItemMapInfo\n                name='Телефон:'\n                value='+7 (499) 938-92-28'\n              />\n              <ItemMapInfo\n                name='Почта:'\n                value='sales@zagzem.ru'\n              />\n              <ItemMapInfo\n                name='Время работы:'\n                value='пн-вс 09:00-21:00'\n              />\n            </div>\n          </Grid>\n          </Container>\n        </Grid>\n      </div>\n  )\n}\n\nexport default ContactForm\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/IconBlock.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/SlickSlider.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/SimilarVillages.js",["255","256","257","258","259","260"],"import React from 'react';\nimport AppState from '../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport ReviewCard from './ReviewCard'\n\nconst postsPerPage = 3;\nlet arrayForHoldingPosts = []\n\nconst SimilarVillages = ({rerender, uid, road, price, ...props}) => {\n  const context = React.useContext(AppState)\n\n  const [postsToShow, setPostsToShow] = React.useState([]);\n  const [next, setNext] = React.useState(3);\n\n  // const loopWithSlice = (start, end) => {\n  //   const slicedPosts = ReviewCard.slice(start, end);\n  //   arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\n  //   setPostsToShow(arrayForHoldingPosts);\n  // };\n\n  // const filteredVillages = context.filteredVillages\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price >= (price - price*0.2) && el.price <= (price + price*0.2))\n\n\n  const newArr = []\n  for (let i=0;i<filteredVillages.length;i++) {\n    if (newArr.length < 3) {\n    if (uid !== filteredVillages[i].uid) {\n      newArr.push(\n        <Grid item\n          key={'IpL'+filteredVillages[i].uname+i}\n          xs={12}\n          sm={6}\n          md={4}\n        > \n          <ReviewCard\n            type={filteredVillages[i].type}\n            uname={filteredVillages[i].uname}\n            name={filteredVillages[i].name}\n            bgs={filteredVillages[i].bgs}\n            road={filteredVillages[i].road}\n            fromMkad={filteredVillages[i].fromMkad}\n            price={filteredVillages[i].price}\n            leftLands={filteredVillages[i].leftLands}\n            priceLands={filteredVillages[i].priceLands}\n            sideOfMkad={filteredVillages[i].sideOfMkad}\n            communications={filteredVillages[i].communications}\n            rerender={rerender}\n          />\n        </Grid>\n      )\n    }\n    }\n  }\n  // eslint-disable-next-line no-lone-blocks\n  {if (filteredVillages.length < 2) {\n    return ''\n  }else {\n    return (\n        <>\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\n          <Grid container spacing={3} style={{justifyContent:'center'}}>\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\n            {newArr}\n            {/*</div>*/}\n          </Grid>\n        </>\n\n    )\n  }}\n\n}\n\nexport default SimilarVillages\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ReviewCard.js",["261","262","263","264"],"/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from './IconButton'\nimport Carousel from 're-carousel'\nimport Grid from '@material-ui/core/Grid'\nimport Icons from './Icons'\nimport IndicatorDots from './IndicatorDots'\nimport AppState from \"../AppState\";\nimport LazyLoad from 'react-lazyload';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '15px',\n    border: '1px solid #eff3f4',\n    boxShadow: 'none',\n  },\n  img: {\n    width: '100%',\n    height: '250px',\n    [theme.breakpoints.up('lg')]: {\n      height: '250px'\n    },\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardSubHeader: {\n    height: '60px',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s opacity',\n    '&:hover': {\n      opacity: '.6',\n      transition: '.3s opacity',\n    }\n  },\n  cardPrice: {\n  },\n  infoBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '40px', \n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '45px',\n    top: '0',\n    width: 'calc(100% - 45px)',\n    height: '100%',\n  }\n}));\n\nconst ItemInfo = ({ icon, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoIcon}>\n        <Icons\n          name={icon}\n          color='#607D8B'\n          size={24}\n        />\n      </div>\n      <div className={classes.infoValue}>\n        <h5 className='light-text'>{value}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default function ReviewCard(props) {\n\n  const context = React.useContext(AppState)\n\n  const uid = props.uid\n  const type = props.type || ''\n  const bgs = props.bgs || []\n  const name = props.name || ''\n  const uname = props.uname || ''\n  const road = props.road || ''\n  const fromMkad = props.fromMkad || ''\n  const price = props.price || ''\n  const leftLands = props.leftLands || ''\n  const communications = props.communications || {}\n  const priceLands = props.priceLands || []\n  const sideOfMkad = props.sideOfMkad || ''\n  const permittedUse = props.permittedUse || 2\n\n  const classes = useStyles()\n\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \n\n  const slides = []\n\n  for (let i=0;i<bgs.length;i++) {\n    slides.push(\n      <LazyLoad>\n        <img\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            objectFit: 'cover'\n          }}\n        />\n      </LazyLoad>\n    )\n  }\n\n  let kk = []\n  const infoList = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n\n  // Communications\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || ''\n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          value={'Электричество '+value}\n          size='small'\n          tooltip='Электрификация'\n        />\n      )\n    }\n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'dfgh'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Водоснабжение'\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Газификация'\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Ограждение'\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Детская площадка'\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Освещение улиц'\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Спортивная площадка'\n\n        />\n      )\n    }\n  }\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.img}>\n        <Carousel loop auto widgets={[IndicatorDots]}>\n          {slides}\n        </Carousel>\n      </div>\n\n      <Link\n          to={`/village/${uname}`}\n          onClick={props.rerender}\n      >\n\n      <CardContent className={classes.cardContent}>\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\n        <ItemInfo\n          icon='compass'\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\n        />\n        <ItemInfo\n          icon='car'\n          value={`${road}`}\n        />\n        <ItemInfo\n          icon='price'\n          value={`Сотка от ${price} р.`}\n        />\n        <ItemInfo\n          icon='mapPlaces'\n          value={`Участки от ${spaceInNumber(priceLands[0]) } р.`}\n        />\n        <ItemInfo\n          icon='flag'\n          value={`В продаже ${leftLands} шт.`}\n        />\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\n          {infoList}\n        </Grid>\n        <center>\n          <button className='main-button'>Подробнее</button>\n        </center>\n      </CardContent>\n      </Link>\n    </Card>\n  );\n}\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Page.js",["265","266","267"],"import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TargetForm from './TargetForm'\nimport IconButton from './IconButton'\nimport { MyMap } from './MyMap'\nimport IndicatorDots from './IndicatorDots'\nimport CarouselButtons from './CarouselButtons'\nimport Carousel from 're-carousel'\nimport Dialog from '@material-ui/core/Dialog'\nimport CallbackPlanForm from './CallbackPlanForm'\n\nimport testImage from '../img/images/villaLabel.png'\nimport CallbackFormPopUp from \"./CallbackFormPopUp\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    transition: 'all 0.3s ease-out',\n\n  },\n  header: {\n    width: '100%',\n    margin: '0 0px 40px 0px',\n  },\n  subInfo: {\n    width: '100%',\n    margin: '30px 0px 15px 0px',\n    padding: '5px',\n    borderRadius: '15px',\n  },\n  btns: {\n    margin: '30px 0px 30px 0px',\n  },\n  descrBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },\n  descrImg: {\n    width: '100%',\n    height: '100%',\n    backgroundImage: `url(${testImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain'\n  },\n  targetBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },  \n  mapSection: {\n    position:'relative',\n    margin: '30px 0px 30px 0px',\n    background: '#fff',\n    borderRadius: '15px',\n    minHeight: '780px',\n    overflow: 'hidden',\n    [theme.breakpoints.up('md')]: {\n      minHeight: '460px',\n    },\n  },\n  btn: (props => ({\n    background: '#FFF',\n    color: '#0197fd',\n    transition: 'all ease .45s',\n    cursor: 'pointer',\n    borderRadius: '15px',\n    boxShadow: 'inset 0 0 0 1px #0197fd',\n    padding: '20px 20px',\n    margin: '5px 15px',\n    textAlign: 'center',\n    '&:hover': { \n      background: '#0197fd',\n      color: '#fff',\n    },\n  })),\n  infoMapBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    margin: '0px 0px 30px 10px',\n  },\n  infoBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    background: '#fff',\n    borderRadius: '15px',\n    margin: '5px',\n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '10px',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '60px',\n    top: '0',\n    width: 'calc(100% - 70px)',\n    height: '100%',\n  },\n  wrapperInfo: {\n    marginLeft: '0px',\n    borderRadius: '15px',\n    background: '#fff',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '15px',\n    }\n  },\n  mapInfo: {\n    position: 'absolute',\n    padding: '30px 15px',\n    margin: '15px',\n    borderRadius: '15px',\n    background: '#fff',\n  },\n  descrSection: {\n    width: 'calc(100% - 30px)',\n    margin: '15px',\n    minHeight: '300px',\n    background: '#fff',\n    borderRadius: '15px',\n    padding: '40px 25px',\n  },\n  genplan: (props=>({\n    position: 'relative',\n    width: '100%',\n    height: '95vh',\n    background: `url(${props.plan})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  }))\n}));\n\nconst ItemMapInfo = ({ name, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoMapBlock}>\n      <h5 style={{margin:'5px 0'}}>{name}</h5>\n      <h4 style={{margin:'0'}}>{value}</h4>\n    </div>\n  )\n}\n\nexport default function Page (props){\n  console.log('newPage render',props.village)\n  const village = props.village\n  const [showGenplan, setShowGenplan] = React.useState(false)\n  const [showSendPlan, setShowSendPlan] = React.useState(false)\n  const [showForm, setShowForm] = React.useState(false)\n  // console.log('village.permittedUse', village.permittedUse)\n\n  const waysToGetList = []\n  const communications = village.communications\n  const nature = village.nature\n  const infrastructure = village.infrastructure\n  const waysToGet = village.waysToGet\n  const descr = village.descr\n  const coords = village.coords || [0,0]\n  const bgs = village.bgs\n  const plan = village.plan\n  const safety = village.safety\n  const roadIn = village.roadIn\n  const roadTo = village.roadTo\n\n  const classes = useStyles({ plan })\n\n  let infoCoords = []\n  if (coords) {\n    infoCoords = coords\n  }\n\n  const infoDescr = []\n  if (descr) {\n    for (let i=0;i<descr.length;i++) {\n      infoDescr.push(\n        <p key={'dscr'+i} className={classes.textDescr}>\n          {descr[i]}\n        </p>\n      )\n    }\n  }\n\n  let kk = []\n  let nn = []\n  let rr = []\n  let ww = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n  if (nature) {\n    nn = Object.keys(nature)\n  }\n  if (infrastructure) {\n    rr = Object.keys(infrastructure)\n  }\n  if (waysToGet) {\n    ww = Object.keys(waysToGet)\n  }\n\n  for (let i=0;i<ww.length;i++) {\n    const key = ww[i]\n    const value = waysToGet[key] || ''\n    if (key === '1') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4} style={{height: '230px'}}>\n          <IconButton\n            iconName='car'\n            color='#0197fd'\n            selected={true}\n            value={'На автомобиле: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '2') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='bus'\n            color='#8a6eac'\n            selected={true}\n            value={'На автобусе: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '3') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='train'\n            color='#06b26b'\n            selected={true}\n            value={'На электричке: ' + value}\n          />\n        </Grid>\n      )\n    }\n  }\n   \n  const infoList = []\n  const infoListInfrastructure = []\n  const infoListNature = []\n  const infoListRoad = []\n  const infoListSafety = []\n\n  infoList.push(\n    <IconButton\n      key='cSXmmn'\n      iconName='mapPlace'\n      color='#0197fd'\n      selected={true}\n      value={village.permittedUse[0] === '1' ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\n    />\n  )\n\n  if (roadTo === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphalt'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        handler={()=>{}}\n        value='До поселка асфальтированная дорога'\n      />\n    )\n  }\n  if (roadTo === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphaltKroshka'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='До поселка дорога из асф.крошки'\n      />\n    )\n  }\n  if (roadTo === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_betonPlit'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='До поселка дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadTo === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='До поселка дорога из битого кирпича'\n      />\n    )\n  }\n  if (roadTo === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='До поселка грунтовая дорога'\n      />\n    )\n  }\n  if (roadTo === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='До поселка дорога из щебня'\n      />\n    )\n  }\n\n  if (roadIn === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_1'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        value='В поселке асфальтированная дорога'\n      />\n    )\n  }\n  if (roadIn === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_3'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='В поселке дорога из асф. крошки'\n      />\n    )\n  }\n  if (roadIn === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_6'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='В поселке дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadIn === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='В поселке дорога из битого кирпича'\n      />\n    )\n  } \n  if (roadIn === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='В поселке грунтовая дорога'\n      />\n    )\n  }\n  if (roadIn === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='В поселке дорога из щебня'\n      />\n    )\n  }\n\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || '' \n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={'Электрофикация '+value}\n        />\n      )\n    } \n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '8') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='canalization'\n          color='#ff9e5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  for (let i=0;i<rr.length;i++) {\n    const key = rr[i]\n    const value = infrastructure[key] || ''\n    if (key === '1') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='cart'\n          color='#8a6eac'\n          selected={true}\n          handler={()=>{}}\n          value={'Продукты в '+value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='school'\n          color='#f7173a'\n          selected={true}\n          handler={()=>{}}\n          value={'Школа в '+value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='detsad'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={'Детский сад в '+value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='hospital'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={'Больница в '+value}\n        />\n      )\n    }\n  }\n\n  if (safety) {\n    for (let i=0;i<safety.length;i++) {\n      const key = safety[i]\n      if (key === '1') {\n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='zabor'\n            color='#6aa3a5'\n            selected={true}\n            handler={()=>{}}\n            value='Поселок огорожен'\n          />\n        )\n      }\n      if (key === '2') {   \n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='security'\n            color='#ff5b5a'\n            selected={true}\n            handler={()=>{}}\n            value='Есть охрана'\n          />\n        )\n      }\n    }\n  }\n\n  for (let i=0;i<nn.length;i++) {\n    const key = nn[i]\n    const value = nature[key] || ''\n    if (key === '1') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='vodoem'\n          color='#5277f5'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '2') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  let nearSettlementName = ''\n  let nearSettlementDist = ''\n  let nearTownName = ''\n  let nearTownDist = ''\n  let nearRailwayName = ''\n  let nearRailwayDist = ''\n  if (village.nearSettlement) {\n    nearSettlementName = village.nearSettlement.name\n    nearSettlementDist = village.nearSettlement.distance\n  }\n  if (village.nearTown) {\n    nearTownName = village.nearTown.name\n    nearTownDist = village.nearTown.distance\n  }\n  if (village.nearRailway) {\n    nearRailwayName = village.nearRailway.name\n    nearRailwayDist = village.nearRailway.distance\n  }\n\n  let rosreestrLink = ''\n  if (village.rosreestr) {\n    rosreestrLink = village.rosreestr \n  }\n\n  const slides = []\n\n  if (bgs){\n    for (let i=0;i<bgs.length;i++) {\n      slides.push(\n        <div\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n          }}\n        />\n      )\n    }\n  }\n\n  useEffect(()=>{\n    document.getElementById('description-page').innerHTML=`${infoDescr[0].props.children}`\n  },[])\n\n  const {pathname} = useLocation()\n  console.log('pathnew', pathname)\n  const [url, setUrl] = useState('');\n\n  useEffect(()  => {\n    setUrl(pathname)\n  }, [pathname])\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <>\n      <Dialog\n          open={showForm}\n          fullWidth={true}\n          maxWidth='sm'\n          // TransitionComponent={Transition}\n          onClose={() => {\n            setShowForm(false)\n          }}\n      >\n        <CallbackFormPopUp />\n      </Dialog>\n\n      <Container maxWidth='lg'>\n        <div className={classes.header}>\n          <Grid container alignItems='center'>\n            <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\n          </Grid>\n          <Grid container alignItems='center'>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\n              <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\n              <h4 style={{padding:'10px 0'}}>{village.road}</h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\n              <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{spaceInNumber(village.price)}</span> руб/сотка</h4>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container>\n          <Grid item xs={12} md={8}>\n            <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\n              <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\n                {slides}\n              </Carousel>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <div className={classes.wrapperInfo}>\n              {infoList}\n            </div>\n            <div style={{margin:'30px 15px'}}>\n              <center>\n\n\n                  <button onClick={()=> setShowForm(true)} className='main-button'>\n                    Записаться на просмотр\n                  </button>\n\n\n              </center>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.btns}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>setShowGenplan(true)}\n              >\n                Планировка поселка\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>{window.open(rosreestrLink, '_blank')}}\n              >\n                Кадастровая карта\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                 onClick={()=>setShowSendPlan(true)}\n               >\n                Отправить планировку на email\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container spacing={3}> \n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Дороги</h4>\n              {infoListRoad}\n            </div>\n          </Grid>\n          {infoListSafety.length < 1 ? '' :\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Безопасность</h4>\n              {infoListSafety}\n            </div>\n          </Grid>\n          }\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Природа</h4>\n              {infoListNature}\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Инфраструктура</h4>\n              {infoListInfrastructure}\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.descrBlock}>\n          <Grid container>\n            <Grid item xs={12}>\n              <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\n            </Grid>\n            <Grid item xs={12} md={5}>\n              <div className={classes.descrImg} />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <div className={classes.descrSection}>\n                <span id={'description-page'}> </span>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\n        <div className={classes.mapSection}>\n          <Grid container>\n            <MyMap\n              centerMap={infoCoords}\n            />\n            <Grid item xs={12} md={4}>\n              <div className={classes.mapInfo}>\n                <ItemMapInfo\n                  name='Ближайший населенный пункт'\n                  value={nearSettlementName + ' - ' + nearSettlementDist}\n                />        \n                <ItemMapInfo\n                  name='Ближайший город'\n                  value={nearTownName + ' - ' + nearTownDist}\n                />\n                <ItemMapInfo\n                  name='Ближайшая ж/д станция'\n                  value={nearRailwayName + ' - ' + nearRailwayDist}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    \n      <Container maxWidth='lg' style={{margin: '100px 0'}}>\n        <div className={classes.subInfo}>\n          <Grid container justifyContent='space-around'>\n            {waysToGetList}\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div id='target-block' className={classes.targetBlock}>\n          <TargetForm selectedVillage={village.name} />\n        </div>\n      </Container>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='xl'\n        open={showGenplan}\n        onClose={()=>setShowGenplan(false)}\n      >\n        <div className={classes.genplan} />\n      </Dialog>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='sm'\n        open={showSendPlan}\n        onClose={()=>setShowSendPlan(false)}\n      > \n        <CallbackPlanForm village={village.name}/>\n      </Dialog>\n    </>\n  )\n}\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/index.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/index.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/utils.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/IconButton.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/IndicatorDots.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CarouselButtons.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CallbackPlanForm.js",["268","269","270"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport {sendPlanAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        padding: '15px',\n        borderRadius: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    btnTarget: {\n        margin: '10px 0px 0px 0px',\n    },\n    bodyText: {\n        fontFamily: 'FiraMedium',\n        padding: '15px',\n        fontSize: '2rem',\n        color: '#263238',\n        lineHeight: '110%',\n    },\n    textarea: {\n        width: '100%',\n        borderRadius: '15px',\n        background: '#f9f9f9',\n        color: '#191a1d',\n        cursor: 'pointer',\n        border: '2px solid #e2e2e2',\n        fontFamily: 'FiraLight',\n        fontSize: '1.25rem',\n        marginTop: '15px',\n        outline: '0',\n        padding: '15px'\n    }\n}))\n\nconst CallbackPlanForm = (props) => {\n    const village = props.village\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const classes = useStyles({})\n\n    const submit = () => {\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n\n        if (x) {\n            sendPlanAmoCRM(email, village)\n                .finally(()=>{\n                    setEmail('')\n                    setSending(true)\n                })\n        } else {\n            alert('Введите корректный адрес почты')\n        }\n\n\n    }\n\n    if (sending) {\n        return (\n            <div className={classes.root}>\n                <Grid container justifyContent='center' alignItems='center'>\n                    <Typography align='center' className={classes.bodyText}>\n                        Планировка поселка {village} отправлена на ваш email\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={classes.bodyForm}>\n                            <Box my={2} mx={4}>\n                                <center>\n                                    <h3>Планировка поселка {village}</h3>\n                                </center>\n                            </Box>\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Отправить\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default CallbackPlanForm \n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/TargetForm.js",["271","272","273"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {sendMessageAmoCRM} from \"../api/api\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '15px',\n    },\n    btnTarget: {\n        margin: '15px 0px 0px 0px',\n    },\n    bodyText: {\n        color: '#3c4b5a',\n    }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TargetForm = (props) => {\n    const selectedVillage = props.selectedVillage\n    const [phone, setPhone] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const apiUrl = 'https://zagzem.ru/api/'\n\n    const classes = useStyles({})\n\n    const changePhone = val => {\n        setPhone(val)\n    }\n\n    const checkForm = () => {\n        if (phone && isValidPhoneNumber(phone)) {\n            const phoneNumber = parsePhoneNumber(phone)\n            if (!phoneNumber) {\n                return false\n            }\n        }\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n            return false\n        }\n        return true\n    }\n\n    // const submit = async() => {\n    //   const check = await checkForm()\n    //   if (check) {\n    //     const options = {}\n    //     const body = { name: name, phone: phone, email: email}\n    //     options.method = 'POST'\n    //     options.headers = { 'Content-Type': 'application/json'}\n    //     options.body = JSON.stringify(body)\n    //     try {\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\n    //       if (res.status === 200) {\n    //         const result = await res.json()\n    //         if (result === null) {\n    //           alert('BAD JSON')\n    //           return false\n    //         }\n    //         setPhone('')\n    //         setName('')\n    //         setEmail('')\n    //         setSending(true)\n    //         alert('Submit Success!')\n    //       }\n    //     } catch(e) {\n    //       console.log('Fetch error: ', e)\n    //       return false\n    //     }\n    //   } else {\n    //     alert('Введите ваш номер телефона')\n    //   }\n    // }\n\n    const submit = () => {\n\n        console.log('submit, phone', phone)\n\n        if (name && email) {\n            if (isValidPhoneNumber(phone)) {\n                const phoneNumber = parsePhoneNumber(phone)\n                if (phoneNumber) {\n                    console.log('submit, phone valid')\n\n                    sendMessageAmoCRM(name, phone, email)\n                        .then(res => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                        .catch(e => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                }\n            } else {\n                alert('Введите правильный номер телефона')\n                return\n            }\n        } else {\n            alert('Заполните обязательные поля')\n            return\n        }\n        // if (isValidPhoneNumber(phone)) {\n        //   const phoneNumber = parsePhoneNumber(phone)\n        //   debugger\n        //   if (phoneNumber) {\n        //     console.log('submit, phone valid')\n        //   } else {\n        //     alert('Введите правильный номер телефона')\n        //     return\n        //   }\n        // } else {\n        //   alert('Введите правильный номер телефона')\n        //   return\n        // }\n\n        console.log('submit, name', name)\n        console.log('submit, email', email)\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n        }\n\n        // setPhone('')\n        // setName('')\n        // setEmail('')\n        // setSending(true)\n    }\n\n    if (sending) {\n        return (\n            <Dialog\n                open={sending}\n                fullWidth={true}\n                maxWidth='sm'\n                TransitionComponent={Transition}\n                onClose={() => setSending(false)}\n            >\n                <div className={classes.root}>\n                    <Grid container justifyContent='center' alignItems='center'>\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\n                            свяжется.</h3>\n                    </Grid>\n                </div>\n            </Dialog>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={7} className={classes.body}>\n                        <center>\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\n                        </center>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <div className={classes.bodyForm}>\n                            <StyledInput\n                                placeholder='Как вас зовут?'\n                                handler={(e) => setName(e.target.value)}\n                                value={name}\n                                type='text'\n                            />\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <InputPhone\n                                value={phone}\n                                setValue={changePhone}\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Записаться на просмотр\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default TargetForm\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/Filter.js",["274"],"import React, {useState, useContext, forwardRef} from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { Link } from 'react-router-dom'\nimport AppState from '../../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport Dialog from '@material-ui/core/Dialog';\nimport Box from '@material-ui/core/Box'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import ExpandLessIcon from '@material-ui/icons/ExpandLess';\n//import ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport MapIcon from '@material-ui/icons/Map';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport CloseIcon from '@material-ui/icons/Close';\n//import DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\n\nimport MultiSelect from './MultiSelect'\nimport SingleSelect from './SingleSelect'\nimport FilterMap from './FilterMap'\nimport IconButton from '../IconButton'\nimport CheckBox from '../CheckBox'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    borderRadius: '15px',\n    overflow: 'hidden'\n  },\n  bg: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    background: '#fff',\n    opacity: '0.8',\n    zIndex: '10',\n  },\n  fg: {\n    position: 'relative',\n    zIndex: '20',\n  }, \n  expandedBody: {\n    width: '100%',\n    margin: '15px', \n    background: '#eff3f4',\n    borderRadius: '15px',\n  },\n  expandButton: {\n  },\n  block: {\n    position: 'relative',\n    overflow: 'hidden',\n    padding: '4px',\n    margin: '5px',\n    background: '#fff',\n    borderRadius: '15px',\n  },\n  itemFilter: {\n    width: 'calc(100% - 10px)',\n    margin: '5px',\n    padding: '0',\n  },\n  filterControl: {\n    position: 'relative',\n    width: '100%', \n    padding: '15px 0',\n  },\n  expandBtn: {\n    position: 'absolute',\n    width: '50px',\n    height: '50px',\n    right: '0',\n  },\n  rollBtn: {\n    position: 'absolute',\n    width: '50px',\n    height: '50px',\n    right: '0',\n  },\n  filterBtn: {\n    background: '#0197fd',\n    minWidth: '170px',\n    height: '50px',\n    margin: '5px',\n    borderRadius: '1000px',\n    display: 'flex',\n    alignItems: 'center',\n    color: '#fff',\n    justifyContent: 'center',\n    cursor: 'pointer',\n  },\n  blockHeader: {\n    padding: '15px 0px 0px 15px'\n  },\n  mapBackBtn: {\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    height: '60px',\n    width: '200px',\n    zIndex: '600',\n    background: '#fff',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    borderRadius: '0 0 15px 0',\n    borderRight: '1px solid #eff3f4',\n    borderBottom: '1px solid #eff3f4',\n  },\n  checkboxValue: {\n    display: 'inline-block',\n    padding: '0 15px 0 15px',\n    textAlign: 'center',\n  },\n  map: {\n    position: 'relative',\n    width: 'calc(100% - 30px)',\n    margin: '15px',\n    height: '460px',\n    borderRadius: '15px',\n    overflow: 'hidden',\n  },\n  closeMap: {\n    position: 'absolute',\n    right: '15px',\n    top: '15px',\n    width: '50px',\n    height: '50px',\n    zIndex: '500',\n    background: '#0056b3',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '25px',\n  },\n    verticalCenter: {\n      display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst Filter = (props) => {\n  const context = useContext(AppState)\n//  const hide = props.hide\n  const [expanded, setExpanded] = useState(props.expanded || false)\n  const [showMap, setShowMap] = useState(true)\n\n  const setHidden = () => {\n    if (props.hidden) {\n      props.hidden()\n    }\n  }\n\n  const change = React.useCallback(()=> {\n    const changeMap = async() => {\n      await setShowMap(false)\n      await setShowMap(true)\n    } \n    if (showMap) {\n      changeMap()\n    }\n  }, [showMap])\n\n  React.useEffect(() => {\n    change()\n  },[context.filteredVillages])\n\n  const classes = useStyles()\n\n  const uniqRoads = context.uniqRoads\n  const uniqAreas = context.uniqAreas\n  const selectedVillagesRoads = context.selectedVillageRoads\n  const selectedVillageTypes = context.selectedVillageTypes\n  const selectedCommunications = context.selectedCommunications\n  const selectedSafety = context.selectedSafety\n  const selectedWaysToGet = context.selectedWaysToGet\n  const selectedAreas = context.selectedAreas\n  const selectedRoads = context.selectedRoads\n\n  const valDist = []\n  valDist.push(context.selectedFromMkad)\n  valDist.push(context.selectedToMkad)\n\n  const valPrice = []\n  valPrice.push(context.selectedPriceFrom)\n  valPrice.push(context.selectedPriceTo)\n\n  const blockRoads = (\n    <Box m={1}>\n      <MultiSelect\n        data={uniqRoads}\n        selected={selectedRoads}\n        title='Шоссе'\n        handler={context.selectRoad}\n      />\n    </Box>\n  )\n\n  const blockAreas = (\n    <Box m={1}>\n      <MultiSelect\n        data={uniqAreas}\n        selected={selectedAreas}\n        title='Район'\n        handler={context.selectArea}\n      />\n    </Box>\n  )\n\n  const blockDistance = (\n    <Box m={1}>\n      <SingleSelect\n        data={[\n          'до 30 км.',\n          'до 40 км.',\n          'до 50 км.',\n          'до 60 км.',\n          'до 70 км.',\n          'до 80 км.',\n          'до 90 км.',\n            'до 150 км.',\n            'до 200 км.',\n        ]}\n        selected={`до ${context.selectedFromMkad} км.`}\n        title='Расстояние до МКАД'\n        handler={context.selectFromMkad}\n      />\n    </Box>\n  )\n\n  const blockPrice = (\n    <Box m={1}>\n      <SingleSelect\n        data={[\n          '250000',\n          '500000',\n          '750000',\n          '1000000',\n          '1500000',\n          '3000000',\n          '5000000',\n          '10000000',\n          '20000000',\n        ]}\n        selected={context.selectedPriceFrom}\n        title='Стоимость'\n        handler={context.selectPriceFrom}\n      />\n    </Box>\n  )\n\n  const communications = (\n      <div className={classes.block}>\n        <div className={classes.blockHeader}>\n          <h4>Коммуникации</h4>\n        </div>\n        <IconButton\n          iconName='svet'\n          color='#ffce01'\n          selected={selectedCommunications.indexOf(1) === -1 ? false : true}\n          handler={()=>context.selectCommunication(1)}\n          value='Электричество'\n        />\n        <IconButton\n          iconName='water'\n          color='#4a7aff'\n          selected={selectedCommunications.indexOf(2) === -1 ? false : true}\n          handler={()=>context.selectCommunication(2)}\n          value='Вода'\n        />\n        <IconButton\n          iconName='gas'\n          color='#ff5b5a'\n          selected={selectedCommunications.indexOf(3) === -1 ? false : true}\n          handler={()=>context.selectCommunication(3)}\n          value='Газ'\n        />\n          <IconButton\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={selectedCommunications.indexOf(4) === -1 ? false : true}\n          handler={()=>context.selectCommunication(4)}\n          value='КПП'\n        />\n          <IconButton\n          iconName='playground'\n          color='#5a5fff'\n          selected={selectedCommunications.indexOf(5) === -1 ? false : true}\n          handler={()=>context.selectCommunication(5)}\n          value='Детская площадка'\n        />\n          <IconButton\n          iconName='lighting'\n          color='#5abbff'\n          selected={selectedCommunications.indexOf(6) === -1 ? false : true}\n          handler={()=>context.selectCommunication(6)}\n          value='Освещение'\n        />\n          <IconButton\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={selectedCommunications.indexOf(7) === -1 ? false : true}\n          handler={()=>context.selectCommunication(7)}\n          value='Спортивная площадка'\n        />\n          <IconButton\n          iconName='canalization'\n          color='#ff9e5a'\n          selected={selectedCommunications.indexOf(8) === -1 ? false : true}\n          handler={()=>context.selectCommunication(8)}\n          value='Центральная канализация'\n        />\n      </div> \n    )\n\n    const roads = (\n      <div className={classes.block}>\n        <div className={classes.blockHeader}>\n          <h4>Дороги в поселке</h4>\n        </div>\n        <IconButton\n          iconName='asphalt'\n          color='#6aa3a5'\n          selected={selectedVillagesRoads.indexOf(1) === -1 ? false : true}\n          handler={()=>context.selectVillageRoad(1)}\n          value='Асфальт'\n        />\n        <IconButton\n          iconName='asphaltKroshka'\n          color='#4a7aff'\n          selected={selectedVillagesRoads.indexOf(3) === -1 ? false : true}\n          handler={()=>context.selectVillageRoad(3)}\n          value='Acф. крошка'\n        />\n        {/*<IconButton*/}\n        {/*  iconName='betonPlit'*/}\n        {/*  color='#ff5b5a'*/}\n        {/*  selected={selectedVillagesRoads.indexOf(6) === -1 ? false : true}*/}\n        {/*  handler={()=>context.selectVillageRoad(6)}*/}\n        {/*  value='Бетонные плиты'*/}\n        {/*/>*/}\n        {/*<IconButton*/}\n        {/*  iconName='bitiyKirpich'*/}\n        {/*  color='#ffce01'*/}\n        {/*  selected={selectedVillagesRoads.indexOf(5) === -1 ? false : true}*/}\n        {/*  handler={()=>context.selectVillageRoad(5)}*/}\n        {/*  value='Битый кирпич'*/}\n        {/*/>*/}\n        <IconButton\n          iconName='gruntovka'\n          color='#06b26b'\n          selected={selectedVillagesRoads.indexOf(4) === -1 ? false : true}\n          handler={()=>context.selectVillageRoad(4)}\n          value='Грунтовая дорога'\n        />\n        <IconButton\n          iconName='sheben'\n          color='#8a6eac'\n          selected={selectedVillagesRoads.indexOf(2) === -1 ? false : true}\n          handler={()=>context.selectVillageRoad(2)}\n          value='Щебень'\n        />\n      </div>\n    )\n\n    const safety = (\n      <div className={classes.block}>\n        <div className={classes.blockHeader}>\n          <h4>Безопасность</h4>\n        </div>\n        <IconButton\n          iconName='zabor'\n          color='#6aa3a5'\n          selected={selectedSafety.indexOf(1) === -1 ? false : true}\n          handler={()=>context.selectSafety(1)} \n          value='Ограждение по периметру'\n        />\n        <IconButton\n          iconName='security'\n          color='#ff5b5a'\n          selected={selectedSafety.indexOf(2) === -1 ? false : true}\n          handler={()=>context.selectSafety(2)} \n          value='Охрана'\n        />\n      </div>\n    )\n\n    const waysToGet = (\n      <div className={classes.block}>\n        <div className={classes.blockHeader}>\n          <h4>Как добраться</h4>\n        </div>\n        <IconButton\n          iconName='bus'\n          color='#8a6eac'\n          selected={selectedWaysToGet.indexOf(3) === -1 ? false : true}\n          handler={()=>context.selectWayToGet(3)}\n          value='Автобус'\n        />\n        <IconButton\n          iconName='train'\n          color='#06b26b'\n          selected={selectedWaysToGet.indexOf(2) === -1 ? false : true}\n          handler={()=>context.selectWayToGet(2)}\n          value='Электричка'\n        />\n      </div>\n    )\n\n    const villageTypes = (\n      <Box m={1}>\n      <Grid container>\n        <Grid item>\n          <Box m={1} className={classes.verticalCenter}>\n\n                  <CheckBox\n                      selected={selectedVillageTypes.indexOf(1) === -1 ? false : true}\n                      setSelected={()=>context.selectVillageType(1)}\n                  />\n                  <div className={classes.checkboxValue}>\n                      <h5>Коттеджный поселок</h5>\n                  </div>\n\n          </Box>\n        </Grid>\n        <Grid item>\n          <Box m={1} className={classes.verticalCenter}>\n            <CheckBox\n              selected={selectedVillageTypes.indexOf(2) === -1 ? false : true}\n              setSelected={()=>context.selectVillageType(2)} \n            />\n            <div className={classes.checkboxValue}>\n              <h5>Дачный поселок</h5>\n            </div>\n          </Box>\n        </Grid>\n      </Grid>\n      </Box>\n    )\n\n    const expandedFilter = (\n      <div className={classes.expandedBody}>\n        <Grid container justifyContent='center' alignItems='flex-start'>\n\n          <Grid item xs={12} sm={6} md={3}>\n              {roads}\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3} >\n            {communications}\n          </Grid>\n\n\n                <Grid item xs={12} sm={6} md={3}>\n                    {waysToGet}\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={3}>\n                    {safety}\n                </Grid>\n\n\n        </Grid>\n      </div>\n    )\n\n    const miniFilter = (\n      <Grid container direction='row'>\n        <Grid item xs={12}>\n          {villageTypes}\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <div className={classes.itemFilter}>\n            <div className={classes.block}>\n              {blockAreas}\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <div className={classes.itemFilter}>\n            <div className={classes.block}>\n              {blockRoads}\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <div className={classes.itemFilter}>\n            <div className={classes.block}>\n              {blockDistance}\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <div className={classes.itemFilter}>\n            <div className={classes.block}>\n              {blockPrice}\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    )\n\n    const filterControl = (\n        <div className={classes.filterControl}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n\n          <div\n            className={classes.filterBtn}\n            onClick={()=>{context.resetFilter();setHidden()}}\n          >\n            <RotateLeftIcon />\n            Сбросить фильтр\n          </div>\n\n          {expanded || showMap ? '' :\n          <div\n            className={classes.filterBtn}\n            onClick={()=>setShowMap(true)}\n          > \n            <MapIcon />\n            Показать на карте\n          </div>\n          }\n\n          {expanded ? '' :\n          <div\n            className={classes.filterBtn}\n            onClick={()=>setExpanded(true)}\n          >\n            <ExpandMoreIcon />\n            Подробнее\n          </div>\n          }\n\n          <Link to='/villages' onClick={()=>{setExpanded(false);setHidden()}}>\n          <div\n            className={classes.filterBtn}\n          > \n            <button className='main-button' style={{padding: '14px 30px'}}>\n              Подобрать ({context.filteredVillages.length})\n            </button>\n          </div>\n          </Link>\n      </Grid>\n        </div>\n    )\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.bg} />\n        <div className={classes.fg}>\n          {miniFilter}    \n          {filterControl}\n          {showMap ? <div className={classes.map}>\n            <div\n              className={classes.closeMap}\n              onClick={()=>setShowMap(false)}\n            >\n              <CloseIcon style={{width:'35px',height:'35px',color:'#fff'}} />\n            </div>\n            <FilterMap villages={context.filteredVillages} />\n          </div> : ''}\n        </div>\n\n        <Dialog\n          open={expanded}\n          TransitionComponent={Transition}\n          onClose={()=>{setExpanded(false);setHidden()}}\n          fullWidth={true}\n          maxWidth='lg'\n        >\n          <Grid container>\n            {miniFilter}\n            {expandedFilter}\n            {filterControl}\n          </Grid>\n        </Dialog>\n\n\n        </div>\n    )\n}\n\nexport default Filter\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/MyMap.jsx",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/AnimSlider/AnimSlider.js",["275","276"],"import React, {useEffect} from \"react\";\nimport Slider from \"react-animated-slider\";\nimport { Link } from 'react-router-dom';\nimport ArrowBottomAnim from '../ArrowBottomAnim'\nimport \"react-animated-slider/build/horizontal.css\";\nimport \"./slider-animations.css\"\nimport \"./styles.css\";\nimport \"./button.css\";\nimport slide1 from '../../img/images/kp-35-2.jpg'\n\nconst content = [\n  {\n    descr: \"Скидка 9% на участки в поселке Шелест\",\n    title: \"Только до 31 октября!\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-3-1.jpg\",\n    link: '/village/shelest',\n  },\n  {\n    descr: \"Скидка 10% на участки в поселке Фишер\",\n    title: \"Только до 31 октября!\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-35-2.jpg\",\n    link: '/village/fisher',\n  },\n  {\n    descr: \"Скидка до 10% на участки в поселке Фаворит\",\n    title: \"Только до 31 октября!\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-34-1.jpg\",\n    link: '/village/favorit',\n  },\n  {\n    descr: \"Участки в поселке Ртищево\",\n    title: \"В пешей доступности от ж/д Вельяминово\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-51-1.jpg\",\n    link: '/village/rtishevo',\n  }\n];\n\nconst AnimSlider = () => (\n  <div>\n    <Slider\n      // autoplay\n        infinite\n        disabled={false}\n      touchDisabled={false}\n      className=\"slider-wrapper\"\n    >\n      {content.map((item, index) => (\n        <div\n          key={index}\n          className=\"slider-content\"\n          style={{ background: `url('${item.image}') no-repeat center center` }}\n        >\n          <div className=\"inner\">\n            <h2>{item.descr}</h2>\n            <h3>{item.title2} {item.title}</h3>\n            <Link to={item.link}>\n                <button className=\"btn btn-white btn-animate\">{item.button}</button>\n            </Link>\n          </div>\n        </div>\n      ))}\n    </Slider>\n    <ArrowBottomAnim />\n  </div>\n);\n\nexport default AnimSlider\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Icons/index.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/FilterMap.js",["277","278"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {TrafficControl, YMaps} from \"react-yandex-maps\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n}))\n\nconst FilterMap = (props) => {\n\n  const classes = useStyles()\n\n\n  const change = React.useCallback(()=> {\n  const villages = props.villages \n    const items = []\n    for (let i=0;i<villages.length;i++) {\n      const obj = {}\n      obj.coords = villages[i].coords\n      obj.name = villages[i].name\n      obj.uname = villages[i].uname\n      obj.bgs = villages[i].bgs\n      obj.type = villages[i].type === 1 ? 'Коттеджный поселок' : 'Дачный поселок'\n      items.push(obj)\n  }\n\n  window.ymaps.ready(function() {\n    var myMap = new window.ymaps.Map(\"map\", {\n      center: [55.760088, 37.617638],\n      zoom: 8,\n      controls: [],\n    })\n\n\n    var blueCollection = new window.ymaps.GeoObjectCollection(null, {\n      preset: 'islands#blueIcon'\n    })\n\n    for (var i = 0; i < items.length; i++) {\n      const obj = items[i]\n\n\n      var myPlacemark = new window.ymaps.Placemark(obj.coords, {\n        hintContent: obj.name,\n        balloonContent: `<img src=${obj.bgs[0]} width='100%' ><a href='/village/${obj.uname}'>${obj.type} ${obj.name}</a></img>`,\n      })\n      blueCollection.add(myPlacemark)\n    }\n    var zoomControl = new window.ymaps.control.ZoomControl({\n      options: {\n        size: \"auto\",\n        float: 'right',\n        position:{right:10, top: 200}\n      }\n    });\n\n    let trafficControl = new window.ymaps.control.TrafficControl({\n      options: {\n        float: 'right',\n        position:{right:90, top: 20}\n      }\n    })\n\n    let rulerControl = new window.ymaps.control.RulerControl({\n      options: {\n         float: 'right',\n        scaleLine: 'false',\n        position:{right:190, top: 20}\n      }\n    })\n\n    let locationControl = new window.ymaps.control.GeolocationControl({\n      options: {\n        float: 'right',\n        position: {right:10, bottom: 150}\n      }\n    })\n\n\n    // myMap.addControl(traffic);\n\n    myMap.controls.add(zoomControl);\n    myMap.controls.add(trafficControl);\n    myMap.controls.add(rulerControl)\n    myMap.controls.add(locationControl)\n    // myMap.behaviors.disable('scrollZoom')\n    myMap.geoObjects.add(blueCollection)\n\n  })\n  }, [props.villages])\n\n  React.useEffect(() => {\n    change()\n  }, [change])\n\n  return (\n    <div id=\"map\" className={classes.root}>\n    </div>\n  )\n\n\n\n}\n\nexport default FilterMap\n","/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/CheckBox.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/SingleSelect.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Filter/MultiSelect.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/Icons/Icons.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ArrowBottomAnim/index.js",[],"/Users/anton/Desktop/zagzem_2.0/zagzem/src/components/ArrowBottomAnim/ArrowBottomAnim.js",[],{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":25,"column":32,"nodeType":"285","messageId":"286","endLine":25,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":6,"column":8,"nodeType":"289","messageId":"290","endLine":6,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":292,"column":19,"nodeType":"293","endLine":292,"endColumn":157},{"ruleId":"291","severity":1,"message":"292","line":293,"column":19,"nodeType":"293","endLine":293,"endColumn":140},{"ruleId":"287","severity":1,"message":"294","line":1,"column":16,"nodeType":"289","messageId":"290","endLine":1,"endColumn":22},{"ruleId":"287","severity":1,"message":"295","line":5,"column":8,"nodeType":"289","messageId":"290","endLine":5,"endColumn":18},{"ruleId":"287","severity":1,"message":"296","line":7,"column":8,"nodeType":"289","messageId":"290","endLine":7,"endColumn":21},{"ruleId":"291","severity":1,"message":"292","line":234,"column":21,"nodeType":"293","endLine":234,"endColumn":162},{"ruleId":"291","severity":1,"message":"292","line":235,"column":21,"nodeType":"293","endLine":235,"endColumn":142},{"ruleId":"287","severity":1,"message":"288","line":8,"column":8,"nodeType":"289","messageId":"290","endLine":8,"endColumn":18},{"ruleId":"287","severity":1,"message":"297","line":17,"column":7,"nodeType":"289","messageId":"290","endLine":17,"endColumn":16},{"ruleId":"287","severity":1,"message":"298","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":16},{"ruleId":"287","severity":1,"message":"299","line":75,"column":10,"nodeType":"289","messageId":"290","endLine":75,"endColumn":16},{"ruleId":"287","severity":1,"message":"300","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":18},{"ruleId":"287","severity":1,"message":"288","line":13,"column":8,"nodeType":"289","messageId":"290","endLine":13,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":126,"column":14,"nodeType":"303","endLine":126,"endColumn":26},{"ruleId":"287","severity":1,"message":"304","line":7,"column":8,"nodeType":"289","messageId":"290","endLine":7,"endColumn":20},{"ruleId":"287","severity":1,"message":"305","line":23,"column":7,"nodeType":"289","messageId":"290","endLine":23,"endColumn":16},{"ruleId":"287","severity":1,"message":"306","line":5,"column":9,"nodeType":"289","messageId":"290","endLine":5,"endColumn":19},{"ruleId":"287","severity":1,"message":"307","line":112,"column":10,"nodeType":"289","messageId":"290","endLine":112,"endColumn":15},{"ruleId":"287","severity":1,"message":"308","line":113,"column":12,"nodeType":"289","messageId":"290","endLine":113,"endColumn":20},{"ruleId":"287","severity":1,"message":"309","line":113,"column":22,"nodeType":"289","messageId":"290","endLine":113,"endColumn":33},{"ruleId":"287","severity":1,"message":"310","line":153,"column":11,"nodeType":"289","messageId":"290","endLine":153,"endColumn":16},{"ruleId":"287","severity":1,"message":"311","line":172,"column":11,"nodeType":"289","messageId":"290","endLine":172,"endColumn":16},{"ruleId":"287","severity":1,"message":"288","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":18},{"ruleId":"287","severity":1,"message":"312","line":6,"column":7,"nodeType":"289","messageId":"290","endLine":6,"endColumn":19},{"ruleId":"287","severity":1,"message":"313","line":7,"column":5,"nodeType":"289","messageId":"290","endLine":7,"endColumn":25},{"ruleId":"287","severity":1,"message":"314","line":12,"column":10,"nodeType":"289","messageId":"290","endLine":12,"endColumn":21},{"ruleId":"287","severity":1,"message":"315","line":12,"column":23,"nodeType":"289","messageId":"290","endLine":12,"endColumn":37},{"ruleId":"287","severity":1,"message":"316","line":13,"column":10,"nodeType":"289","messageId":"290","endLine":13,"endColumn":14},{"ruleId":"287","severity":1,"message":"317","line":13,"column":16,"nodeType":"289","messageId":"290","endLine":13,"endColumn":23},{"ruleId":"287","severity":1,"message":"318","line":7,"column":8,"nodeType":"289","messageId":"290","endLine":7,"endColumn":19},{"ruleId":"287","severity":1,"message":"319","line":96,"column":9,"nodeType":"289","messageId":"290","endLine":96,"endColumn":16},{"ruleId":"287","severity":1,"message":"320","line":98,"column":9,"nodeType":"289","messageId":"290","endLine":98,"endColumn":12},{"ruleId":"287","severity":1,"message":"321","line":110,"column":9,"nodeType":"289","messageId":"290","endLine":110,"endColumn":21},{"ruleId":"301","severity":1,"message":"322","line":678,"column":5,"nodeType":"323","endLine":678,"endColumn":7,"suggestions":"324"},{"ruleId":"287","severity":1,"message":"325","line":682,"column":10,"nodeType":"289","messageId":"290","endLine":682,"endColumn":13},{"ruleId":"287","severity":1,"message":"326","line":687,"column":9,"nodeType":"289","messageId":"290","endLine":687,"endColumn":19},{"ruleId":"287","severity":1,"message":"327","line":6,"column":8,"nodeType":"289","messageId":"290","endLine":6,"endColumn":18},{"ruleId":"287","severity":1,"message":"328","line":7,"column":9,"nodeType":"289","messageId":"290","endLine":7,"endColumn":27},{"ruleId":"287","severity":1,"message":"329","line":7,"column":29,"nodeType":"289","messageId":"290","endLine":7,"endColumn":45},{"ruleId":"287","severity":1,"message":"288","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":18},{"ruleId":"287","severity":1,"message":"330","line":42,"column":11,"nodeType":"289","messageId":"290","endLine":42,"endColumn":17},{"ruleId":"287","severity":1,"message":"331","line":50,"column":11,"nodeType":"289","messageId":"290","endLine":50,"endColumn":20},{"ruleId":"301","severity":1,"message":"332","line":171,"column":5,"nodeType":"323","endLine":171,"endColumn":31,"suggestions":"333"},{"ruleId":"287","severity":1,"message":"334","line":1,"column":16,"nodeType":"289","messageId":"290","endLine":1,"endColumn":25},{"ruleId":"287","severity":1,"message":"335","line":9,"column":8,"nodeType":"289","messageId":"290","endLine":9,"endColumn":14},{"ruleId":"287","severity":1,"message":"336","line":3,"column":9,"nodeType":"289","messageId":"290","endLine":3,"endColumn":23},{"ruleId":"287","severity":1,"message":"337","line":3,"column":25,"nodeType":"289","messageId":"290","endLine":3,"endColumn":30},"no-native-reassign",["338"],"no-negated-in-lhs",["339"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'CircleType' is defined but never used.","'DialogContent' is defined but never used.","'useStyles' is assigned a value but never used.","'AppState' is defined but never used.","'render' is assigned a value but never used.","'AnimSlider' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'target' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'CallbackForm' is defined but never used.","'languages' is assigned a value but never used.","'makeStyles' is defined but never used.","'price' is assigned a value but never used.","'fromMkad' is assigned a value but never used.","'setFromMkad' is assigned a value but never used.","'roads' is assigned a value but never used.","'areas' is assigned a value but never used.","'postsPerPage' is assigned a value but never used.","'arrayForHoldingPosts' is assigned a value but never used.","'postsToShow' is assigned a value but never used.","'setPostsToShow' is assigned a value but never used.","'next' is assigned a value but never used.","'setNext' is assigned a value but never used.","'CardActions' is defined but never used.","'context' is assigned a value but never used.","'uid' is assigned a value but never used.","'permittedUse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'infoDescr'. Either include it or remove the dependency array.","ArrayExpression",["340"],"'url' is assigned a value but never used.","'Transition' is assigned a value but never used.","'InputPhone' is defined but never used.","'isValidPhoneNumber' is defined but never used.","'parsePhoneNumber' is defined but never used.","'apiUrl' is assigned a value but never used.","'checkForm' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'change'. Either include it or remove the dependency array.",["341"],"'useEffect' is defined but never used.","'slide1' is defined but never used.","'TrafficControl' is defined but never used.","'YMaps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [infoDescr]",{"range":"346","text":"347"},"Update the dependencies array to be: [change, context.filteredVillages]",{"range":"348","text":"349"},[15369,15371],"[infoDescr]",[3939,3965],"[change, context.filteredVillages]"]
>>>>>>> fix/click-similar
