{"version":3,"sources":["components/StyledInput.js","components/InputPhone.js","api/api.js","components/Icons/icons.svg","components/Icons/Icons.js","components/Icons/index.js","components/IconButton.js","components/CallbackFormPopUp.js","components/IndicatorDots.js","components/ReviewCard.js","components/TargetForm.js","components/MyMap.jsx","components/CarouselButtons.js","components/CallbackPlanForm.js","img/images/villaLabel.png","components/Page.js","components/SimilarVillages.js","pages/village/index.js"],"names":["useStyles","makeStyles","theme","root","props","position","padding","breakpoints","up","input","background","color","transition","cursor","borderRadius","border","width","outline","label","textTransform","StyledInput","handler","type","placeholder","value","classes","className","onChange","InputPhone","state","this","Fragment","defaultCountry","setValue","style","marginTop","height","React","Component","sendMessageAmoCRM","name","phone","email","text","formData","FormData","append","fetch","method","body","sendPlanAmoCRM","village","Icons","size","fill","xlinkHref","IconsSVG","margin","icon","display","alignItems","justifyContent","left","selected","filter","txt","top","IconButton","iconName","tooltip","onClick","bodyForm","btnTarget","bodyText","fontFamily","fontSize","lineHeight","textarea","formContainer","flexDirection","CallbackFormPopUp","useState","setPhone","setName","setEmail","sending","setSending","container","align","item","xs","my","mx","e","target","val","console","log","x","test","isValidPhoneNumber","parsePhoneNumber","then","res","catch","alert","submit","Dot","backgroundColor","opacity","transitionDuration","IndicatorDots","wrapperStyle","zIndex","bottom","textAlign","total","Array","apply","map","i","index","boxShadow","img","cardContent","flexGrow","cardSubHeader","cardPrice","infoBlock","infoIcon","infoValue","ItemInfo","ReviewCard","useContext","AppState","uid","bgs","uname","road","fromMkad","price","leftLands","communications","priceLands","sideOfMkad","permittedUse","slides","length","push","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","objectFit","n","kk","infoList","Object","keys","key","loop","auto","widgets","to","rerender","join","replace","direction","Transition","forwardRef","ref","Slide","TargetForm","selectedVillage","Dialog","open","fullWidth","maxWidth","TransitionComponent","onClose","Grid","md","MyMap","centerMap","defaultState","center","zoom","zoomControl","controls","options","float","right","scaleLine","defaultGeometry","styles","wrapper","btn","userSelect","font","CarouselButtons","prevBtnStyle","assign","nextBtnStyle","prevHandler","nextHandler","CallbackPlanForm","Typography","Box","finally","header","subInfo","btns","descrBlock","descrImg","testImage","targetBlock","mapSection","minHeight","overflow","infoMapBlock","wrapperInfo","marginLeft","mapInfo","descrSection","genplan","plan","ItemMapInfo","Page","showGenplan","setShowGenplan","showSendPlan","setShowSendPlan","showForm","setShowForm","waysToGetList","nature","infrastructure","waysToGet","descr","coords","safety","roadIn","roadTo","infoCoords","infoDescr","textDescr","nn","rr","ww","infoListInfrastructure","infoListNature","infoListRoad","infoListSafety","nearSettlementName","nearSettlementDist","nearTownName","nearTownDist","nearRailwayName","nearRailwayDist","nearSettlement","distance","nearTown","nearRailway","rosreestrLink","rosreestr","useEffect","document","getElementById","innerHTML","children","pathname","useLocation","setUrl","Container","totalLands","area","fontWeight","window","spacing","id","SimilarVillages","context","filteredVillages","el","newArr","sm","VillagePage","render","setState","location","scrollTo","substr","villages","m","contextType"],"mappings":"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","file":"static/js/12.7913a65f.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    position: 'relative',\n    padding: '15px 0px 0px 0px',\n    [theme.breakpoints.up('md')]: {\n      // width: '365px'\n    },\n\n  }),\n  input: props => ({\n    background: '#f9f9f9',\n    color: '#191a1d',\n    transition: 'border-color ease .3s',\n    cursor: 'pointer',\n    borderRadius: '1000px',\n    border: '2px solid #e2e2e2',\n    width: '100%',\n    padding: '15px 20px',\n    outline: '0',\n    '&:hover': {\n      border: '2px solid rgba(158,209,91,1)',\n    },\n  }),\n  label: {\n    padding: '10px',\n    color: '#919191',\n    width: '100%',\n    textTransform: 'uppercase',\n  }\n}))\n\nconst StyledInput = (props) => {\n\n  const handler = props.handler\n  const type = props.type\n  const placeholder = props.placeholder\n  const value = props.value\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root}>\n      <input\n        type={type}\n        className={classes.input}\n        onChange={handler}\n        placeholder={placeholder}\n        value={value}\n      />\n    </div>\n  )\n}\n\nexport default StyledInput\n","import React from \"react\"\nimport PhoneInput from 'react-phone-number-input'\n//import 'react-phone-number-input/style.css'\nimport './InputPhone.css'\nimport {makeStyles} from \"@material-ui/styles\";\n\nclass InputPhone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const value = this.props.value\n\n    return (\n      <React.Fragment>\n      <PhoneInput\n        defaultCountry=\"RU\"\n        placeholder=\"Введите номер телефона *\"\n        value={value}\n        onChange={this.props.setValue}\n        style={{\n          marginTop:'15px',\n          height:'4em',\n          // width: '365px'\n        }}\n      />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputPhone\n","\nexport const villages = []\n\nexport async function getDataFromWp(url) {\n    try {\n        let response = await fetch(url);\n        if(response.ok) {\n            let arrFromWp = await response.json()\n            arrFromWp.forEach(el => villages.push({id: el.id, ...el.acf}))\n        } else {\n            throw new Error(`Could not fetch ${url}`)\n        }\n    } catch (e) {\n        console.log(e);\n\n    }\n}\n\nexport function sendMessageAmoCRM(name, phone, email, text) {\n    let formData = new FormData();\n    formData.append('fields[name_2]', `Заявка с 'Загородные земли'`)\n    if(name) formData.append('fields[name_1]', name);\n    if(phone) formData.append('fields[222715_1][430461]', phone);\n    if(email) formData.append('fields[222717_1][430473]', email);\n    if(text) formData.append('fields[note_2]', text);\n\n    formData.append('form_id', '582790');\n    formData.append('hash', '384168b51bc44afef80081fe1c9de840');\n\n    return fetch('https://forms.amocrm.ru/queue/add', {\n        method: 'POST',\n        body: formData\n    })\n}\n\nexport function sendPlanAmoCRM(email, village) {\n    let formData = new FormData();\n\n    formData.append('fields[name_2]', 'Отправить планировку поселка на почту')\n    formData.append('fields[222717_1][430473]', email);\n    formData.append('fields[note_2]', `Отправить планировку поселка ${village} на ${email}`);\n\n    formData.append('form_id', '892084');\n    formData.append('hash', 'ecb202cf2535d0e2e6d8486fe5363dfd');\n\n    return fetch('https://forms.amocrm.ru/queue/add', {\n        method: 'POST',\n        body: formData\n    })\n}\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/icons.851c0213.svg\";","import React from 'react'\nimport IconsSVG from './icons.svg'\n\nfunction Icons({name, color, size}) {\n\n  return(\n    <svg\n      fill={color}\n      width={size}\n      height={size}\n    >\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\n    </svg>\n  )\n}\n\nexport default Icons\n","import Icons from './Icons'\n\nexport default Icons\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport Icons from './Icons'\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n    position: 'relative',\n    width: props.size === 'small' ? '50px' : \"calc(100% - 20px)\",\n    height: '55px',\n    margin: '5px',\n    padding: '5px 0px',\n    borderRadius: '1000px',\n    cursor: 'pointer'\n  })),\n  icon: (props => ({\n    position: 'absolute',\n    width:  '45px',\n    height: '45px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    left: '5px',\n    borderRadius: '50px',\n    background: props.selected ? props.color : '#e5eaeb', \n    filter: props.selected ? `brightness(1.1) ` : 'none',\n    transition: \"all 1s ease-out 0.5s\"\n  })),\n  txt: (props => ({\n    position: 'absolute',\n    top: '0',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    left: '70px', \n    color: props.selected ? '#000' : '#919fa3'\n  })),\n}))\n\nfunction IconButton(props) {\n  const value = props.value\n  const iconName = props.iconName\n  const color = props.color\n  const selected = props.selected\n  const size = props.size || 'default'\n  const tooltip = props.tooltip\n\n  const classes = useStyles({ color, selected, size })\n\n  if (size === 'small') {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div tooltip={tooltip} className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={24}\n          />\n        </div>\n      </div>\n    ) \n  } else {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={size === 'small' ? 15 : 24}\n          />\n        </div>\n        <div className={classes.txt}>\n          <h5>{value}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconButton;\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport { isValidPhoneNumber, parsePhoneNumber } from 'react-phone-number-input'\nimport { makeStyles } from '@material-ui/styles'\nimport {sendMessageAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n  })),\n  body: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  bodyForm: {\n    background: '#fff',\n    padding: '15px',\n    borderRadius: '15px',\n  },\n  btnTarget: {\n    margin: '10px 0px 0px 0px',\n  },\n  bodyText: {\n    fontFamily: 'FiraMedium',\n    padding: '15px',\n    fontSize: '2rem',\n    color: '#263238',\n    lineHeight: '110%',\n  },\n  textarea: {\n    width: '100%',\n    borderRadius: '15px',\n    background: '#f9f9f9',\n    color: '#191a1d',\n    cursor: 'pointer',\n    border: '2px solid #e2e2e2',\n    fontFamily: 'FiraLight',\n    fontSize: '1.25rem',\n    marginTop: '15px',\n    outline: '0',\n    padding: '15px'\n  },\n  formContainer: {\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'space-around',\n    [theme.breakpoints.up('md')]: {\n      flexDirection:'row',\n    },\n  }\n}))\n\nconst CallbackFormPopUp = (props) => {\n  const [phone, setPhone] = React.useState('')\n  const [name, setName] = React.useState('')\n  const [email, setEmail] = React.useState('')\n  const [sending, setSending] = React.useState(false)\n\n  const classes = useStyles({ })\n\n  const changePhone = val => {\n    console.log('val', val)\n    setPhone(val)\n  }\n\n  const submit = () => {\n\n    console.log('submit, phone', phone)\n\n    const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n    const x = emailRegexp.test(email)\n\n    if(name ) {\n      if(x) {\n        if(isValidPhoneNumber(phone)) {\n          const phoneNumber = parsePhoneNumber(phone)\n          if (phoneNumber) {\n            console.log('submit, phone valid')\n\n            sendMessageAmoCRM(name, phone, email)\n                .then(res => {\n                  setPhone('')\n                  setName('')\n                  setEmail('')\n                  setSending(true)\n                })\n                .catch(e => {\n                  setPhone('')\n                  setName('')\n                  setEmail('')\n                  setSending(true)\n                })\n          }\n        } else {\n          alert('Введите правильный номер телефона')\n          return\n        }\n      } else {\n        alert('Введите правильный адрес почты')\n        return\n      }\n    } else {\n      alert('Заполните обязательные поля')\n      return\n    }\n\n    console.log('submit, name', name)\n    console.log('submit, email', email)\n\n  }\n\n  if (sending) {\n    return (\n    <div className={classes.root}>\n      <Grid container justifyContent='center' alignItems='center'>\n        <Typography align='center' className={classes.bodyText}>\n          Письмо успешно отправлено, менеджер скоро с вами свяжется\n        </Typography>\n      </Grid>\n    </div>\n    )\n  } else {\n    return (\n      <div style={{margin: '15px'}} className={classes.root}>\n        <Grid container>\n          <Grid item xs={12}>\n            <div className={classes.bodyForm}>\n              <Box my={2} mx={4}>\n                <center>\n                  <h3 style={{fontSize:'27px'}}>Оставьте свои данные и мы свяжемся с вами</h3>\n                </center>\n              </Box>\n              {/*<Box className={classes.formContainer} >*/}\n                <StyledInput\n                    placeholder='Как вас зовут? *'\n                    handler={(e)=>setName(e.target.value)}\n                    value={name}\n                    type='text'\n                />\n                <StyledInput\n                    placeholder='Введите ваш email *'\n                    handler={(e)=>setEmail(e.target.value)}\n                    value={email}\n                    type='email'\n                />\n                <InputPhone\n                    value={phone}\n                    setValue={changePhone}\n                />\n                <div className={classes.btnTarget}>\n                  <Grid container justifyContent='center'>\n                    <button className='main-button' style={{margin: '0px'}} onClick={()=>submit()}>\n                      Отправить\n                    </button>\n                  </Grid>\n                </div>\n              {/*</Box>*/}\n\n            </div>\n          </Grid>\n        </Grid> \n      </div>\n    )\n  }\n}\n\nexport default CallbackFormPopUp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Dot (props) {\n  return (\n    <span style={{\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    }} />\n  )\n}\n\nexport default function IndicatorDots (props) {\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  }\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return <div style={wrapperStyle} />\n  } else {\n    return (\n      <div style={wrapperStyle}>{\n        Array.apply(null, Array(props.total)).map((x, i) => {\n          return <Dot key={i} selected={props.index === i} />\n        })\n      }</div>\n    )\n  }\n}\n\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from './IconButton'\nimport Carousel from 're-carousel'\nimport Grid from '@material-ui/core/Grid'\nimport Icons from './Icons'\nimport IndicatorDots from './IndicatorDots'\nimport AppState from \"../AppState\";\nimport LazyLoad from 'react-lazyload';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '15px',\n    border: '1px solid #eff3f4',\n    boxShadow: 'none',\n  },\n  img: {\n    width: '100%',\n    height: '250px',\n    [theme.breakpoints.up('lg')]: {\n      height: '250px'\n    },\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardSubHeader: {\n    height: '60px',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s opacity',\n    '&:hover': {\n      opacity: '.6',\n      transition: '.3s opacity',\n    }\n  },\n  cardPrice: {\n  },\n  infoBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '40px', \n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '45px',\n    top: '0',\n    width: 'calc(100% - 45px)',\n    height: '100%',\n  }\n}));\n\nconst ItemInfo = ({ icon, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoIcon}>\n        <Icons\n          name={icon}\n          color='#607D8B'\n          size={24}\n        />\n      </div>\n      <div className={classes.infoValue}>\n        <h5 className='light-text'>{value}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default function ReviewCard(props) {\n\n  const context = React.useContext(AppState)\n\n  const uid = props.uid\n  const type = props.type || ''\n  const bgs = props.bgs || []\n  const name = props.name || ''\n  const uname = props.uname || ''\n  const road = props.road || ''\n  const fromMkad = props.fromMkad || ''\n  const price = props.price || ''\n  const leftLands = props.leftLands || ''\n  const communications = props.communications || {}\n  const priceLands = props.priceLands || []\n  const sideOfMkad = props.sideOfMkad || ''\n  const permittedUse = props.permittedUse || 2\n\n  const classes = useStyles()\n\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \n\n  const slides = []\n\n  for (let i=0;i<bgs.length;i++) {\n    slides.push(\n      <LazyLoad>\n        <img\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            objectFit: 'cover'\n          }}\n        />\n      </LazyLoad>\n    )\n  }\n\n  let kk = []\n  const infoList = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n\n  // Communications\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || ''\n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          value={'Электричество '+value}\n          size='small'\n          tooltip='Электрификация'\n        />\n      )\n    }\n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'dfgh'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Водоснабжение'\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Газификация'\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Ограждение'\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Детская площадка'\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Освещение улиц'\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Спортивная площадка'\n\n        />\n      )\n    }\n  }\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.img}>\n        <Carousel loop auto widgets={[IndicatorDots]}>\n          {slides}\n        </Carousel>\n      </div>\n\n      <Link\n          to={`/village/${uname}`}\n          onClick={props.rerender}\n      >\n\n      <CardContent className={classes.cardContent}>\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\n        <ItemInfo\n          icon='compass'\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\n        />\n        <ItemInfo\n          icon='car'\n          value={`${road}`}\n        />\n        <ItemInfo\n          icon='price'\n          value={`Сотка от ${price} р.`}\n        />\n        <ItemInfo\n          icon='mapPlaces'\n          value={`Участки от ${spaceInNumber(priceLands[0]) } р.`}\n        />\n        <ItemInfo\n          icon='flag'\n          value={`В продаже ${leftLands} шт.`}\n        />\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\n          {infoList}\n        </Grid>\n        <center>\n          <button className='main-button'>Подробнее</button>\n        </center>\n      </CardContent>\n      </Link>\n    </Card>\n  );\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {sendMessageAmoCRM} from \"../api/api\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '15px',\n    },\n    btnTarget: {\n        margin: '15px 0px 0px 0px',\n    },\n    bodyText: {\n        color: '#3c4b5a',\n    }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TargetForm = (props) => {\n    const selectedVillage = props.selectedVillage\n    const [phone, setPhone] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const apiUrl = 'https://zagzem.ru/api/'\n\n    const classes = useStyles({})\n\n    const changePhone = val => {\n        setPhone(val)\n    }\n\n    const checkForm = () => {\n        if (phone && isValidPhoneNumber(phone)) {\n            const phoneNumber = parsePhoneNumber(phone)\n            if (!phoneNumber) {\n                return false\n            }\n        }\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n            return false\n        }\n        return true\n    }\n\n    // const submit = async() => {\n    //   const check = await checkForm()\n    //   if (check) {\n    //     const options = {}\n    //     const body = { name: name, phone: phone, email: email}\n    //     options.method = 'POST'\n    //     options.headers = { 'Content-Type': 'application/json'}\n    //     options.body = JSON.stringify(body)\n    //     try {\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\n    //       if (res.status === 200) {\n    //         const result = await res.json()\n    //         if (result === null) {\n    //           alert('BAD JSON')\n    //           return false\n    //         }\n    //         setPhone('')\n    //         setName('')\n    //         setEmail('')\n    //         setSending(true)\n    //         alert('Submit Success!')\n    //       }\n    //     } catch(e) {\n    //       console.log('Fetch error: ', e)\n    //       return false\n    //     }\n    //   } else {\n    //     alert('Введите ваш номер телефона')\n    //   }\n    // }\n\n    const submit = () => {\n\n        console.log('submit, phone', phone)\n\n        if (name && email) {\n            if (isValidPhoneNumber(phone)) {\n                const phoneNumber = parsePhoneNumber(phone)\n                if (phoneNumber) {\n                    console.log('submit, phone valid')\n\n                    sendMessageAmoCRM(name, phone, email)\n                        .then(res => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                        .catch(e => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                }\n            } else {\n                alert('Введите правильный номер телефона')\n                return\n            }\n        } else {\n            alert('Заполните обязательные поля')\n            return\n        }\n        // if (isValidPhoneNumber(phone)) {\n        //   const phoneNumber = parsePhoneNumber(phone)\n        //   debugger\n        //   if (phoneNumber) {\n        //     console.log('submit, phone valid')\n        //   } else {\n        //     alert('Введите правильный номер телефона')\n        //     return\n        //   }\n        // } else {\n        //   alert('Введите правильный номер телефона')\n        //   return\n        // }\n\n        console.log('submit, name', name)\n        console.log('submit, email', email)\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n        }\n\n        // setPhone('')\n        // setName('')\n        // setEmail('')\n        // setSending(true)\n    }\n\n    if (sending) {\n        return (\n            <Dialog\n                open={sending}\n                fullWidth={true}\n                maxWidth='sm'\n                TransitionComponent={Transition}\n                onClose={() => setSending(false)}\n            >\n                <div className={classes.root}>\n                    <Grid container justifyContent='center' alignItems='center'>\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\n                            свяжется.</h3>\n                    </Grid>\n                </div>\n            </Dialog>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={7} className={classes.body}>\n                        <center>\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\n                        </center>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <div className={classes.bodyForm}>\n                            <StyledInput\n                                placeholder='Как вас зовут?'\n                                handler={(e) => setName(e.target.value)}\n                                value={name}\n                                type='text'\n                            />\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <InputPhone\n                                value={phone}\n                                setValue={changePhone}\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Записаться на просмотр\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default TargetForm\n","import React, {Component} from 'react'\nimport {YMaps, Map, Placemark, ZoomControl, TrafficControl, RulerControl, GeolocationControl} from 'react-yandex-maps'\nimport PropTypes from 'prop-types'\n\nclass MyMap extends Component {\n    static propTypes = {\n        centerMap: PropTypes.array\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        let centerMap = this.props.centerMap || [55.75, 37.57]\n        return (\n            <YMaps>\n                <Map\n                    defaultState={{\n                        center: centerMap,\n                        zoom: 9,\n                        // behaviors: [\"disable('scrollZoom')\"],\n                        zoomControl: true,\n                        controls: [],\n                        options: {\n                            size: \"small\"\n                        }\n                    }}\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <TrafficControl options={{ float: 'right' }} />\n                    <RulerControl options={{ float: 'right' ,position:{right:110, top: 10}, scaleLine: 'false'}} />\n                    <ZoomControl options={{ float: 'right' , size: \"small\", position:{right:10, top: 200}}} />\n                    <GeolocationControl options={{ float: 'right', position: {right:10, bottom: 150} }} />\n                    <Placemark\n                        defaultGeometry={centerMap}\n                    />\n                </Map>\n            </YMaps>\n        )\n    }\n}\n\nexport {MyMap}\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nconst styles = {\n  wrapper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '50%',\n    textAlign: 'center'\n  },\n  btn: {\n    width: '30px',\n    height: '30px',\n    cursor: 'pointer',\n    userSelect: 'none',\n    position: 'absolute',\n    bottom: '0',\n    font: '16px/30px sans-serif',\n    color: 'rgba(255,255,255,0.8)',\n    zIndex: '200'\n  },\n  left: {\n    left: '0'\n  },\n  right: {\n    right: '0'\n  }\n}\n\nexport default function CarouselButtons (props) {\n  const prevBtnStyle = Object.assign({}, styles.btn, styles.left)\n  const nextBtnStyle = Object.assign({}, styles.btn, styles.right)\n  const { index, total, loop, prevHandler, nextHandler } = props\n  return (\n    <div style={styles.wrapper}>\n      { (loop || index !== 0) && (\n        <div style={prevBtnStyle} onClick={prevHandler}>◀</div>\n      )}\n      { (loop || index !== total - 1) && (\n        <div style={nextBtnStyle} onClick={nextHandler}>▶</div>\n      )}\n    </div>\n  )\n}\n\nCarouselButtons.propTypes = {\n  index: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  prevHandler: propTypes.func,\n  nextHandler: propTypes.func\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport {sendPlanAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        padding: '15px',\n        borderRadius: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    btnTarget: {\n        margin: '10px 0px 0px 0px',\n    },\n    bodyText: {\n        fontFamily: 'FiraMedium',\n        padding: '15px',\n        fontSize: '2rem',\n        color: '#263238',\n        lineHeight: '110%',\n    },\n    textarea: {\n        width: '100%',\n        borderRadius: '15px',\n        background: '#f9f9f9',\n        color: '#191a1d',\n        cursor: 'pointer',\n        border: '2px solid #e2e2e2',\n        fontFamily: 'FiraLight',\n        fontSize: '1.25rem',\n        marginTop: '15px',\n        outline: '0',\n        padding: '15px'\n    }\n}))\n\nconst CallbackPlanForm = (props) => {\n    const village = props.village\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const classes = useStyles({})\n\n    const submit = () => {\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n\n        if (x) {\n            sendPlanAmoCRM(email, village)\n                .finally(()=>{\n                    setEmail('')\n                    setSending(true)\n                })\n        } else {\n            alert('Введите корректный адрес почты')\n        }\n\n\n    }\n\n    if (sending) {\n        return (\n            <div className={classes.root}>\n                <Grid container justifyContent='center' alignItems='center'>\n                    <Typography align='center' className={classes.bodyText}>\n                        Планировка поселка {village} отправлена на ваш email\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={classes.bodyForm}>\n                            <Box my={2} mx={4}>\n                                <center>\n                                    <h3>Планировка поселка {village}</h3>\n                                </center>\n                            </Box>\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Отправить\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default CallbackPlanForm \n","export default __webpack_public_path__ + \"static/media/villaLabel.00373197.png\";","import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TargetForm from './TargetForm'\nimport IconButton from './IconButton'\nimport { MyMap } from './MyMap'\nimport IndicatorDots from './IndicatorDots'\nimport CarouselButtons from './CarouselButtons'\nimport Carousel from 're-carousel'\nimport Dialog from '@material-ui/core/Dialog'\nimport CallbackPlanForm from './CallbackPlanForm'\n\nimport testImage from '../img/images/villaLabel.png'\nimport CallbackFormPopUp from \"./CallbackFormPopUp\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    transition: 'all 0.3s ease-out',\n\n  },\n  header: {\n    width: '100%',\n    margin: '0 0px 40px 0px',\n  },\n  subInfo: {\n    width: '100%',\n    margin: '30px 0px 15px 0px',\n    padding: '5px',\n    borderRadius: '15px',\n  },\n  btns: {\n    margin: '30px 0px 30px 0px',\n  },\n  descrBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },\n  descrImg: {\n    width: '100%',\n    height: '100%',\n    backgroundImage: `url(${testImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain'\n  },\n  targetBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },  \n  mapSection: {\n    position:'relative',\n    margin: '30px 0px 30px 0px',\n    background: '#fff',\n    borderRadius: '15px',\n    minHeight: '780px',\n    overflow: 'hidden',\n    [theme.breakpoints.up('md')]: {\n      minHeight: '460px',\n    },\n  },\n  btn: (props => ({\n    background: '#FFF',\n    color: '#0197fd',\n    transition: 'all ease .45s',\n    cursor: 'pointer',\n    borderRadius: '15px',\n    boxShadow: 'inset 0 0 0 1px #0197fd',\n    padding: '20px 20px',\n    margin: '5px 15px',\n    textAlign: 'center',\n    '&:hover': { \n      background: '#0197fd',\n      color: '#fff',\n    },\n  })),\n  infoMapBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    margin: '0px 0px 30px 10px',\n  },\n  infoBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    background: '#fff',\n    borderRadius: '15px',\n    margin: '5px',\n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '10px',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '60px',\n    top: '0',\n    width: 'calc(100% - 70px)',\n    height: '100%',\n  },\n  wrapperInfo: {\n    marginLeft: '0px',\n    borderRadius: '15px',\n    background: '#fff',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '15px',\n    }\n  },\n  mapInfo: {\n    position: 'absolute',\n    padding: '30px 15px',\n    margin: '15px',\n    borderRadius: '15px',\n    background: '#fff',\n  },\n  descrSection: {\n    width: 'calc(100% - 30px)',\n    margin: '15px',\n    minHeight: '300px',\n    background: '#fff',\n    borderRadius: '15px',\n    padding: '40px 25px',\n  },\n  genplan: (props=>({\n    position: 'relative',\n    width: '100%',\n    height: '95vh',\n    background: `url(${props.plan})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  }))\n}));\n\nconst ItemMapInfo = ({ name, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoMapBlock}>\n      <h5 style={{margin:'5px 0'}}>{name}</h5>\n      <h4 style={{margin:'0'}}>{value}</h4>\n    </div>\n  )\n}\n\nexport default function Page (props){\n  console.log('newPage render',props.village)\n  const village = props.village\n  const [showGenplan, setShowGenplan] = React.useState(false)\n  const [showSendPlan, setShowSendPlan] = React.useState(false)\n  const [showForm, setShowForm] = React.useState(false)\n  // console.log('village.permittedUse', village.permittedUse)\n\n  const waysToGetList = []\n  const communications = village.communications\n  const nature = village.nature\n  const infrastructure = village.infrastructure\n  const waysToGet = village.waysToGet\n  const descr = village.descr\n  const coords = village.coords || [0,0]\n  const bgs = village.bgs\n  const plan = village.plan\n  const safety = village.safety\n  const roadIn = village.roadIn\n  const roadTo = village.roadTo\n\n  const classes = useStyles({ plan })\n\n  let infoCoords = []\n  if (coords) {\n    infoCoords = coords\n  }\n\n  const infoDescr = []\n  if (descr) {\n    for (let i=0;i<descr.length;i++) {\n      infoDescr.push(\n        <p key={'dscr'+i} className={classes.textDescr}>\n          {descr[i]}\n        </p>\n      )\n    }\n  }\n\n  let kk = []\n  let nn = []\n  let rr = []\n  let ww = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n  if (nature) {\n    nn = Object.keys(nature)\n  }\n  if (infrastructure) {\n    rr = Object.keys(infrastructure)\n  }\n  if (waysToGet) {\n    ww = Object.keys(waysToGet)\n  }\n\n  for (let i=0;i<ww.length;i++) {\n    const key = ww[i]\n    const value = waysToGet[key] || ''\n    if (key === '1') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4} style={{height: '230px'}}>\n          <IconButton\n            iconName='car'\n            color='#0197fd'\n            selected={true}\n            value={'На автомобиле: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '2') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='bus'\n            color='#8a6eac'\n            selected={true}\n            value={'На автобусе: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '3') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='train'\n            color='#06b26b'\n            selected={true}\n            value={'На электричке: ' + value}\n          />\n        </Grid>\n      )\n    }\n  }\n   \n  const infoList = []\n  const infoListInfrastructure = []\n  const infoListNature = []\n  const infoListRoad = []\n  const infoListSafety = []\n\n  infoList.push(\n    <IconButton\n      key='cSXmmn'\n      iconName='mapPlace'\n      color='#0197fd'\n      selected={true}\n      value={village.permittedUse[0] === '1' ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\n    />\n  )\n\n  if (roadTo === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphalt'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        handler={()=>{}}\n        value='До поселка асфальтированная дорога'\n      />\n    )\n  }\n  if (roadTo === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphaltKroshka'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='До поселка дорога из асф.крошки'\n      />\n    )\n  }\n  if (roadTo === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_betonPlit'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='До поселка дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadTo === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='До поселка дорога из битого кирпича'\n      />\n    )\n  }\n  if (roadTo === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='До поселка грунтовая дорога'\n      />\n    )\n  }\n  if (roadTo === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='До поселка дорога из щебня'\n      />\n    )\n  }\n\n  if (roadIn === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_1'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        value='В поселке асфальтированная дорога'\n      />\n    )\n  }\n  if (roadIn === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_3'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='В поселке дорога из асф. крошки'\n      />\n    )\n  }\n  if (roadIn === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_6'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='В поселке дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadIn === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='В поселке дорога из битого кирпича'\n      />\n    )\n  } \n  if (roadIn === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='В поселке грунтовая дорога'\n      />\n    )\n  }\n  if (roadIn === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='В поселке дорога из щебня'\n      />\n    )\n  }\n\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || '' \n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={'Электрофикация '+value}\n        />\n      )\n    } \n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '8') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='canalization'\n          color='#ff9e5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  for (let i=0;i<rr.length;i++) {\n    const key = rr[i]\n    const value = infrastructure[key] || ''\n    if (key === '1') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='cart'\n          color='#8a6eac'\n          selected={true}\n          handler={()=>{}}\n          value={'Продукты в '+value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='school'\n          color='#f7173a'\n          selected={true}\n          handler={()=>{}}\n          value={'Школа в '+value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='detsad'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={'Детский сад в '+value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='hospital'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={'Больница в '+value}\n        />\n      )\n    }\n  }\n\n  if (safety) {\n    for (let i=0;i<safety.length;i++) {\n      const key = safety[i]\n      if (key === '1') {\n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='zabor'\n            color='#6aa3a5'\n            selected={true}\n            handler={()=>{}}\n            value='Поселок огорожен'\n          />\n        )\n      }\n      if (key === '2') {   \n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='security'\n            color='#ff5b5a'\n            selected={true}\n            handler={()=>{}}\n            value='Есть охрана'\n          />\n        )\n      }\n    }\n  }\n\n  for (let i=0;i<nn.length;i++) {\n    const key = nn[i]\n    const value = nature[key] || ''\n    if (key === '1') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='vodoem'\n          color='#5277f5'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '2') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  let nearSettlementName = ''\n  let nearSettlementDist = ''\n  let nearTownName = ''\n  let nearTownDist = ''\n  let nearRailwayName = ''\n  let nearRailwayDist = ''\n  if (village.nearSettlement) {\n    nearSettlementName = village.nearSettlement.name\n    nearSettlementDist = village.nearSettlement.distance\n  }\n  if (village.nearTown) {\n    nearTownName = village.nearTown.name\n    nearTownDist = village.nearTown.distance\n  }\n  if (village.nearRailway) {\n    nearRailwayName = village.nearRailway.name\n    nearRailwayDist = village.nearRailway.distance\n  }\n\n  let rosreestrLink = ''\n  if (village.rosreestr) {\n    rosreestrLink = village.rosreestr \n  }\n\n  const slides = []\n\n  if (bgs){\n    for (let i=0;i<bgs.length;i++) {\n      slides.push(\n        <div\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n          }}\n        />\n      )\n    }\n  }\n\n  useEffect(()=>{\n    document.getElementById('description-page').innerHTML=`${infoDescr[0].props.children}`\n  },[])\n\n  const {pathname} = useLocation()\n  console.log('pathnew', pathname)\n  const [url, setUrl] = useState('');\n\n  useEffect(()  => {\n    setUrl(pathname)\n  }, [pathname])\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <>\n      <Dialog\n          open={showForm}\n          fullWidth={true}\n          maxWidth='sm'\n          // TransitionComponent={Transition}\n          onClose={() => {\n            setShowForm(false)\n          }}\n      >\n        <CallbackFormPopUp />\n      </Dialog>\n\n      <Container maxWidth='lg'>\n        <div className={classes.header}>\n          <Grid container alignItems='center'>\n            <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\n          </Grid>\n          <Grid container alignItems='center'>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\n              <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\n              <h4 style={{padding:'10px 0'}}>{village.road}</h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\n              <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{spaceInNumber(village.price)}</span> руб/сотка</h4>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container>\n          <Grid item xs={12} md={8}>\n            <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\n              <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\n                {slides}\n              </Carousel>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <div className={classes.wrapperInfo}>\n              {infoList}\n            </div>\n            <div style={{margin:'30px 15px'}}>\n              <center>\n\n\n                  <button onClick={()=> setShowForm(true)} className='main-button'>\n                    Записаться на просмотр\n                  </button>\n\n\n              </center>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.btns}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>setShowGenplan(true)}\n              >\n                Планировка поселка\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>{window.open(rosreestrLink, '_blank')}}\n              >\n                Кадастровая карта\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                 onClick={()=>setShowSendPlan(true)}\n               >\n                Отправить планировку на email\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container spacing={3}> \n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Дороги</h4>\n              {infoListRoad}\n            </div>\n          </Grid>\n          {infoListSafety.length < 1 ? '' :\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Безопасность</h4>\n              {infoListSafety}\n            </div>\n          </Grid>\n          }\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Природа</h4>\n              {infoListNature}\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Инфраструктура</h4>\n              {infoListInfrastructure}\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.descrBlock}>\n          <Grid container>\n            <Grid item xs={12}>\n              <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\n            </Grid>\n            <Grid item xs={12} md={5}>\n              <div className={classes.descrImg} />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <div className={classes.descrSection}>\n                <span id={'description-page'}> </span>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\n        <div className={classes.mapSection}>\n          <Grid container>\n            <MyMap\n              centerMap={infoCoords}\n            />\n            <Grid item xs={12} md={4}>\n              <div className={classes.mapInfo}>\n                <ItemMapInfo\n                  name='Ближайший населенный пункт'\n                  value={nearSettlementName + ' - ' + nearSettlementDist}\n                />        \n                <ItemMapInfo\n                  name='Ближайший город'\n                  value={nearTownName + ' - ' + nearTownDist}\n                />\n                <ItemMapInfo\n                  name='Ближайшая ж/д станция'\n                  value={nearRailwayName + ' - ' + nearRailwayDist}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    \n      <Container maxWidth='lg' style={{margin: '100px 0'}}>\n        <div className={classes.subInfo}>\n          <Grid container justifyContent='space-around'>\n            {waysToGetList}\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div id='target-block' className={classes.targetBlock}>\n          <TargetForm selectedVillage={village.name} />\n        </div>\n      </Container>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='xl'\n        open={showGenplan}\n        onClose={()=>setShowGenplan(false)}\n      >\n        <div className={classes.genplan} />\n      </Dialog>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='sm'\n        open={showSendPlan}\n        onClose={()=>setShowSendPlan(false)}\n      > \n        <CallbackPlanForm village={village.name}/>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react';\nimport AppState from '../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport ReviewCard from './ReviewCard'\n\nconst postsPerPage = 3;\nlet arrayForHoldingPosts = []\n\nconst SimilarVillages = ({rerender, uid, road, price, ...props}) => {\n  const context = React.useContext(AppState)\n\n  const [postsToShow, setPostsToShow] = React.useState([]);\n  const [next, setNext] = React.useState(3);\n\n  // const loopWithSlice = (start, end) => {\n  //   const slicedPosts = ReviewCard.slice(start, end);\n  //   arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\n  //   setPostsToShow(arrayForHoldingPosts);\n  // };\n\n  // const filteredVillages = context.filteredVillages\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price >= (price - price*0.2) && el.price <= (price + price*0.2))\n\n\n  const newArr = []\n  for (let i=0;i<filteredVillages.length;i++) {\n    if (newArr.length < 3) {\n    if (uid !== filteredVillages[i].uid) {\n      newArr.push(\n        <Grid item\n          key={'IpL'+filteredVillages[i].uname+i}\n          xs={12}\n          sm={6}\n          md={4}\n        > \n          <ReviewCard\n            type={filteredVillages[i].type}\n            uname={filteredVillages[i].uname}\n            name={filteredVillages[i].name}\n            bgs={filteredVillages[i].bgs}\n            road={filteredVillages[i].road}\n            fromMkad={filteredVillages[i].fromMkad}\n            price={filteredVillages[i].price}\n            leftLands={filteredVillages[i].leftLands}\n            priceLands={filteredVillages[i].priceLands}\n            sideOfMkad={filteredVillages[i].sideOfMkad}\n            communications={filteredVillages[i].communications}\n            rerender={rerender}\n          />\n        </Grid>\n      )\n    }\n    }\n  }\n  // eslint-disable-next-line no-lone-blocks\n  {if (filteredVillages.length < 2) {\n    return ''\n  }else {\n    return (\n        <>\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\n          <Grid container spacing={3} style={{justifyContent:'center'}}>\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\n            {newArr}\n            {/*</div>*/}\n          </Grid>\n        </>\n\n    )\n  }}\n\n}\n\nexport default SimilarVillages\n","import React from 'react'\nimport AppState from '../../AppState'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Page from '../../components/Page'\nimport SimilarVillages from '../../components/SimilarVillages'\n\nclass VillagePage extends React.Component {\n  static contextType = AppState\n  constructor(props) {\n    super(props)\n    this.state = {\n      render: ''\n    };\n  }\nrerender() {\n    this.setState({render: window.location.pathname})\n}\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n\n  render() {\n    const path = window.location.pathname\n    const uname = path.substr(9)\n    console.log('unamenew', uname)\n    let village = []\n\n    const villages = this.context.villages\n    for (let i=0;i<villages.length;i++) {\n      if (villages[i].uname === uname) {\n        village = villages[i]\n      }\n    }\n    this.context.selectedVillage = village.name\n\n    return (\n      <>\n        <Page village={village} />\n        <Container maxWidth='lg'\n          style={{\n            padding: '15px 0'\n          }}\n        >\n          {/*<h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>*/}\n          <Box m={2}>\n            <SimilarVillages rerender={this.rerender} uid={village.uid} road={village.road} price={village.price}/>\n          </Box>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default VillagePage\n"],"sourceRoot":""}